// Generated by @compas/code-gen
/* eslint-disable no-unused-vars */

import { isNil } from "@compas/stdlib";
import { isQueryPart } from "@compas/store";

/**
 * @typedef {{
 *   propertyPath: string,
 *   key: string,
 *   info: any,
 * }} InternalError
 */

/**
 * @template T
 * @typedef {import("@compas/stdlib").EitherN<T, InternalError>} EitherN
 */

const objectKeys1649918931 = new Set(["success"]);
const objectKeys1027736033 = new Set(["session"]);
const objectKeys1347962962 = new Set(["id", "createdAt"]);
const objectKeys592157009 = new Set(["refreshToken"]);
const objectKeys1221278603 = new Set(["accessToken", "refreshToken"]);
const objectKeys599447075 = new Set([
  "bucketName",
  "contentLength",
  "contentType",
  "name",
  "meta",
  "id",
  "createdAt",
  "updatedAt",
]);
const objectKeys2144828802 = new Set([
  "transforms",
  "transformedFromOriginal",
  "placeholderImage",
  "altText",
]);
const objectKeys1414433474 = new Set([
  "id",
  "name",
  "contentType",
  "url",
  "placeholderImage",
  "altText",
]);
const objectKeys1781782332 = new Set([
  "id",
  "isComplete",
  "priority",
  "scheduledAt",
  "name",
  "data",
  "retryCount",
  "handlerTimeout",
  "createdAt",
  "updatedAt",
]);
const objectKeys503384244 = new Set([
  "data",
  "checksum",
  "revokedAt",
  "id",
  "createdAt",
  "updatedAt",
]);
const objectKeys1337490931 = new Set([
  "expiresAt",
  "revokedAt",
  "createdAt",
  "id",
  "session",
  "refreshToken",
]);
const objectKeys2074494218 = new Set([
  "$raw",
  "$or",
  "id",
  "idNotEqual",
  "idIn",
  "idNotIn",
  "bucketName",
  "bucketNameNotEqual",
  "bucketNameIn",
  "bucketNameNotIn",
  "bucketNameLike",
  "bucketNameILike",
  "bucketNameNotLike",
  "createdAt",
  "createdAtNotEqual",
  "createdAtIn",
  "createdAtNotIn",
  "createdAtGreaterThan",
  "createdAtLowerThan",
  "createdAtIsNull",
  "createdAtIsNotNull",
  "updatedAt",
  "updatedAtNotEqual",
  "updatedAtIn",
  "updatedAtNotIn",
  "updatedAtGreaterThan",
  "updatedAtLowerThan",
  "updatedAtIsNull",
  "updatedAtIsNotNull",
]);
const objectKeys1257773835 = new Set([
  "$raw",
  "$or",
  "id",
  "idNotEqual",
  "idIn",
  "idNotIn",
  "idGreaterThan",
  "idLowerThan",
  "isComplete",
  "isCompleteIsNull",
  "isCompleteIsNotNull",
  "name",
  "nameNotEqual",
  "nameIn",
  "nameNotIn",
  "nameLike",
  "nameILike",
  "nameNotLike",
  "scheduledAt",
  "scheduledAtNotEqual",
  "scheduledAtIn",
  "scheduledAtNotIn",
  "scheduledAtGreaterThan",
  "scheduledAtLowerThan",
  "scheduledAtIsNull",
  "scheduledAtIsNotNull",
  "createdAt",
  "createdAtNotEqual",
  "createdAtIn",
  "createdAtNotIn",
  "createdAtGreaterThan",
  "createdAtLowerThan",
  "createdAtIsNull",
  "createdAtIsNotNull",
  "updatedAt",
  "updatedAtNotEqual",
  "updatedAtIn",
  "updatedAtNotIn",
  "updatedAtGreaterThan",
  "updatedAtLowerThan",
  "updatedAtIsNull",
  "updatedAtIsNotNull",
]);
const objectKeys1334934277 = new Set([
  "$raw",
  "$or",
  "id",
  "idNotEqual",
  "idIn",
  "idNotIn",
  "createdAt",
  "createdAtNotEqual",
  "createdAtIn",
  "createdAtNotIn",
  "createdAtGreaterThan",
  "createdAtLowerThan",
  "createdAtIsNull",
  "createdAtIsNotNull",
  "updatedAt",
  "updatedAtNotEqual",
  "updatedAtIn",
  "updatedAtNotIn",
  "updatedAtGreaterThan",
  "updatedAtLowerThan",
  "updatedAtIsNull",
  "updatedAtIsNotNull",
  "viaAccessTokens",
  "accessTokensNotExists",
]);
const objectKeys600974204 = new Set(["where", "limit", "offset"]);
const objectKeys1430489818 = new Set([
  "$raw",
  "$or",
  "id",
  "idNotEqual",
  "idIn",
  "idNotIn",
  "session",
  "sessionNotEqual",
  "sessionIn",
  "sessionNotIn",
  "expiresAt",
  "expiresAtNotEqual",
  "expiresAtIn",
  "expiresAtNotIn",
  "expiresAtGreaterThan",
  "expiresAtLowerThan",
  "refreshToken",
  "refreshTokenNotEqual",
  "refreshTokenIn",
  "refreshTokenNotIn",
  "refreshTokenIsNull",
  "refreshTokenIsNotNull",
  "revokedAt",
  "revokedAtNotEqual",
  "revokedAtIn",
  "revokedAtNotIn",
  "revokedAtGreaterThan",
  "revokedAtLowerThan",
  "revokedAtIsNull",
  "revokedAtIsNotNull",
  "viaSession",
  "viaRefreshToken",
  "viaAccessToken",
  "accessTokenNotExists",
]);
const objectKeys1577551207 = new Set(["where", "limit", "offset"]);
const objectKeys617486747 = new Set([
  "bucketName",
  "contentLength",
  "contentType",
  "name",
  "meta",
  "createdAt",
  "updatedAt",
]);
const objectKeys2007164840 = new Set(["$append"]);
const objectKeys1511542790 = new Set(["$add"]);
const objectKeys1442950861 = new Set(["$subtract"]);
const objectKeys553023933 = new Set(["$multiply"]);
const objectKeys661036808 = new Set(["$divide"]);
const objectKeys1476139765 = new Set(["$set"]);
const objectKeys1925201648 = new Set(["path", "value"]);
const objectKeys1462381984 = new Set(["$remove"]);
const objectKeys1247704095 = new Set(["path"]);
const objectKeys1992090661 = new Set(["$add"]);
const objectKeys962402990 = new Set(["$subtract"]);
const objectKeys165104378 = new Set(["update", "where", "returning"]);
const objectKeys600940900 = new Set([
  "isComplete",
  "priority",
  "scheduledAt",
  "name",
  "data",
  "retryCount",
  "handlerTimeout",
  "createdAt",
  "updatedAt",
]);
const objectKeys1802084014 = new Set(["$negate"]);
const objectKeys286367525 = new Set(["update", "where", "returning"]);
const objectKeys2102646924 = new Set([
  "data",
  "checksum",
  "revokedAt",
  "createdAt",
  "updatedAt",
]);
const objectKeys1516794677 = new Set(["update", "where", "returning"]);
const objectKeys84897941 = new Set([
  "expiresAt",
  "revokedAt",
  "createdAt",
  "session",
  "refreshToken",
]);
const objectKeys1345595702 = new Set(["update", "where", "returning"]);
const objectKeys163358845 = new Set([
  "id",
  "bucketName",
  "createdAt",
  "updatedAt",
]);
const objectKeys280827708 = new Set([
  "id",
  "isComplete",
  "name",
  "scheduledAt",
  "createdAt",
  "updatedAt",
]);
const objectKeys362930508 = new Set(["id", "createdAt", "updatedAt"]);
const objectKeys1864958291 = new Set([
  "id",
  "session",
  "expiresAt",
  "refreshToken",
  "revokedAt",
]);
const objectKeys310044624 = new Set([
  "where",
  "orderBy",
  "orderBySpec",
  "as",
  "limit",
  "offset",
  "select",
]);
const objectKeys343387919 = new Set([
  "where",
  "orderBy",
  "orderBySpec",
  "as",
  "limit",
  "offset",
  "select",
]);
const objectKeys2093168415 = new Set([
  "where",
  "orderBy",
  "orderBySpec",
  "as",
  "limit",
  "offset",
  "select",
  "accessTokens",
]);
const objectKeys1856722848 = new Set([
  "where",
  "orderBy",
  "orderBySpec",
  "as",
  "limit",
  "offset",
  "select",
  "session",
  "refreshToken",
  "accessToken",
]);
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<true>}
 */
export function anonymousValidator1006701760(value, propertyPath) {
  if (isNil(value)) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.boolean.undefined",
          info: {},
        },
      ],
    };
  }
  if (typeof value !== "boolean") {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.boolean.type",
          info: {},
        },
      ],
    };
  }
  if (value !== true) {
    const oneOf = true;
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.boolean.oneOf",
          info: { oneOf },
        },
      ],
    };
  }
  return { value };
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<{"success": true, }>}
 */
export function anonymousValidator1649918931(value, propertyPath) {
  if (isNil(value)) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.object.undefined",
          info: {},
        },
      ],
    };
  }
  if (typeof value !== "object") {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.object.type",
          info: {},
        },
      ],
    };
  }
  const result = Object.create(null);
  let errors = [];
  for (const key of Object.keys(value)) {
    if (!objectKeys1649918931.has(key)) {
      /** @type {{ errors: InternalError[] }} */
      return {
        errors: [
          {
            propertyPath,
            key: "validator.object.strict",
            info: {
              expectedKeys: [...objectKeys1649918931],
              foundKeys: [...Object.keys(value)],
            },
          },
        ],
      };
    }
  }
  {
    const validatorResult = anonymousValidator1006701760(
      value["success"],
      `${propertyPath}.success`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["success"] = validatorResult.value;
    }
  }
  if (errors.length > 0) {
    return { errors };
  }
  return { value: result };
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<string>}
 */
export function anonymousValidator981662321(value, propertyPath) {
  if (isNil(value)) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.string.undefined",
          info: {},
        },
      ],
    };
  }
  if (typeof value !== "string") {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.string.type",
          info: {},
        },
      ],
    };
  }
  value = value.trim();
  if (value.length < 36) {
    const min = 36;
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.string.min",
          info: { min },
        },
      ],
    };
  }
  if (value.length > 36) {
    const max = 36;
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.string.max",
          info: { max },
        },
      ],
    };
  }
  value = value.toLowerCase();
  if (
    !/^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[a-f0-9]{4}-[a-f0-9]{12}$/gi.test(
      value,
    )
  ) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.string.pattern",
          info: {},
        },
      ],
    };
  }
  return { value };
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<string>}
 */
export function anonymousValidator56355924(value, propertyPath) {
  if (isNil(value)) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.uuid.undefined",
          info: {},
        },
      ],
    };
  }
  return anonymousValidator981662321(value, propertyPath);
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<Date>}
 */
export function anonymousValidator448481401(value, propertyPath) {
  if (isNil(value)) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.date.undefined",
          info: {},
        },
      ],
    };
  }
  if (
    typeof value !== "string" &&
    typeof value !== "number" &&
    !(value instanceof Date)
  ) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.date.invalid",
          info: {},
        },
      ],
    };
  }
  const date = new Date(value);
  if (isNaN(date.getTime())) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.date.invalid",
          info: {},
        },
      ],
    };
  }
  return { value: date };
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<{"id": string, "createdAt": Date, }>}
 */
export function anonymousValidator1347962962(value, propertyPath) {
  if (isNil(value)) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.object.undefined",
          info: {},
        },
      ],
    };
  }
  if (typeof value !== "object") {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.object.type",
          info: {},
        },
      ],
    };
  }
  const result = Object.create(null);
  let errors = [];
  for (const key of Object.keys(value)) {
    if (!objectKeys1347962962.has(key)) {
      /** @type {{ errors: InternalError[] }} */
      return {
        errors: [
          {
            propertyPath,
            key: "validator.object.strict",
            info: {
              expectedKeys: [...objectKeys1347962962],
              foundKeys: [...Object.keys(value)],
            },
          },
        ],
      };
    }
  }
  {
    const validatorResult = anonymousValidator56355924(
      value["id"],
      `${propertyPath}.id`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["id"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator448481401(
      value["createdAt"],
      `${propertyPath}.createdAt`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["createdAt"] = validatorResult.value;
    }
  }
  if (errors.length > 0) {
    return { errors };
  }
  return { value: result };
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<AuthSession>}
 */
export function anonymousValidator2095268230(value, propertyPath) {
  if (isNil(value)) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.reference.undefined",
          info: {},
        },
      ],
    };
  }
  return anonymousValidator1347962962(value, propertyPath);
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<{"session": AuthSession, }>}
 */
export function anonymousValidator1027736033(value, propertyPath) {
  if (isNil(value)) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.object.undefined",
          info: {},
        },
      ],
    };
  }
  if (typeof value !== "object") {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.object.type",
          info: {},
        },
      ],
    };
  }
  const result = Object.create(null);
  let errors = [];
  for (const key of Object.keys(value)) {
    if (!objectKeys1027736033.has(key)) {
      /** @type {{ errors: InternalError[] }} */
      return {
        errors: [
          {
            propertyPath,
            key: "validator.object.strict",
            info: {
              expectedKeys: [...objectKeys1027736033],
              foundKeys: [...Object.keys(value)],
            },
          },
        ],
      };
    }
  }
  {
    const validatorResult = anonymousValidator2095268230(
      value["session"],
      `${propertyPath}.session`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["session"] = validatorResult.value;
    }
  }
  if (errors.length > 0) {
    return { errors };
  }
  return { value: result };
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<string>}
 */
export function anonymousValidator186795873(value, propertyPath) {
  if (isNil(value)) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.string.undefined",
          info: {},
        },
      ],
    };
  }
  if (typeof value !== "string") {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.string.type",
          info: {},
        },
      ],
    };
  }
  if (value.length < 1) {
    const min = 1;
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.string.min",
          info: { min },
        },
      ],
    };
  }
  return { value };
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<{"refreshToken": string, }>}
 */
export function anonymousValidator592157009(value, propertyPath) {
  if (isNil(value)) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.object.undefined",
          info: {},
        },
      ],
    };
  }
  if (typeof value !== "object") {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.object.type",
          info: {},
        },
      ],
    };
  }
  const result = Object.create(null);
  let errors = [];
  for (const key of Object.keys(value)) {
    if (!objectKeys592157009.has(key)) {
      /** @type {{ errors: InternalError[] }} */
      return {
        errors: [
          {
            propertyPath,
            key: "validator.object.strict",
            info: {
              expectedKeys: [...objectKeys592157009],
              foundKeys: [...Object.keys(value)],
            },
          },
        ],
      };
    }
  }
  {
    const validatorResult = anonymousValidator186795873(
      value["refreshToken"],
      `${propertyPath}.refreshToken`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["refreshToken"] = validatorResult.value;
    }
  }
  if (errors.length > 0) {
    return { errors };
  }
  return { value: result };
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<{"accessToken": string, "refreshToken": string, }>}
 */
export function anonymousValidator1221278603(value, propertyPath) {
  if (isNil(value)) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.object.undefined",
          info: {},
        },
      ],
    };
  }
  if (typeof value !== "object") {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.object.type",
          info: {},
        },
      ],
    };
  }
  const result = Object.create(null);
  let errors = [];
  for (const key of Object.keys(value)) {
    if (!objectKeys1221278603.has(key)) {
      /** @type {{ errors: InternalError[] }} */
      return {
        errors: [
          {
            propertyPath,
            key: "validator.object.strict",
            info: {
              expectedKeys: [...objectKeys1221278603],
              foundKeys: [...Object.keys(value)],
            },
          },
        ],
      };
    }
  }
  {
    const validatorResult = anonymousValidator186795873(
      value["accessToken"],
      `${propertyPath}.accessToken`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["accessToken"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator186795873(
      value["refreshToken"],
      `${propertyPath}.refreshToken`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["refreshToken"] = validatorResult.value;
    }
  }
  if (errors.length > 0) {
    return { errors };
  }
  return { value: result };
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<any>}
 */
export function anonymousValidator1177598259(value, propertyPath) {
  if (isNil(value)) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.any.undefined",
          info: {},
        },
      ],
    };
  }
  return { value };
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<"ASC"|"DESC">}
 */
export function anonymousValidator80886428(value, propertyPath) {
  if (isNil(value)) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.string.undefined",
          info: {},
        },
      ],
    };
  }
  if (typeof value !== "string") {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.string.type",
          info: {},
        },
      ],
    };
  }
  if (value.length < 1) {
    const min = 1;
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.string.min",
          info: { min },
        },
      ],
    };
  }
  if (value !== "ASC" && value !== "DESC") {
    const oneOf = ["ASC", "DESC"];
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.string.oneOf",
          info: { oneOf },
        },
      ],
    };
  }
  return { value };
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<"ASC"|"DESC"|"ASC NULLS FIRST"|"DESC NULLS LAST">}
 */
export function anonymousValidator293130468(value, propertyPath) {
  if (isNil(value)) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.string.undefined",
          info: {},
        },
      ],
    };
  }
  if (typeof value !== "string") {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.string.type",
          info: {},
        },
      ],
    };
  }
  if (value.length < 1) {
    const min = 1;
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.string.min",
          info: { min },
        },
      ],
    };
  }
  if (
    value !== "ASC" &&
    value !== "DESC" &&
    value !== "ASC NULLS FIRST" &&
    value !== "DESC NULLS LAST"
  ) {
    const oneOf = ["ASC", "DESC", "ASC NULLS FIRST", "DESC NULLS LAST"];
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.string.oneOf",
          info: { oneOf },
        },
      ],
    };
  }
  return { value };
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<string>}
 */
export function anonymousValidator1223600(value, propertyPath) {
  if (isNil(value)) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.string.undefined",
          info: {},
        },
      ],
    };
  }
  if (typeof value !== "string") {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.string.type",
          info: {},
        },
      ],
    };
  }
  if (value.length < 1) {
    const min = 1;
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.string.min",
          info: { min },
        },
      ],
    };
  }
  return { value };
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<number>}
 */
export function anonymousValidator251661297(value, propertyPath) {
  if (isNil(value)) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.number.undefined",
          info: {},
        },
      ],
    };
  }
  if (typeof value !== "number" || isNaN(value) || !isFinite(value)) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.number.type",
          info: {},
        },
      ],
    };
  }
  if (!Number.isInteger(value)) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.number.integer",
          info: {},
        },
      ],
    };
  }
  if (value < -2147483647) {
    const min = -2147483647;
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.number.min",
          info: { min },
        },
      ],
    };
  }
  if (value > 2147483647) {
    const max = 2147483647;
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.number.max",
          info: { max },
        },
      ],
    };
  }
  return { value };
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<undefined|any>}
 */
export function anonymousValidator555515758(value, propertyPath) {
  if (isNil(value)) {
    return { value: undefined };
  }
  return { value };
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<undefined|string>}
 */
export function anonymousValidator1182955981(value, propertyPath) {
  if (isNil(value)) {
    return { value: undefined };
  }
  if (typeof value !== "string") {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.string.type",
          info: {},
        },
      ],
    };
  }
  if (value.length === 0) {
    return {
      value: undefined,
    };
  }
  return { value };
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<{"transforms"?: undefined|any, "transformedFromOriginal"?: undefined|string, "placeholderImage"?: undefined|string, "altText"?: undefined|string, }>}
 */
export function anonymousValidator2144828802(value, propertyPath) {
  if (isNil(value)) {
    return { value: {} };
  }
  if (typeof value !== "object") {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.object.type",
          info: {},
        },
      ],
    };
  }
  const result = Object.create(null);
  let errors = [];
  for (const key of Object.keys(value)) {
    if (!objectKeys2144828802.has(key)) {
      /** @type {{ errors: InternalError[] }} */
      return {
        errors: [
          {
            propertyPath,
            key: "validator.object.strict",
            info: {
              expectedKeys: [...objectKeys2144828802],
              foundKeys: [...Object.keys(value)],
            },
          },
        ],
      };
    }
  }
  {
    const validatorResult = anonymousValidator555515758(
      value["transforms"],
      `${propertyPath}.transforms`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["transforms"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator1182955981(
      value["transformedFromOriginal"],
      `${propertyPath}.transformedFromOriginal`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["transformedFromOriginal"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator1182955981(
      value["placeholderImage"],
      `${propertyPath}.placeholderImage`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["placeholderImage"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator1182955981(
      value["altText"],
      `${propertyPath}.altText`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["altText"] = validatorResult.value;
    }
  }
  if (errors.length > 0) {
    return { errors };
  }
  return { value: result };
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<StoreFileMeta>}
 */
export function anonymousValidator329780902(value, propertyPath) {
  if (isNil(value)) {
    return { value: {} };
  }
  return anonymousValidator2144828802(value, propertyPath);
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<Date>}
 */
export function anonymousValidator1389014320(value, propertyPath) {
  if (isNil(value)) {
    return { value: new Date() };
  }
  if (
    typeof value !== "string" &&
    typeof value !== "number" &&
    !(value instanceof Date)
  ) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.date.invalid",
          info: {},
        },
      ],
    };
  }
  const date = new Date(value);
  if (isNaN(date.getTime())) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.date.invalid",
          info: {},
        },
      ],
    };
  }
  return { value: date };
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<{"bucketName": string, "contentLength": number, "contentType": string, "name": string, "meta": StoreFileMeta, "id": string, "createdAt": Date, "updatedAt": Date, }>}
 */
export function anonymousValidator599447075(value, propertyPath) {
  if (isNil(value)) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.object.undefined",
          info: {},
        },
      ],
    };
  }
  if (typeof value !== "object") {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.object.type",
          info: {},
        },
      ],
    };
  }
  const result = Object.create(null);
  let errors = [];
  for (const key of Object.keys(value)) {
    if (!objectKeys599447075.has(key)) {
      /** @type {{ errors: InternalError[] }} */
      return {
        errors: [
          {
            propertyPath,
            key: "validator.object.strict",
            info: {
              expectedKeys: [...objectKeys599447075],
              foundKeys: [...Object.keys(value)],
            },
          },
        ],
      };
    }
  }
  {
    const validatorResult = anonymousValidator1223600(
      value["bucketName"],
      `${propertyPath}.bucketName`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["bucketName"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator251661297(
      value["contentLength"],
      `${propertyPath}.contentLength`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["contentLength"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator1223600(
      value["contentType"],
      `${propertyPath}.contentType`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["contentType"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator1223600(
      value["name"],
      `${propertyPath}.name`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["name"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator329780902(
      value["meta"],
      `${propertyPath}.meta`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["meta"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator56355924(
      value["id"],
      `${propertyPath}.id`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["id"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator1389014320(
      value["createdAt"],
      `${propertyPath}.createdAt`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["createdAt"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator1389014320(
      value["updatedAt"],
      `${propertyPath}.updatedAt`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["updatedAt"] = validatorResult.value;
    }
  }
  if (errors.length > 0) {
    return { errors };
  }
  return { value: result };
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<string>}
 */
export function anonymousValidator655967377(value, propertyPath) {
  if (isNil(value)) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.uuid.undefined",
          info: {},
        },
      ],
    };
  }
  return anonymousValidator981662321(value, propertyPath);
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<{"id": string, "name": string, "contentType": string, "url": string, "placeholderImage"?: undefined|string, "altText"?: undefined|string, }>}
 */
export function anonymousValidator1414433474(value, propertyPath) {
  if (isNil(value)) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.object.undefined",
          info: {},
        },
      ],
    };
  }
  if (typeof value !== "object") {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.object.type",
          info: {},
        },
      ],
    };
  }
  const result = Object.create(null);
  let errors = [];
  for (const key of Object.keys(value)) {
    if (!objectKeys1414433474.has(key)) {
      /** @type {{ errors: InternalError[] }} */
      return {
        errors: [
          {
            propertyPath,
            key: "validator.object.strict",
            info: {
              expectedKeys: [...objectKeys1414433474],
              foundKeys: [...Object.keys(value)],
            },
          },
        ],
      };
    }
  }
  {
    const validatorResult = anonymousValidator655967377(
      value["id"],
      `${propertyPath}.id`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["id"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator1223600(
      value["name"],
      `${propertyPath}.name`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["name"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator1223600(
      value["contentType"],
      `${propertyPath}.contentType`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["contentType"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator1223600(
      value["url"],
      `${propertyPath}.url`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["url"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator1182955981(
      value["placeholderImage"],
      `${propertyPath}.placeholderImage`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["placeholderImage"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator1182955981(
      value["altText"],
      `${propertyPath}.altText`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["altText"] = validatorResult.value;
    }
  }
  if (errors.length > 0) {
    return { errors };
  }
  return { value: result };
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<number>}
 */
export function anonymousValidator854899802(value, propertyPath) {
  if (isNil(value)) {
    return { value: 75 };
  }
  if (typeof value !== "number") {
    value = Number(value);
  }
  if (typeof value !== "number" || isNaN(value) || !isFinite(value)) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.number.type",
          info: {},
        },
      ],
    };
  }
  if (!Number.isInteger(value)) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.number.integer",
          info: {},
        },
      ],
    };
  }
  if (value < 1) {
    const min = 1;
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.number.min",
          info: { min },
        },
      ],
    };
  }
  if (value > 100) {
    const max = 100;
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.number.max",
          info: { max },
        },
      ],
    };
  }
  return { value };
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<number>}
 */
export function anonymousValidator1008399025(value, propertyPath) {
  if (isNil(value)) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.number.undefined",
          info: {},
        },
      ],
    };
  }
  if (typeof value !== "number") {
    value = Number(value);
  }
  if (typeof value !== "number" || isNaN(value) || !isFinite(value)) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.number.type",
          info: {},
        },
      ],
    };
  }
  if (!Number.isInteger(value)) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.number.integer",
          info: {},
        },
      ],
    };
  }
  if (value < 1) {
    const min = 1;
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.number.min",
          info: { min },
        },
      ],
    };
  }
  if (value > 99999) {
    const max = 99999;
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.number.max",
          info: { max },
        },
      ],
    };
  }
  return { value };
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<{"q": number, "w": number, }>}
 */
export function anonymousValidator376443596(value, propertyPath) {
  if (isNil(value)) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.object.undefined",
          info: {},
        },
      ],
    };
  }
  if (typeof value !== "object") {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.object.type",
          info: {},
        },
      ],
    };
  }
  const result = Object.create(null);
  let errors = [];
  {
    const validatorResult = anonymousValidator854899802(
      value["q"],
      `${propertyPath}.q`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["q"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator1008399025(
      value["w"],
      `${propertyPath}.w`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["w"] = validatorResult.value;
    }
  }
  if (errors.length > 0) {
    return { errors };
  }
  return { value: result };
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<number>}
 */
export function anonymousValidator266721168(value, propertyPath) {
  if (isNil(value)) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.number.undefined",
          info: {},
        },
      ],
    };
  }
  if (typeof value !== "number") {
    value = Number(value);
  }
  if (typeof value !== "number" || isNaN(value) || !isFinite(value)) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.number.type",
          info: {},
        },
      ],
    };
  }
  if (!Number.isInteger(value)) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.number.integer",
          info: {},
        },
      ],
    };
  }
  if (value < -2147483647) {
    const min = -2147483647;
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.number.min",
          info: { min },
        },
      ],
    };
  }
  if (value > 2147483647) {
    const max = 2147483647;
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.number.max",
          info: { max },
        },
      ],
    };
  }
  return { value };
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<boolean>}
 */
export function anonymousValidator897743470(value, propertyPath) {
  if (isNil(value)) {
    return { value: false };
  }
  if (typeof value !== "boolean") {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.boolean.type",
          info: {},
        },
      ],
    };
  }
  return { value };
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<number>}
 */
export function anonymousValidator2799495(value, propertyPath) {
  if (isNil(value)) {
    return { value: 0 };
  }
  if (typeof value !== "number" || isNaN(value) || !isFinite(value)) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.number.type",
          info: {},
        },
      ],
    };
  }
  if (!Number.isInteger(value)) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.number.integer",
          info: {},
        },
      ],
    };
  }
  if (value < 0) {
    const min = 0;
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.number.min",
          info: { min },
        },
      ],
    };
  }
  return { value };
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<Date>}
 */
export function anonymousValidator845268601(value, propertyPath) {
  if (isNil(value)) {
    return { value: new Date() };
  }
  if (
    typeof value !== "string" &&
    typeof value !== "number" &&
    !(value instanceof Date)
  ) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.date.invalid",
          info: {},
        },
      ],
    };
  }
  const date = new Date(value);
  if (isNaN(date.getTime())) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.date.invalid",
          info: {},
        },
      ],
    };
  }
  return { value: date };
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<any>}
 */
export function anonymousValidator721172342(value, propertyPath) {
  if (isNil(value)) {
    return { value: {} };
  }
  return { value };
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<number>}
 */
export function anonymousValidator1983266932(value, propertyPath) {
  if (isNil(value)) {
    return { value: 0 };
  }
  if (typeof value !== "number" || isNaN(value) || !isFinite(value)) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.number.type",
          info: {},
        },
      ],
    };
  }
  if (!Number.isInteger(value)) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.number.integer",
          info: {},
        },
      ],
    };
  }
  if (value < -2147483647) {
    const min = -2147483647;
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.number.min",
          info: { min },
        },
      ],
    };
  }
  if (value > 2147483647) {
    const max = 2147483647;
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.number.max",
          info: { max },
        },
      ],
    };
  }
  return { value };
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<undefined|number>}
 */
export function anonymousValidator1615975470(value, propertyPath) {
  if (isNil(value)) {
    return { value: undefined };
  }
  if (typeof value !== "number" || isNaN(value) || !isFinite(value)) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.number.type",
          info: {},
        },
      ],
    };
  }
  if (!Number.isInteger(value)) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.number.integer",
          info: {},
        },
      ],
    };
  }
  if (value < 1000) {
    const min = 1000;
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.number.min",
          info: { min },
        },
      ],
    };
  }
  return { value };
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<{"id": number, "isComplete": boolean, "priority": number, "scheduledAt": Date, "name": string, "data": any, "retryCount": number, "handlerTimeout"?: undefined|number, "createdAt": Date, "updatedAt": Date, }>}
 */
export function anonymousValidator1781782332(value, propertyPath) {
  if (isNil(value)) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.object.undefined",
          info: {},
        },
      ],
    };
  }
  if (typeof value !== "object") {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.object.type",
          info: {},
        },
      ],
    };
  }
  const result = Object.create(null);
  let errors = [];
  for (const key of Object.keys(value)) {
    if (!objectKeys1781782332.has(key)) {
      /** @type {{ errors: InternalError[] }} */
      return {
        errors: [
          {
            propertyPath,
            key: "validator.object.strict",
            info: {
              expectedKeys: [...objectKeys1781782332],
              foundKeys: [...Object.keys(value)],
            },
          },
        ],
      };
    }
  }
  {
    const validatorResult = anonymousValidator266721168(
      value["id"],
      `${propertyPath}.id`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["id"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator897743470(
      value["isComplete"],
      `${propertyPath}.isComplete`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["isComplete"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator2799495(
      value["priority"],
      `${propertyPath}.priority`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["priority"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator845268601(
      value["scheduledAt"],
      `${propertyPath}.scheduledAt`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["scheduledAt"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator1223600(
      value["name"],
      `${propertyPath}.name`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["name"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator721172342(
      value["data"],
      `${propertyPath}.data`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["data"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator1983266932(
      value["retryCount"],
      `${propertyPath}.retryCount`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["retryCount"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator1615975470(
      value["handlerTimeout"],
      `${propertyPath}.handlerTimeout`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["handlerTimeout"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator1389014320(
      value["createdAt"],
      `${propertyPath}.createdAt`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["createdAt"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator1389014320(
      value["updatedAt"],
      `${propertyPath}.updatedAt`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["updatedAt"] = validatorResult.value;
    }
  }
  if (errors.length > 0) {
    return { errors };
  }
  return { value: result };
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<{"accessToken": string, "q": number, "w": number, }>}
 */
export function anonymousValidator1105075285(value, propertyPath) {
  if (isNil(value)) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.object.undefined",
          info: {},
        },
      ],
    };
  }
  if (typeof value !== "object") {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.object.type",
          info: {},
        },
      ],
    };
  }
  const result = Object.create(null);
  let errors = [];
  {
    const validatorResult = anonymousValidator1223600(
      value["accessToken"],
      `${propertyPath}.accessToken`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["accessToken"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator854899802(
      value["q"],
      `${propertyPath}.q`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["q"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator1008399025(
      value["w"],
      `${propertyPath}.w`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["w"] = validatorResult.value;
    }
  }
  if (errors.length > 0) {
    return { errors };
  }
  return { value: result };
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<undefined|Date>}
 */
export function anonymousValidator685440859(value, propertyPath) {
  if (isNil(value)) {
    return { value: undefined };
  }
  if (
    typeof value !== "string" &&
    typeof value !== "number" &&
    !(value instanceof Date)
  ) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.date.invalid",
          info: {},
        },
      ],
    };
  }
  const date = new Date(value);
  if (isNaN(date.getTime())) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.date.invalid",
          info: {},
        },
      ],
    };
  }
  return { value: date };
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<{"data": any, "checksum": string, "revokedAt"?: undefined|Date, "id": string, "createdAt": Date, "updatedAt": Date, }>}
 */
export function anonymousValidator503384244(value, propertyPath) {
  if (isNil(value)) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.object.undefined",
          info: {},
        },
      ],
    };
  }
  if (typeof value !== "object") {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.object.type",
          info: {},
        },
      ],
    };
  }
  const result = Object.create(null);
  let errors = [];
  for (const key of Object.keys(value)) {
    if (!objectKeys503384244.has(key)) {
      /** @type {{ errors: InternalError[] }} */
      return {
        errors: [
          {
            propertyPath,
            key: "validator.object.strict",
            info: {
              expectedKeys: [...objectKeys503384244],
              foundKeys: [...Object.keys(value)],
            },
          },
        ],
      };
    }
  }
  {
    const validatorResult = anonymousValidator721172342(
      value["data"],
      `${propertyPath}.data`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["data"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator1223600(
      value["checksum"],
      `${propertyPath}.checksum`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["checksum"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator685440859(
      value["revokedAt"],
      `${propertyPath}.revokedAt`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["revokedAt"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator56355924(
      value["id"],
      `${propertyPath}.id`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["id"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator1389014320(
      value["createdAt"],
      `${propertyPath}.createdAt`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["createdAt"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator1389014320(
      value["updatedAt"],
      `${propertyPath}.updatedAt`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["updatedAt"] = validatorResult.value;
    }
  }
  if (errors.length > 0) {
    return { errors };
  }
  return { value: result };
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<Date>}
 */
export function anonymousValidator1160804702(value, propertyPath) {
  if (isNil(value)) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.date.undefined",
          info: {},
        },
      ],
    };
  }
  if (
    typeof value !== "string" &&
    typeof value !== "number" &&
    !(value instanceof Date)
  ) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.date.invalid",
          info: {},
        },
      ],
    };
  }
  const date = new Date(value);
  if (isNaN(date.getTime())) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.date.invalid",
          info: {},
        },
      ],
    };
  }
  return { value: date };
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<undefined|string>}
 */
export function anonymousValidator1802076175(value, propertyPath) {
  if (isNil(value)) {
    return { value: undefined };
  }
  return anonymousValidator981662321(value, propertyPath);
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<{"expiresAt": Date, "revokedAt"?: undefined|Date, "createdAt": Date, "id": string, "session": string, "refreshToken"?: undefined|string, }>}
 */
export function anonymousValidator1337490931(value, propertyPath) {
  if (isNil(value)) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.object.undefined",
          info: {},
        },
      ],
    };
  }
  if (typeof value !== "object") {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.object.type",
          info: {},
        },
      ],
    };
  }
  const result = Object.create(null);
  let errors = [];
  for (const key of Object.keys(value)) {
    if (!objectKeys1337490931.has(key)) {
      /** @type {{ errors: InternalError[] }} */
      return {
        errors: [
          {
            propertyPath,
            key: "validator.object.strict",
            info: {
              expectedKeys: [...objectKeys1337490931],
              foundKeys: [...Object.keys(value)],
            },
          },
        ],
      };
    }
  }
  {
    const validatorResult = anonymousValidator1160804702(
      value["expiresAt"],
      `${propertyPath}.expiresAt`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["expiresAt"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator685440859(
      value["revokedAt"],
      `${propertyPath}.revokedAt`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["revokedAt"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator1160804702(
      value["createdAt"],
      `${propertyPath}.createdAt`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["createdAt"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator56355924(
      value["id"],
      `${propertyPath}.id`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["id"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator56355924(
      value["session"],
      `${propertyPath}.session`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["session"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator1802076175(
      value["refreshToken"],
      `${propertyPath}.refreshToken`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["refreshToken"] = validatorResult.value;
    }
  }
  if (errors.length > 0) {
    return { errors };
  }
  return { value: result };
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<undefined|QueryPart<any>>}
 */
export function anonymousValidator1930640707(value, propertyPath) {
  if (isNil(value)) {
    return { value: undefined };
  }
  if (!isQueryPart(value)) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.any.custom",
          info: {},
        },
      ],
    };
  }
  return { value };
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<undefined|(StoreFileWhere)[]>}
 */
export function anonymousValidator1804070323(value, propertyPath) {
  if (isNil(value)) {
    return { value: undefined };
  }
  if (!Array.isArray(value)) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.array.type",
          info: {},
        },
      ],
    };
  }
  const result = Array.from({ length: value.length });
  let errors = [];
  for (let i = 0; i < value.length; ++i) {
    const arrVar = anonymousValidator2074494218(
      value[i],
      propertyPath + "[" + i + "]",
    );
    if (arrVar.errors) {
      errors.push(...arrVar.errors);
    } else {
      result[i] = arrVar.value;
    }
  }
  if (errors.length > 0) {
    /** @type {{ errors: InternalError[] }} */
    return { errors };
  }
  return { value: result };
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<undefined|(string)[]>}
 */
export function anonymousValidator1899069927(value, propertyPath) {
  if (isNil(value)) {
    return { value: undefined };
  }
  if (!Array.isArray(value)) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.array.type",
          info: {},
        },
      ],
    };
  }
  const result = Array.from({ length: value.length });
  let errors = [];
  for (let i = 0; i < value.length; ++i) {
    const arrVar = anonymousValidator56355924(
      value[i],
      propertyPath + "[" + i + "]",
    );
    if (arrVar.errors) {
      errors.push(...arrVar.errors);
    } else {
      result[i] = arrVar.value;
    }
  }
  if (errors.length > 0) {
    /** @type {{ errors: InternalError[] }} */
    return { errors };
  }
  return { value: result };
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<undefined|(string)[]|QueryPart<any>>}
 */
export function anonymousValidator888270707(value, propertyPath) {
  if (isNil(value)) {
    return { value: undefined };
  }
  /** @type {InternalError[]} */
  let errors = [];
  /** @type {EitherN<undefined|(string)[]|QueryPart<any>>} */
  let result = { errors: [] };
  result = anonymousValidator1899069927(value, propertyPath);
  if (result.errors) {
    errors.push(result.errors[0]);
  } else {
    return result;
  }
  result = anonymousValidator1930640707(value, propertyPath);
  if (result.errors) {
    errors.push(result.errors[0]);
  } else {
    return result;
  }
  for (const err of errors) {
    err.info.via = "validator.anyOf";
  }
  return {
    errors,
  };
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<undefined|(string)[]>}
 */
export function anonymousValidator147319797(value, propertyPath) {
  if (isNil(value)) {
    return { value: undefined };
  }
  if (!Array.isArray(value)) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.array.type",
          info: {},
        },
      ],
    };
  }
  const result = Array.from({ length: value.length });
  let errors = [];
  for (let i = 0; i < value.length; ++i) {
    const arrVar = anonymousValidator1223600(
      value[i],
      propertyPath + "[" + i + "]",
    );
    if (arrVar.errors) {
      errors.push(...arrVar.errors);
    } else {
      result[i] = arrVar.value;
    }
  }
  if (errors.length > 0) {
    /** @type {{ errors: InternalError[] }} */
    return { errors };
  }
  return { value: result };
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<undefined|(string)[]|QueryPart<any>>}
 */
export function anonymousValidator131623529(value, propertyPath) {
  if (isNil(value)) {
    return { value: undefined };
  }
  /** @type {InternalError[]} */
  let errors = [];
  /** @type {EitherN<undefined|(string)[]|QueryPart<any>>} */
  let result = { errors: [] };
  result = anonymousValidator147319797(value, propertyPath);
  if (result.errors) {
    errors.push(result.errors[0]);
  } else {
    return result;
  }
  result = anonymousValidator1930640707(value, propertyPath);
  if (result.errors) {
    errors.push(result.errors[0]);
  } else {
    return result;
  }
  for (const err of errors) {
    err.info.via = "validator.anyOf";
  }
  return {
    errors,
  };
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<undefined|Date>}
 */
export function anonymousValidator1988053796(value, propertyPath) {
  if (isNil(value)) {
    return { value: undefined };
  }
  if (
    typeof value !== "string" &&
    typeof value !== "number" &&
    !(value instanceof Date)
  ) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.date.invalid",
          info: {},
        },
      ],
    };
  }
  const date = new Date(value);
  if (isNaN(date.getTime())) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.date.invalid",
          info: {},
        },
      ],
    };
  }
  return { value: date };
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<undefined|(Date)[]>}
 */
export function anonymousValidator1891060044(value, propertyPath) {
  if (isNil(value)) {
    return { value: undefined };
  }
  if (!Array.isArray(value)) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.array.type",
          info: {},
        },
      ],
    };
  }
  const result = Array.from({ length: value.length });
  let errors = [];
  for (let i = 0; i < value.length; ++i) {
    const arrVar = anonymousValidator448481401(
      value[i],
      propertyPath + "[" + i + "]",
    );
    if (arrVar.errors) {
      errors.push(...arrVar.errors);
    } else {
      result[i] = arrVar.value;
    }
  }
  if (errors.length > 0) {
    /** @type {{ errors: InternalError[] }} */
    return { errors };
  }
  return { value: result };
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<undefined|(Date)[]|QueryPart<any>>}
 */
export function anonymousValidator764760480(value, propertyPath) {
  if (isNil(value)) {
    return { value: undefined };
  }
  /** @type {InternalError[]} */
  let errors = [];
  /** @type {EitherN<undefined|(Date)[]|QueryPart<any>>} */
  let result = { errors: [] };
  result = anonymousValidator1891060044(value, propertyPath);
  if (result.errors) {
    errors.push(result.errors[0]);
  } else {
    return result;
  }
  result = anonymousValidator1930640707(value, propertyPath);
  if (result.errors) {
    errors.push(result.errors[0]);
  } else {
    return result;
  }
  for (const err of errors) {
    err.info.via = "validator.anyOf";
  }
  return {
    errors,
  };
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<undefined|boolean>}
 */
export function anonymousValidator196147222(value, propertyPath) {
  if (isNil(value)) {
    return { value: undefined };
  }
  if (typeof value !== "boolean") {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.boolean.type",
          info: {},
        },
      ],
    };
  }
  return { value };
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<{"$raw"?: undefined|QueryPart<any>, "$or"?: undefined|(StoreFileWhere)[], "id"?: undefined|string, "idNotEqual"?: undefined|string, "idIn"?: undefined|(string)[]|QueryPart<any>, "idNotIn"?: undefined|(string)[]|QueryPart<any>, "bucketName"?: undefined|string, "bucketNameNotEqual"?: undefined|string, "bucketNameIn"?: undefined|(string)[]|QueryPart<any>, "bucketNameNotIn"?: undefined|(string)[]|QueryPart<any>, "bucketNameLike"?: undefined|string, "bucketNameILike"?: undefined|string, "bucketNameNotLike"?: undefined|string, "createdAt"?: undefined|Date, "createdAtNotEqual"?: undefined|Date, "createdAtIn"?: undefined|(Date)[]|QueryPart<any>, "createdAtNotIn"?: undefined|(Date)[]|QueryPart<any>, "createdAtGreaterThan"?: undefined|Date, "createdAtLowerThan"?: undefined|Date, "createdAtIsNull"?: undefined|boolean, "createdAtIsNotNull"?: undefined|boolean, "updatedAt"?: undefined|Date, "updatedAtNotEqual"?: undefined|Date, "updatedAtIn"?: undefined|(Date)[]|QueryPart<any>, "updatedAtNotIn"?: undefined|(Date)[]|QueryPart<any>, "updatedAtGreaterThan"?: undefined|Date, "updatedAtLowerThan"?: undefined|Date, "updatedAtIsNull"?: undefined|boolean, "updatedAtIsNotNull"?: undefined|boolean, }>}
 */
export function anonymousValidator2074494218(value, propertyPath) {
  if (isNil(value)) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.object.undefined",
          info: {},
        },
      ],
    };
  }
  if (typeof value !== "object") {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.object.type",
          info: {},
        },
      ],
    };
  }
  const result = Object.create(null);
  let errors = [];
  for (const key of Object.keys(value)) {
    if (!objectKeys2074494218.has(key)) {
      /** @type {{ errors: InternalError[] }} */
      return {
        errors: [
          {
            propertyPath,
            key: "validator.object.strict",
            info: {
              expectedKeys: [...objectKeys2074494218],
              foundKeys: [...Object.keys(value)],
            },
          },
        ],
      };
    }
  }
  {
    const validatorResult = anonymousValidator1930640707(
      value["$raw"],
      `${propertyPath}.$raw`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["$raw"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator1804070323(
      value["$or"],
      `${propertyPath}.$or`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["$or"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator1802076175(
      value["id"],
      `${propertyPath}.id`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["id"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator1802076175(
      value["idNotEqual"],
      `${propertyPath}.idNotEqual`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["idNotEqual"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator888270707(
      value["idIn"],
      `${propertyPath}.idIn`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["idIn"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator888270707(
      value["idNotIn"],
      `${propertyPath}.idNotIn`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["idNotIn"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator1182955981(
      value["bucketName"],
      `${propertyPath}.bucketName`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["bucketName"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator1182955981(
      value["bucketNameNotEqual"],
      `${propertyPath}.bucketNameNotEqual`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["bucketNameNotEqual"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator131623529(
      value["bucketNameIn"],
      `${propertyPath}.bucketNameIn`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["bucketNameIn"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator131623529(
      value["bucketNameNotIn"],
      `${propertyPath}.bucketNameNotIn`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["bucketNameNotIn"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator1182955981(
      value["bucketNameLike"],
      `${propertyPath}.bucketNameLike`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["bucketNameLike"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator1182955981(
      value["bucketNameILike"],
      `${propertyPath}.bucketNameILike`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["bucketNameILike"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator1182955981(
      value["bucketNameNotLike"],
      `${propertyPath}.bucketNameNotLike`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["bucketNameNotLike"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator1988053796(
      value["createdAt"],
      `${propertyPath}.createdAt`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["createdAt"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator1988053796(
      value["createdAtNotEqual"],
      `${propertyPath}.createdAtNotEqual`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["createdAtNotEqual"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator764760480(
      value["createdAtIn"],
      `${propertyPath}.createdAtIn`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["createdAtIn"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator764760480(
      value["createdAtNotIn"],
      `${propertyPath}.createdAtNotIn`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["createdAtNotIn"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator1988053796(
      value["createdAtGreaterThan"],
      `${propertyPath}.createdAtGreaterThan`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["createdAtGreaterThan"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator1988053796(
      value["createdAtLowerThan"],
      `${propertyPath}.createdAtLowerThan`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["createdAtLowerThan"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator196147222(
      value["createdAtIsNull"],
      `${propertyPath}.createdAtIsNull`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["createdAtIsNull"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator196147222(
      value["createdAtIsNotNull"],
      `${propertyPath}.createdAtIsNotNull`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["createdAtIsNotNull"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator1988053796(
      value["updatedAt"],
      `${propertyPath}.updatedAt`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["updatedAt"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator1988053796(
      value["updatedAtNotEqual"],
      `${propertyPath}.updatedAtNotEqual`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["updatedAtNotEqual"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator764760480(
      value["updatedAtIn"],
      `${propertyPath}.updatedAtIn`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["updatedAtIn"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator764760480(
      value["updatedAtNotIn"],
      `${propertyPath}.updatedAtNotIn`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["updatedAtNotIn"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator1988053796(
      value["updatedAtGreaterThan"],
      `${propertyPath}.updatedAtGreaterThan`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["updatedAtGreaterThan"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator1988053796(
      value["updatedAtLowerThan"],
      `${propertyPath}.updatedAtLowerThan`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["updatedAtLowerThan"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator196147222(
      value["updatedAtIsNull"],
      `${propertyPath}.updatedAtIsNull`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["updatedAtIsNull"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator196147222(
      value["updatedAtIsNotNull"],
      `${propertyPath}.updatedAtIsNotNull`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["updatedAtIsNotNull"] = validatorResult.value;
    }
  }
  if (errors.length > 0) {
    return { errors };
  }
  return { value: result };
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<undefined|(StoreJobWhere)[]>}
 */
export function anonymousValidator807003800(value, propertyPath) {
  if (isNil(value)) {
    return { value: undefined };
  }
  if (!Array.isArray(value)) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.array.type",
          info: {},
        },
      ],
    };
  }
  const result = Array.from({ length: value.length });
  let errors = [];
  for (let i = 0; i < value.length; ++i) {
    const arrVar = anonymousValidator1257773835(
      value[i],
      propertyPath + "[" + i + "]",
    );
    if (arrVar.errors) {
      errors.push(...arrVar.errors);
    } else {
      result[i] = arrVar.value;
    }
  }
  if (errors.length > 0) {
    /** @type {{ errors: InternalError[] }} */
    return { errors };
  }
  return { value: result };
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<undefined|number>}
 */
export function anonymousValidator644242765(value, propertyPath) {
  if (isNil(value)) {
    return { value: undefined };
  }
  if (typeof value !== "number") {
    value = Number(value);
  }
  if (typeof value !== "number" || isNaN(value) || !isFinite(value)) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.number.type",
          info: {},
        },
      ],
    };
  }
  if (!Number.isInteger(value)) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.number.integer",
          info: {},
        },
      ],
    };
  }
  if (value < -2147483647) {
    const min = -2147483647;
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.number.min",
          info: { min },
        },
      ],
    };
  }
  if (value > 2147483647) {
    const max = 2147483647;
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.number.max",
          info: { max },
        },
      ],
    };
  }
  return { value };
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<undefined|(number)[]>}
 */
export function anonymousValidator1924576373(value, propertyPath) {
  if (isNil(value)) {
    return { value: undefined };
  }
  if (!Array.isArray(value)) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.array.type",
          info: {},
        },
      ],
    };
  }
  const result = Array.from({ length: value.length });
  let errors = [];
  for (let i = 0; i < value.length; ++i) {
    const arrVar = anonymousValidator266721168(
      value[i],
      propertyPath + "[" + i + "]",
    );
    if (arrVar.errors) {
      errors.push(...arrVar.errors);
    } else {
      result[i] = arrVar.value;
    }
  }
  if (errors.length > 0) {
    /** @type {{ errors: InternalError[] }} */
    return { errors };
  }
  return { value: result };
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<undefined|(number)[]|QueryPart<any>>}
 */
export function anonymousValidator1247024978(value, propertyPath) {
  if (isNil(value)) {
    return { value: undefined };
  }
  /** @type {InternalError[]} */
  let errors = [];
  /** @type {EitherN<undefined|(number)[]|QueryPart<any>>} */
  let result = { errors: [] };
  result = anonymousValidator1924576373(value, propertyPath);
  if (result.errors) {
    errors.push(result.errors[0]);
  } else {
    return result;
  }
  result = anonymousValidator1930640707(value, propertyPath);
  if (result.errors) {
    errors.push(result.errors[0]);
  } else {
    return result;
  }
  for (const err of errors) {
    err.info.via = "validator.anyOf";
  }
  return {
    errors,
  };
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<undefined|boolean>}
 */
export function anonymousValidator510366599(value, propertyPath) {
  if (isNil(value)) {
    return { value: undefined };
  }
  if (typeof value !== "boolean") {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.boolean.type",
          info: {},
        },
      ],
    };
  }
  return { value };
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<undefined|(Date)[]>}
 */
export function anonymousValidator653531005(value, propertyPath) {
  if (isNil(value)) {
    return { value: undefined };
  }
  if (!Array.isArray(value)) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.array.type",
          info: {},
        },
      ],
    };
  }
  const result = Array.from({ length: value.length });
  let errors = [];
  for (let i = 0; i < value.length; ++i) {
    const arrVar = anonymousValidator1160804702(
      value[i],
      propertyPath + "[" + i + "]",
    );
    if (arrVar.errors) {
      errors.push(...arrVar.errors);
    } else {
      result[i] = arrVar.value;
    }
  }
  if (errors.length > 0) {
    /** @type {{ errors: InternalError[] }} */
    return { errors };
  }
  return { value: result };
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<undefined|(Date)[]|QueryPart<any>>}
 */
export function anonymousValidator1053722775(value, propertyPath) {
  if (isNil(value)) {
    return { value: undefined };
  }
  /** @type {InternalError[]} */
  let errors = [];
  /** @type {EitherN<undefined|(Date)[]|QueryPart<any>>} */
  let result = { errors: [] };
  result = anonymousValidator653531005(value, propertyPath);
  if (result.errors) {
    errors.push(result.errors[0]);
  } else {
    return result;
  }
  result = anonymousValidator1930640707(value, propertyPath);
  if (result.errors) {
    errors.push(result.errors[0]);
  } else {
    return result;
  }
  for (const err of errors) {
    err.info.via = "validator.anyOf";
  }
  return {
    errors,
  };
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<{"$raw"?: undefined|QueryPart<any>, "$or"?: undefined|(StoreJobWhere)[], "id"?: undefined|number, "idNotEqual"?: undefined|number, "idIn"?: undefined|(number)[]|QueryPart<any>, "idNotIn"?: undefined|(number)[]|QueryPart<any>, "idGreaterThan"?: undefined|number, "idLowerThan"?: undefined|number, "isComplete"?: undefined|boolean, "isCompleteIsNull"?: undefined|boolean, "isCompleteIsNotNull"?: undefined|boolean, "name"?: undefined|string, "nameNotEqual"?: undefined|string, "nameIn"?: undefined|(string)[]|QueryPart<any>, "nameNotIn"?: undefined|(string)[]|QueryPart<any>, "nameLike"?: undefined|string, "nameILike"?: undefined|string, "nameNotLike"?: undefined|string, "scheduledAt"?: undefined|Date, "scheduledAtNotEqual"?: undefined|Date, "scheduledAtIn"?: undefined|(Date)[]|QueryPart<any>, "scheduledAtNotIn"?: undefined|(Date)[]|QueryPart<any>, "scheduledAtGreaterThan"?: undefined|Date, "scheduledAtLowerThan"?: undefined|Date, "scheduledAtIsNull"?: undefined|boolean, "scheduledAtIsNotNull"?: undefined|boolean, "createdAt"?: undefined|Date, "createdAtNotEqual"?: undefined|Date, "createdAtIn"?: undefined|(Date)[]|QueryPart<any>, "createdAtNotIn"?: undefined|(Date)[]|QueryPart<any>, "createdAtGreaterThan"?: undefined|Date, "createdAtLowerThan"?: undefined|Date, "createdAtIsNull"?: undefined|boolean, "createdAtIsNotNull"?: undefined|boolean, "updatedAt"?: undefined|Date, "updatedAtNotEqual"?: undefined|Date, "updatedAtIn"?: undefined|(Date)[]|QueryPart<any>, "updatedAtNotIn"?: undefined|(Date)[]|QueryPart<any>, "updatedAtGreaterThan"?: undefined|Date, "updatedAtLowerThan"?: undefined|Date, "updatedAtIsNull"?: undefined|boolean, "updatedAtIsNotNull"?: undefined|boolean, }>}
 */
export function anonymousValidator1257773835(value, propertyPath) {
  if (isNil(value)) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.object.undefined",
          info: {},
        },
      ],
    };
  }
  if (typeof value !== "object") {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.object.type",
          info: {},
        },
      ],
    };
  }
  const result = Object.create(null);
  let errors = [];
  for (const key of Object.keys(value)) {
    if (!objectKeys1257773835.has(key)) {
      /** @type {{ errors: InternalError[] }} */
      return {
        errors: [
          {
            propertyPath,
            key: "validator.object.strict",
            info: {
              expectedKeys: [...objectKeys1257773835],
              foundKeys: [...Object.keys(value)],
            },
          },
        ],
      };
    }
  }
  {
    const validatorResult = anonymousValidator1930640707(
      value["$raw"],
      `${propertyPath}.$raw`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["$raw"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator807003800(
      value["$or"],
      `${propertyPath}.$or`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["$or"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator644242765(
      value["id"],
      `${propertyPath}.id`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["id"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator644242765(
      value["idNotEqual"],
      `${propertyPath}.idNotEqual`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["idNotEqual"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator1247024978(
      value["idIn"],
      `${propertyPath}.idIn`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["idIn"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator1247024978(
      value["idNotIn"],
      `${propertyPath}.idNotIn`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["idNotIn"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator644242765(
      value["idGreaterThan"],
      `${propertyPath}.idGreaterThan`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["idGreaterThan"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator644242765(
      value["idLowerThan"],
      `${propertyPath}.idLowerThan`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["idLowerThan"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator510366599(
      value["isComplete"],
      `${propertyPath}.isComplete`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["isComplete"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator196147222(
      value["isCompleteIsNull"],
      `${propertyPath}.isCompleteIsNull`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["isCompleteIsNull"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator196147222(
      value["isCompleteIsNotNull"],
      `${propertyPath}.isCompleteIsNotNull`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["isCompleteIsNotNull"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator1182955981(
      value["name"],
      `${propertyPath}.name`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["name"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator1182955981(
      value["nameNotEqual"],
      `${propertyPath}.nameNotEqual`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["nameNotEqual"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator131623529(
      value["nameIn"],
      `${propertyPath}.nameIn`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["nameIn"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator131623529(
      value["nameNotIn"],
      `${propertyPath}.nameNotIn`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["nameNotIn"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator1182955981(
      value["nameLike"],
      `${propertyPath}.nameLike`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["nameLike"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator1182955981(
      value["nameILike"],
      `${propertyPath}.nameILike`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["nameILike"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator1182955981(
      value["nameNotLike"],
      `${propertyPath}.nameNotLike`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["nameNotLike"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator685440859(
      value["scheduledAt"],
      `${propertyPath}.scheduledAt`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["scheduledAt"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator685440859(
      value["scheduledAtNotEqual"],
      `${propertyPath}.scheduledAtNotEqual`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["scheduledAtNotEqual"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator1053722775(
      value["scheduledAtIn"],
      `${propertyPath}.scheduledAtIn`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["scheduledAtIn"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator1053722775(
      value["scheduledAtNotIn"],
      `${propertyPath}.scheduledAtNotIn`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["scheduledAtNotIn"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator685440859(
      value["scheduledAtGreaterThan"],
      `${propertyPath}.scheduledAtGreaterThan`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["scheduledAtGreaterThan"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator685440859(
      value["scheduledAtLowerThan"],
      `${propertyPath}.scheduledAtLowerThan`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["scheduledAtLowerThan"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator196147222(
      value["scheduledAtIsNull"],
      `${propertyPath}.scheduledAtIsNull`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["scheduledAtIsNull"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator196147222(
      value["scheduledAtIsNotNull"],
      `${propertyPath}.scheduledAtIsNotNull`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["scheduledAtIsNotNull"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator1988053796(
      value["createdAt"],
      `${propertyPath}.createdAt`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["createdAt"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator1988053796(
      value["createdAtNotEqual"],
      `${propertyPath}.createdAtNotEqual`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["createdAtNotEqual"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator764760480(
      value["createdAtIn"],
      `${propertyPath}.createdAtIn`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["createdAtIn"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator764760480(
      value["createdAtNotIn"],
      `${propertyPath}.createdAtNotIn`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["createdAtNotIn"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator1988053796(
      value["createdAtGreaterThan"],
      `${propertyPath}.createdAtGreaterThan`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["createdAtGreaterThan"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator1988053796(
      value["createdAtLowerThan"],
      `${propertyPath}.createdAtLowerThan`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["createdAtLowerThan"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator196147222(
      value["createdAtIsNull"],
      `${propertyPath}.createdAtIsNull`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["createdAtIsNull"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator196147222(
      value["createdAtIsNotNull"],
      `${propertyPath}.createdAtIsNotNull`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["createdAtIsNotNull"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator1988053796(
      value["updatedAt"],
      `${propertyPath}.updatedAt`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["updatedAt"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator1988053796(
      value["updatedAtNotEqual"],
      `${propertyPath}.updatedAtNotEqual`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["updatedAtNotEqual"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator764760480(
      value["updatedAtIn"],
      `${propertyPath}.updatedAtIn`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["updatedAtIn"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator764760480(
      value["updatedAtNotIn"],
      `${propertyPath}.updatedAtNotIn`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["updatedAtNotIn"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator1988053796(
      value["updatedAtGreaterThan"],
      `${propertyPath}.updatedAtGreaterThan`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["updatedAtGreaterThan"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator1988053796(
      value["updatedAtLowerThan"],
      `${propertyPath}.updatedAtLowerThan`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["updatedAtLowerThan"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator196147222(
      value["updatedAtIsNull"],
      `${propertyPath}.updatedAtIsNull`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["updatedAtIsNull"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator196147222(
      value["updatedAtIsNotNull"],
      `${propertyPath}.updatedAtIsNotNull`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["updatedAtIsNotNull"] = validatorResult.value;
    }
  }
  if (errors.length > 0) {
    return { errors };
  }
  return { value: result };
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<undefined|(StoreSessionStoreWhere)[]>}
 */
export function anonymousValidator51142462(value, propertyPath) {
  if (isNil(value)) {
    return { value: undefined };
  }
  if (!Array.isArray(value)) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.array.type",
          info: {},
        },
      ],
    };
  }
  const result = Array.from({ length: value.length });
  let errors = [];
  for (let i = 0; i < value.length; ++i) {
    const arrVar = anonymousValidator1334934277(
      value[i],
      propertyPath + "[" + i + "]",
    );
    if (arrVar.errors) {
      errors.push(...arrVar.errors);
    } else {
      result[i] = arrVar.value;
    }
  }
  if (errors.length > 0) {
    /** @type {{ errors: InternalError[] }} */
    return { errors };
  }
  return { value: result };
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<undefined|(StoreSessionStoreTokenWhere)[]>}
 */
export function anonymousValidator1886215561(value, propertyPath) {
  if (isNil(value)) {
    return { value: undefined };
  }
  if (!Array.isArray(value)) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.array.type",
          info: {},
        },
      ],
    };
  }
  const result = Array.from({ length: value.length });
  let errors = [];
  for (let i = 0; i < value.length; ++i) {
    const arrVar = anonymousValidator1430489818(
      value[i],
      propertyPath + "[" + i + "]",
    );
    if (arrVar.errors) {
      errors.push(...arrVar.errors);
    } else {
      result[i] = arrVar.value;
    }
  }
  if (errors.length > 0) {
    /** @type {{ errors: InternalError[] }} */
    return { errors };
  }
  return { value: result };
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<undefined|StoreSessionStoreWhere>}
 */
export function anonymousValidator1582696858(value, propertyPath) {
  if (isNil(value)) {
    return { value: undefined };
  }
  return anonymousValidator1334934277(value, propertyPath);
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<undefined|number>}
 */
export function anonymousValidator963028965(value, propertyPath) {
  if (isNil(value)) {
    return { value: undefined };
  }
  if (typeof value !== "number" || isNaN(value) || !isFinite(value)) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.number.type",
          info: {},
        },
      ],
    };
  }
  if (!Number.isInteger(value)) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.number.integer",
          info: {},
        },
      ],
    };
  }
  if (value < -2147483647) {
    const min = -2147483647;
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.number.min",
          info: { min },
        },
      ],
    };
  }
  if (value > 2147483647) {
    const max = 2147483647;
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.number.max",
          info: { max },
        },
      ],
    };
  }
  return { value };
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<undefined|{"where"?: undefined|StoreSessionStoreWhere, "limit"?: undefined|number, "offset"?: undefined|number, }>}
 */
export function anonymousValidator1577551207(value, propertyPath) {
  if (isNil(value)) {
    return { value: undefined };
  }
  if (typeof value !== "object") {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.object.type",
          info: {},
        },
      ],
    };
  }
  const result = Object.create(null);
  let errors = [];
  for (const key of Object.keys(value)) {
    if (!objectKeys1577551207.has(key)) {
      /** @type {{ errors: InternalError[] }} */
      return {
        errors: [
          {
            propertyPath,
            key: "validator.object.strict",
            info: {
              expectedKeys: [...objectKeys1577551207],
              foundKeys: [...Object.keys(value)],
            },
          },
        ],
      };
    }
  }
  {
    const validatorResult = anonymousValidator1582696858(
      value["where"],
      `${propertyPath}.where`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["where"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator963028965(
      value["limit"],
      `${propertyPath}.limit`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["limit"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator963028965(
      value["offset"],
      `${propertyPath}.offset`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["offset"] = validatorResult.value;
    }
  }
  if (errors.length > 0) {
    return { errors };
  }
  return { value: result };
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<{"$raw"?: undefined|QueryPart<any>, "$or"?: undefined|(StoreSessionStoreTokenWhere)[], "id"?: undefined|string, "idNotEqual"?: undefined|string, "idIn"?: undefined|(string)[]|QueryPart<any>, "idNotIn"?: undefined|(string)[]|QueryPart<any>, "session"?: undefined|string, "sessionNotEqual"?: undefined|string, "sessionIn"?: undefined|(string)[]|QueryPart<any>, "sessionNotIn"?: undefined|(string)[]|QueryPart<any>, "expiresAt"?: undefined|Date, "expiresAtNotEqual"?: undefined|Date, "expiresAtIn"?: undefined|(Date)[]|QueryPart<any>, "expiresAtNotIn"?: undefined|(Date)[]|QueryPart<any>, "expiresAtGreaterThan"?: undefined|Date, "expiresAtLowerThan"?: undefined|Date, "refreshToken"?: undefined|string, "refreshTokenNotEqual"?: undefined|string, "refreshTokenIn"?: undefined|(string)[]|QueryPart<any>, "refreshTokenNotIn"?: undefined|(string)[]|QueryPart<any>, "refreshTokenIsNull"?: undefined|boolean, "refreshTokenIsNotNull"?: undefined|boolean, "revokedAt"?: undefined|Date, "revokedAtNotEqual"?: undefined|Date, "revokedAtIn"?: undefined|(Date)[]|QueryPart<any>, "revokedAtNotIn"?: undefined|(Date)[]|QueryPart<any>, "revokedAtGreaterThan"?: undefined|Date, "revokedAtLowerThan"?: undefined|Date, "revokedAtIsNull"?: undefined|boolean, "revokedAtIsNotNull"?: undefined|boolean, "viaSession"?: undefined|{"where"?: undefined|StoreSessionStoreWhere, "limit"?: undefined|number, "offset"?: undefined|number, }, "viaRefreshToken"?: undefined|{"where"?: undefined|StoreSessionStoreTokenWhere, "limit"?: undefined|number, "offset"?: undefined|number, }, "viaAccessToken"?: undefined|{"where"?: undefined|StoreSessionStoreTokenWhere, "limit"?: undefined|number, "offset"?: undefined|number, }, "accessTokenNotExists"?: undefined|StoreSessionStoreTokenWhere, }>}
 */
export function anonymousValidator1430489818(value, propertyPath) {
  if (isNil(value)) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.object.undefined",
          info: {},
        },
      ],
    };
  }
  if (typeof value !== "object") {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.object.type",
          info: {},
        },
      ],
    };
  }
  const result = Object.create(null);
  let errors = [];
  for (const key of Object.keys(value)) {
    if (!objectKeys1430489818.has(key)) {
      /** @type {{ errors: InternalError[] }} */
      return {
        errors: [
          {
            propertyPath,
            key: "validator.object.strict",
            info: {
              expectedKeys: [...objectKeys1430489818],
              foundKeys: [...Object.keys(value)],
            },
          },
        ],
      };
    }
  }
  {
    const validatorResult = anonymousValidator1930640707(
      value["$raw"],
      `${propertyPath}.$raw`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["$raw"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator1886215561(
      value["$or"],
      `${propertyPath}.$or`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["$or"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator1802076175(
      value["id"],
      `${propertyPath}.id`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["id"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator1802076175(
      value["idNotEqual"],
      `${propertyPath}.idNotEqual`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["idNotEqual"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator888270707(
      value["idIn"],
      `${propertyPath}.idIn`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["idIn"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator888270707(
      value["idNotIn"],
      `${propertyPath}.idNotIn`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["idNotIn"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator1802076175(
      value["session"],
      `${propertyPath}.session`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["session"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator1802076175(
      value["sessionNotEqual"],
      `${propertyPath}.sessionNotEqual`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["sessionNotEqual"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator888270707(
      value["sessionIn"],
      `${propertyPath}.sessionIn`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["sessionIn"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator888270707(
      value["sessionNotIn"],
      `${propertyPath}.sessionNotIn`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["sessionNotIn"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator685440859(
      value["expiresAt"],
      `${propertyPath}.expiresAt`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["expiresAt"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator685440859(
      value["expiresAtNotEqual"],
      `${propertyPath}.expiresAtNotEqual`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["expiresAtNotEqual"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator1053722775(
      value["expiresAtIn"],
      `${propertyPath}.expiresAtIn`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["expiresAtIn"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator1053722775(
      value["expiresAtNotIn"],
      `${propertyPath}.expiresAtNotIn`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["expiresAtNotIn"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator685440859(
      value["expiresAtGreaterThan"],
      `${propertyPath}.expiresAtGreaterThan`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["expiresAtGreaterThan"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator685440859(
      value["expiresAtLowerThan"],
      `${propertyPath}.expiresAtLowerThan`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["expiresAtLowerThan"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator1802076175(
      value["refreshToken"],
      `${propertyPath}.refreshToken`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["refreshToken"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator1802076175(
      value["refreshTokenNotEqual"],
      `${propertyPath}.refreshTokenNotEqual`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["refreshTokenNotEqual"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator888270707(
      value["refreshTokenIn"],
      `${propertyPath}.refreshTokenIn`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["refreshTokenIn"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator888270707(
      value["refreshTokenNotIn"],
      `${propertyPath}.refreshTokenNotIn`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["refreshTokenNotIn"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator196147222(
      value["refreshTokenIsNull"],
      `${propertyPath}.refreshTokenIsNull`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["refreshTokenIsNull"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator196147222(
      value["refreshTokenIsNotNull"],
      `${propertyPath}.refreshTokenIsNotNull`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["refreshTokenIsNotNull"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator685440859(
      value["revokedAt"],
      `${propertyPath}.revokedAt`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["revokedAt"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator685440859(
      value["revokedAtNotEqual"],
      `${propertyPath}.revokedAtNotEqual`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["revokedAtNotEqual"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator1053722775(
      value["revokedAtIn"],
      `${propertyPath}.revokedAtIn`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["revokedAtIn"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator1053722775(
      value["revokedAtNotIn"],
      `${propertyPath}.revokedAtNotIn`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["revokedAtNotIn"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator685440859(
      value["revokedAtGreaterThan"],
      `${propertyPath}.revokedAtGreaterThan`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["revokedAtGreaterThan"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator685440859(
      value["revokedAtLowerThan"],
      `${propertyPath}.revokedAtLowerThan`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["revokedAtLowerThan"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator196147222(
      value["revokedAtIsNull"],
      `${propertyPath}.revokedAtIsNull`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["revokedAtIsNull"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator196147222(
      value["revokedAtIsNotNull"],
      `${propertyPath}.revokedAtIsNotNull`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["revokedAtIsNotNull"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator1577551207(
      value["viaSession"],
      `${propertyPath}.viaSession`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["viaSession"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator600974204(
      value["viaRefreshToken"],
      `${propertyPath}.viaRefreshToken`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["viaRefreshToken"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator600974204(
      value["viaAccessToken"],
      `${propertyPath}.viaAccessToken`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["viaAccessToken"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator2065515599(
      value["accessTokenNotExists"],
      `${propertyPath}.accessTokenNotExists`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["accessTokenNotExists"] = validatorResult.value;
    }
  }
  if (errors.length > 0) {
    return { errors };
  }
  return { value: result };
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<undefined|StoreSessionStoreTokenWhere>}
 */
export function anonymousValidator2065515599(value, propertyPath) {
  if (isNil(value)) {
    return { value: undefined };
  }
  return anonymousValidator1430489818(value, propertyPath);
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<undefined|{"where"?: undefined|StoreSessionStoreTokenWhere, "limit"?: undefined|number, "offset"?: undefined|number, }>}
 */
export function anonymousValidator600974204(value, propertyPath) {
  if (isNil(value)) {
    return { value: undefined };
  }
  if (typeof value !== "object") {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.object.type",
          info: {},
        },
      ],
    };
  }
  const result = Object.create(null);
  let errors = [];
  for (const key of Object.keys(value)) {
    if (!objectKeys600974204.has(key)) {
      /** @type {{ errors: InternalError[] }} */
      return {
        errors: [
          {
            propertyPath,
            key: "validator.object.strict",
            info: {
              expectedKeys: [...objectKeys600974204],
              foundKeys: [...Object.keys(value)],
            },
          },
        ],
      };
    }
  }
  {
    const validatorResult = anonymousValidator2065515599(
      value["where"],
      `${propertyPath}.where`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["where"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator963028965(
      value["limit"],
      `${propertyPath}.limit`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["limit"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator963028965(
      value["offset"],
      `${propertyPath}.offset`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["offset"] = validatorResult.value;
    }
  }
  if (errors.length > 0) {
    return { errors };
  }
  return { value: result };
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<{"$raw"?: undefined|QueryPart<any>, "$or"?: undefined|(StoreSessionStoreWhere)[], "id"?: undefined|string, "idNotEqual"?: undefined|string, "idIn"?: undefined|(string)[]|QueryPart<any>, "idNotIn"?: undefined|(string)[]|QueryPart<any>, "createdAt"?: undefined|Date, "createdAtNotEqual"?: undefined|Date, "createdAtIn"?: undefined|(Date)[]|QueryPart<any>, "createdAtNotIn"?: undefined|(Date)[]|QueryPart<any>, "createdAtGreaterThan"?: undefined|Date, "createdAtLowerThan"?: undefined|Date, "createdAtIsNull"?: undefined|boolean, "createdAtIsNotNull"?: undefined|boolean, "updatedAt"?: undefined|Date, "updatedAtNotEqual"?: undefined|Date, "updatedAtIn"?: undefined|(Date)[]|QueryPart<any>, "updatedAtNotIn"?: undefined|(Date)[]|QueryPart<any>, "updatedAtGreaterThan"?: undefined|Date, "updatedAtLowerThan"?: undefined|Date, "updatedAtIsNull"?: undefined|boolean, "updatedAtIsNotNull"?: undefined|boolean, "viaAccessTokens"?: undefined|{"where"?: undefined|StoreSessionStoreTokenWhere, "limit"?: undefined|number, "offset"?: undefined|number, }, "accessTokensNotExists"?: undefined|StoreSessionStoreTokenWhere, }>}
 */
export function anonymousValidator1334934277(value, propertyPath) {
  if (isNil(value)) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.object.undefined",
          info: {},
        },
      ],
    };
  }
  if (typeof value !== "object") {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.object.type",
          info: {},
        },
      ],
    };
  }
  const result = Object.create(null);
  let errors = [];
  for (const key of Object.keys(value)) {
    if (!objectKeys1334934277.has(key)) {
      /** @type {{ errors: InternalError[] }} */
      return {
        errors: [
          {
            propertyPath,
            key: "validator.object.strict",
            info: {
              expectedKeys: [...objectKeys1334934277],
              foundKeys: [...Object.keys(value)],
            },
          },
        ],
      };
    }
  }
  {
    const validatorResult = anonymousValidator1930640707(
      value["$raw"],
      `${propertyPath}.$raw`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["$raw"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator51142462(
      value["$or"],
      `${propertyPath}.$or`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["$or"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator1802076175(
      value["id"],
      `${propertyPath}.id`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["id"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator1802076175(
      value["idNotEqual"],
      `${propertyPath}.idNotEqual`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["idNotEqual"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator888270707(
      value["idIn"],
      `${propertyPath}.idIn`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["idIn"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator888270707(
      value["idNotIn"],
      `${propertyPath}.idNotIn`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["idNotIn"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator1988053796(
      value["createdAt"],
      `${propertyPath}.createdAt`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["createdAt"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator1988053796(
      value["createdAtNotEqual"],
      `${propertyPath}.createdAtNotEqual`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["createdAtNotEqual"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator764760480(
      value["createdAtIn"],
      `${propertyPath}.createdAtIn`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["createdAtIn"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator764760480(
      value["createdAtNotIn"],
      `${propertyPath}.createdAtNotIn`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["createdAtNotIn"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator1988053796(
      value["createdAtGreaterThan"],
      `${propertyPath}.createdAtGreaterThan`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["createdAtGreaterThan"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator1988053796(
      value["createdAtLowerThan"],
      `${propertyPath}.createdAtLowerThan`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["createdAtLowerThan"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator196147222(
      value["createdAtIsNull"],
      `${propertyPath}.createdAtIsNull`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["createdAtIsNull"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator196147222(
      value["createdAtIsNotNull"],
      `${propertyPath}.createdAtIsNotNull`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["createdAtIsNotNull"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator1988053796(
      value["updatedAt"],
      `${propertyPath}.updatedAt`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["updatedAt"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator1988053796(
      value["updatedAtNotEqual"],
      `${propertyPath}.updatedAtNotEqual`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["updatedAtNotEqual"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator764760480(
      value["updatedAtIn"],
      `${propertyPath}.updatedAtIn`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["updatedAtIn"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator764760480(
      value["updatedAtNotIn"],
      `${propertyPath}.updatedAtNotIn`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["updatedAtNotIn"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator1988053796(
      value["updatedAtGreaterThan"],
      `${propertyPath}.updatedAtGreaterThan`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["updatedAtGreaterThan"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator1988053796(
      value["updatedAtLowerThan"],
      `${propertyPath}.updatedAtLowerThan`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["updatedAtLowerThan"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator196147222(
      value["updatedAtIsNull"],
      `${propertyPath}.updatedAtIsNull`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["updatedAtIsNull"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator196147222(
      value["updatedAtIsNotNull"],
      `${propertyPath}.updatedAtIsNotNull`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["updatedAtIsNotNull"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator600974204(
      value["viaAccessTokens"],
      `${propertyPath}.viaAccessTokens`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["viaAccessTokens"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator2065515599(
      value["accessTokensNotExists"],
      `${propertyPath}.accessTokensNotExists`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["accessTokensNotExists"] = validatorResult.value;
    }
  }
  if (errors.length > 0) {
    return { errors };
  }
  return { value: result };
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<{"$append": string, }>}
 */
export function anonymousValidator2007164840(value, propertyPath) {
  if (isNil(value)) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.object.undefined",
          info: {},
        },
      ],
    };
  }
  if (typeof value !== "object") {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.object.type",
          info: {},
        },
      ],
    };
  }
  const result = Object.create(null);
  let errors = [];
  for (const key of Object.keys(value)) {
    if (!objectKeys2007164840.has(key)) {
      /** @type {{ errors: InternalError[] }} */
      return {
        errors: [
          {
            propertyPath,
            key: "validator.object.strict",
            info: {
              expectedKeys: [...objectKeys2007164840],
              foundKeys: [...Object.keys(value)],
            },
          },
        ],
      };
    }
  }
  {
    const validatorResult = anonymousValidator186795873(
      value["$append"],
      `${propertyPath}.$append`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["$append"] = validatorResult.value;
    }
  }
  if (errors.length > 0) {
    return { errors };
  }
  return { value: result };
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<undefined|string|{"$append": string, }>}
 */
export function anonymousValidator2011937852(value, propertyPath) {
  if (isNil(value)) {
    return { value: undefined };
  }
  /** @type {InternalError[]} */
  let errors = [];
  /** @type {EitherN<undefined|string|{"$append": string, }>} */
  let result = { errors: [] };
  result = anonymousValidator1182955981(value, propertyPath);
  if (result.errors) {
    errors.push(result.errors[0]);
  } else {
    return result;
  }
  result = anonymousValidator2007164840(value, propertyPath);
  if (result.errors) {
    errors.push(result.errors[0]);
  } else {
    return result;
  }
  for (const err of errors) {
    err.info.via = "validator.anyOf";
  }
  return {
    errors,
  };
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<undefined|number>}
 */
export function anonymousValidator930071084(value, propertyPath) {
  if (isNil(value)) {
    return { value: undefined };
  }
  if (typeof value !== "number" || isNaN(value) || !isFinite(value)) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.number.type",
          info: {},
        },
      ],
    };
  }
  if (!Number.isInteger(value)) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.number.integer",
          info: {},
        },
      ],
    };
  }
  if (value < -2147483647) {
    const min = -2147483647;
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.number.min",
          info: { min },
        },
      ],
    };
  }
  if (value > 2147483647) {
    const max = 2147483647;
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.number.max",
          info: { max },
        },
      ],
    };
  }
  return { value };
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<number>}
 */
export function anonymousValidator293751998(value, propertyPath) {
  if (isNil(value)) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.number.undefined",
          info: {},
        },
      ],
    };
  }
  if (typeof value !== "number" || isNaN(value) || !isFinite(value)) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.number.type",
          info: {},
        },
      ],
    };
  }
  if (!Number.isInteger(value)) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.number.integer",
          info: {},
        },
      ],
    };
  }
  if (value < -2147483647) {
    const min = -2147483647;
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.number.min",
          info: { min },
        },
      ],
    };
  }
  if (value > 2147483647) {
    const max = 2147483647;
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.number.max",
          info: { max },
        },
      ],
    };
  }
  return { value };
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<{"$add": number, }>}
 */
export function anonymousValidator1511542790(value, propertyPath) {
  if (isNil(value)) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.object.undefined",
          info: {},
        },
      ],
    };
  }
  if (typeof value !== "object") {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.object.type",
          info: {},
        },
      ],
    };
  }
  const result = Object.create(null);
  let errors = [];
  for (const key of Object.keys(value)) {
    if (!objectKeys1511542790.has(key)) {
      /** @type {{ errors: InternalError[] }} */
      return {
        errors: [
          {
            propertyPath,
            key: "validator.object.strict",
            info: {
              expectedKeys: [...objectKeys1511542790],
              foundKeys: [...Object.keys(value)],
            },
          },
        ],
      };
    }
  }
  {
    const validatorResult = anonymousValidator293751998(
      value["$add"],
      `${propertyPath}.$add`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["$add"] = validatorResult.value;
    }
  }
  if (errors.length > 0) {
    return { errors };
  }
  return { value: result };
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<{"$subtract": number, }>}
 */
export function anonymousValidator1442950861(value, propertyPath) {
  if (isNil(value)) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.object.undefined",
          info: {},
        },
      ],
    };
  }
  if (typeof value !== "object") {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.object.type",
          info: {},
        },
      ],
    };
  }
  const result = Object.create(null);
  let errors = [];
  for (const key of Object.keys(value)) {
    if (!objectKeys1442950861.has(key)) {
      /** @type {{ errors: InternalError[] }} */
      return {
        errors: [
          {
            propertyPath,
            key: "validator.object.strict",
            info: {
              expectedKeys: [...objectKeys1442950861],
              foundKeys: [...Object.keys(value)],
            },
          },
        ],
      };
    }
  }
  {
    const validatorResult = anonymousValidator293751998(
      value["$subtract"],
      `${propertyPath}.$subtract`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["$subtract"] = validatorResult.value;
    }
  }
  if (errors.length > 0) {
    return { errors };
  }
  return { value: result };
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<{"$multiply": number, }>}
 */
export function anonymousValidator553023933(value, propertyPath) {
  if (isNil(value)) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.object.undefined",
          info: {},
        },
      ],
    };
  }
  if (typeof value !== "object") {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.object.type",
          info: {},
        },
      ],
    };
  }
  const result = Object.create(null);
  let errors = [];
  for (const key of Object.keys(value)) {
    if (!objectKeys553023933.has(key)) {
      /** @type {{ errors: InternalError[] }} */
      return {
        errors: [
          {
            propertyPath,
            key: "validator.object.strict",
            info: {
              expectedKeys: [...objectKeys553023933],
              foundKeys: [...Object.keys(value)],
            },
          },
        ],
      };
    }
  }
  {
    const validatorResult = anonymousValidator293751998(
      value["$multiply"],
      `${propertyPath}.$multiply`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["$multiply"] = validatorResult.value;
    }
  }
  if (errors.length > 0) {
    return { errors };
  }
  return { value: result };
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<{"$divide": number, }>}
 */
export function anonymousValidator661036808(value, propertyPath) {
  if (isNil(value)) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.object.undefined",
          info: {},
        },
      ],
    };
  }
  if (typeof value !== "object") {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.object.type",
          info: {},
        },
      ],
    };
  }
  const result = Object.create(null);
  let errors = [];
  for (const key of Object.keys(value)) {
    if (!objectKeys661036808.has(key)) {
      /** @type {{ errors: InternalError[] }} */
      return {
        errors: [
          {
            propertyPath,
            key: "validator.object.strict",
            info: {
              expectedKeys: [...objectKeys661036808],
              foundKeys: [...Object.keys(value)],
            },
          },
        ],
      };
    }
  }
  {
    const validatorResult = anonymousValidator293751998(
      value["$divide"],
      `${propertyPath}.$divide`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["$divide"] = validatorResult.value;
    }
  }
  if (errors.length > 0) {
    return { errors };
  }
  return { value: result };
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<undefined|number|{"$add": number, }|{"$subtract": number, }|{"$multiply": number, }|{"$divide": number, }>}
 */
export function anonymousValidator222290681(value, propertyPath) {
  if (isNil(value)) {
    return { value: undefined };
  }
  /** @type {InternalError[]} */
  let errors = [];
  /** @type {EitherN<undefined|number|{"$add": number, }|{"$subtract": number, }|{"$multiply": number, }|{"$divide": number, }>} */
  let result = { errors: [] };
  result = anonymousValidator930071084(value, propertyPath);
  if (result.errors) {
    errors.push(result.errors[0]);
  } else {
    return result;
  }
  result = anonymousValidator1511542790(value, propertyPath);
  if (result.errors) {
    errors.push(result.errors[0]);
  } else {
    return result;
  }
  result = anonymousValidator1442950861(value, propertyPath);
  if (result.errors) {
    errors.push(result.errors[0]);
  } else {
    return result;
  }
  result = anonymousValidator553023933(value, propertyPath);
  if (result.errors) {
    errors.push(result.errors[0]);
  } else {
    return result;
  }
  result = anonymousValidator661036808(value, propertyPath);
  if (result.errors) {
    errors.push(result.errors[0]);
  } else {
    return result;
  }
  for (const err of errors) {
    err.info.via = "validator.anyOf";
  }
  return {
    errors,
  };
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<number|string>}
 */
export function anonymousValidator2035392241(value, propertyPath) {
  if (isNil(value)) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.anyOf.undefined",
          info: {},
        },
      ],
    };
  }
  /** @type {InternalError[]} */
  let errors = [];
  /** @type {EitherN<number|string>} */
  let result = { errors: [] };
  result = anonymousValidator293751998(value, propertyPath);
  if (result.errors) {
    errors.push(result.errors[0]);
  } else {
    return result;
  }
  result = anonymousValidator186795873(value, propertyPath);
  if (result.errors) {
    errors.push(result.errors[0]);
  } else {
    return result;
  }
  for (const err of errors) {
    err.info.via = "validator.anyOf";
  }
  return {
    errors,
  };
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<(number|string)[]>}
 */
export function anonymousValidator418417331(value, propertyPath) {
  if (isNil(value)) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.array.undefined",
          info: {},
        },
      ],
    };
  }
  if (!Array.isArray(value)) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.array.type",
          info: {},
        },
      ],
    };
  }
  const result = Array.from({ length: value.length });
  let errors = [];
  for (let i = 0; i < value.length; ++i) {
    const arrVar = anonymousValidator2035392241(
      value[i],
      propertyPath + "[" + i + "]",
    );
    if (arrVar.errors) {
      errors.push(...arrVar.errors);
    } else {
      result[i] = arrVar.value;
    }
  }
  if (errors.length > 0) {
    /** @type {{ errors: InternalError[] }} */
    return { errors };
  }
  return { value: result };
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<any>}
 */
export function anonymousValidator1027346252(value, propertyPath) {
  if (isNil(value)) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.any.undefined",
          info: {},
        },
      ],
    };
  }
  return { value };
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<{"path": (number|string)[], "value": any, }>}
 */
export function anonymousValidator1925201648(value, propertyPath) {
  if (isNil(value)) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.object.undefined",
          info: {},
        },
      ],
    };
  }
  if (typeof value !== "object") {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.object.type",
          info: {},
        },
      ],
    };
  }
  const result = Object.create(null);
  let errors = [];
  for (const key of Object.keys(value)) {
    if (!objectKeys1925201648.has(key)) {
      /** @type {{ errors: InternalError[] }} */
      return {
        errors: [
          {
            propertyPath,
            key: "validator.object.strict",
            info: {
              expectedKeys: [...objectKeys1925201648],
              foundKeys: [...Object.keys(value)],
            },
          },
        ],
      };
    }
  }
  {
    const validatorResult = anonymousValidator418417331(
      value["path"],
      `${propertyPath}.path`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["path"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator1027346252(
      value["value"],
      `${propertyPath}.value`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["value"] = validatorResult.value;
    }
  }
  if (errors.length > 0) {
    return { errors };
  }
  return { value: result };
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<{"$set": {"path": (number|string)[], "value": any, }, }>}
 */
export function anonymousValidator1476139765(value, propertyPath) {
  if (isNil(value)) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.object.undefined",
          info: {},
        },
      ],
    };
  }
  if (typeof value !== "object") {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.object.type",
          info: {},
        },
      ],
    };
  }
  const result = Object.create(null);
  let errors = [];
  for (const key of Object.keys(value)) {
    if (!objectKeys1476139765.has(key)) {
      /** @type {{ errors: InternalError[] }} */
      return {
        errors: [
          {
            propertyPath,
            key: "validator.object.strict",
            info: {
              expectedKeys: [...objectKeys1476139765],
              foundKeys: [...Object.keys(value)],
            },
          },
        ],
      };
    }
  }
  {
    const validatorResult = anonymousValidator1925201648(
      value["$set"],
      `${propertyPath}.$set`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["$set"] = validatorResult.value;
    }
  }
  if (errors.length > 0) {
    return { errors };
  }
  return { value: result };
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<{"path": (number|string)[], }>}
 */
export function anonymousValidator1247704095(value, propertyPath) {
  if (isNil(value)) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.object.undefined",
          info: {},
        },
      ],
    };
  }
  if (typeof value !== "object") {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.object.type",
          info: {},
        },
      ],
    };
  }
  const result = Object.create(null);
  let errors = [];
  for (const key of Object.keys(value)) {
    if (!objectKeys1247704095.has(key)) {
      /** @type {{ errors: InternalError[] }} */
      return {
        errors: [
          {
            propertyPath,
            key: "validator.object.strict",
            info: {
              expectedKeys: [...objectKeys1247704095],
              foundKeys: [...Object.keys(value)],
            },
          },
        ],
      };
    }
  }
  {
    const validatorResult = anonymousValidator418417331(
      value["path"],
      `${propertyPath}.path`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["path"] = validatorResult.value;
    }
  }
  if (errors.length > 0) {
    return { errors };
  }
  return { value: result };
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<{"$remove": {"path": (number|string)[], }, }>}
 */
export function anonymousValidator1462381984(value, propertyPath) {
  if (isNil(value)) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.object.undefined",
          info: {},
        },
      ],
    };
  }
  if (typeof value !== "object") {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.object.type",
          info: {},
        },
      ],
    };
  }
  const result = Object.create(null);
  let errors = [];
  for (const key of Object.keys(value)) {
    if (!objectKeys1462381984.has(key)) {
      /** @type {{ errors: InternalError[] }} */
      return {
        errors: [
          {
            propertyPath,
            key: "validator.object.strict",
            info: {
              expectedKeys: [...objectKeys1462381984],
              foundKeys: [...Object.keys(value)],
            },
          },
        ],
      };
    }
  }
  {
    const validatorResult = anonymousValidator1247704095(
      value["$remove"],
      `${propertyPath}.$remove`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["$remove"] = validatorResult.value;
    }
  }
  if (errors.length > 0) {
    return { errors };
  }
  return { value: result };
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<undefined|{"transforms"?: undefined|any, "transformedFromOriginal"?: undefined|string, "placeholderImage"?: undefined|string, "altText"?: undefined|string, }|{"$set": {"path": (number|string)[], "value": any, }, }|{"$remove": {"path": (number|string)[], }, }>}
 */
export function anonymousValidator127301142(value, propertyPath) {
  if (isNil(value)) {
    return { value: undefined };
  }
  /** @type {InternalError[]} */
  let errors = [];
  /** @type {EitherN<undefined|{"transforms"?: undefined|any, "transformedFromOriginal"?: undefined|string, "placeholderImage"?: undefined|string, "altText"?: undefined|string, }|{"$set": {"path": (number|string)[], "value": any, }, }|{"$remove": {"path": (number|string)[], }, }>} */
  let result = { errors: [] };
  result = anonymousValidator2144828802(value, propertyPath);
  if (result.errors) {
    errors.push(result.errors[0]);
  } else {
    return result;
  }
  result = anonymousValidator1476139765(value, propertyPath);
  if (result.errors) {
    errors.push(result.errors[0]);
  } else {
    return result;
  }
  result = anonymousValidator1462381984(value, propertyPath);
  if (result.errors) {
    errors.push(result.errors[0]);
  } else {
    return result;
  }
  for (const err of errors) {
    err.info.via = "validator.anyOf";
  }
  return {
    errors,
  };
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<{"$add": string, }>}
 */
export function anonymousValidator1992090661(value, propertyPath) {
  if (isNil(value)) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.object.undefined",
          info: {},
        },
      ],
    };
  }
  if (typeof value !== "object") {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.object.type",
          info: {},
        },
      ],
    };
  }
  const result = Object.create(null);
  let errors = [];
  for (const key of Object.keys(value)) {
    if (!objectKeys1992090661.has(key)) {
      /** @type {{ errors: InternalError[] }} */
      return {
        errors: [
          {
            propertyPath,
            key: "validator.object.strict",
            info: {
              expectedKeys: [...objectKeys1992090661],
              foundKeys: [...Object.keys(value)],
            },
          },
        ],
      };
    }
  }
  {
    const validatorResult = anonymousValidator186795873(
      value["$add"],
      `${propertyPath}.$add`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["$add"] = validatorResult.value;
    }
  }
  if (errors.length > 0) {
    return { errors };
  }
  return { value: result };
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<{"$subtract": string, }>}
 */
export function anonymousValidator962402990(value, propertyPath) {
  if (isNil(value)) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.object.undefined",
          info: {},
        },
      ],
    };
  }
  if (typeof value !== "object") {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.object.type",
          info: {},
        },
      ],
    };
  }
  const result = Object.create(null);
  let errors = [];
  for (const key of Object.keys(value)) {
    if (!objectKeys962402990.has(key)) {
      /** @type {{ errors: InternalError[] }} */
      return {
        errors: [
          {
            propertyPath,
            key: "validator.object.strict",
            info: {
              expectedKeys: [...objectKeys962402990],
              foundKeys: [...Object.keys(value)],
            },
          },
        ],
      };
    }
  }
  {
    const validatorResult = anonymousValidator186795873(
      value["$subtract"],
      `${propertyPath}.$subtract`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["$subtract"] = validatorResult.value;
    }
  }
  if (errors.length > 0) {
    return { errors };
  }
  return { value: result };
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<undefined|Date|{"$add": string, }|{"$subtract": string, }>}
 */
export function anonymousValidator1398947189(value, propertyPath) {
  if (isNil(value)) {
    return { value: undefined };
  }
  /** @type {InternalError[]} */
  let errors = [];
  /** @type {EitherN<undefined|Date|{"$add": string, }|{"$subtract": string, }>} */
  let result = { errors: [] };
  result = anonymousValidator845268601(value, propertyPath);
  if (result.errors) {
    errors.push(result.errors[0]);
  } else {
    return result;
  }
  result = anonymousValidator1992090661(value, propertyPath);
  if (result.errors) {
    errors.push(result.errors[0]);
  } else {
    return result;
  }
  result = anonymousValidator962402990(value, propertyPath);
  if (result.errors) {
    errors.push(result.errors[0]);
  } else {
    return result;
  }
  for (const err of errors) {
    err.info.via = "validator.anyOf";
  }
  return {
    errors,
  };
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<{"bucketName"?: undefined|string|{"$append": string, }, "contentLength"?: undefined|number|{"$add": number, }|{"$subtract": number, }|{"$multiply": number, }|{"$divide": number, }, "contentType"?: undefined|string|{"$append": string, }, "name"?: undefined|string|{"$append": string, }, "meta"?: undefined|{"transforms"?: undefined|any, "transformedFromOriginal"?: undefined|string, "placeholderImage"?: undefined|string, "altText"?: undefined|string, }|{"$set": {"path": (number|string)[], "value": any, }, }|{"$remove": {"path": (number|string)[], }, }, "createdAt"?: undefined|Date|{"$add": string, }|{"$subtract": string, }, "updatedAt"?: undefined|Date|{"$add": string, }|{"$subtract": string, }, }>}
 */
export function anonymousValidator617486747(value, propertyPath) {
  if (isNil(value)) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.object.undefined",
          info: {},
        },
      ],
    };
  }
  if (typeof value !== "object") {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.object.type",
          info: {},
        },
      ],
    };
  }
  const result = Object.create(null);
  let errors = [];
  for (const key of Object.keys(value)) {
    if (!objectKeys617486747.has(key)) {
      /** @type {{ errors: InternalError[] }} */
      return {
        errors: [
          {
            propertyPath,
            key: "validator.object.strict",
            info: {
              expectedKeys: [...objectKeys617486747],
              foundKeys: [...Object.keys(value)],
            },
          },
        ],
      };
    }
  }
  {
    const validatorResult = anonymousValidator2011937852(
      value["bucketName"],
      `${propertyPath}.bucketName`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["bucketName"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator222290681(
      value["contentLength"],
      `${propertyPath}.contentLength`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["contentLength"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator2011937852(
      value["contentType"],
      `${propertyPath}.contentType`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["contentType"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator2011937852(
      value["name"],
      `${propertyPath}.name`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["name"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator127301142(
      value["meta"],
      `${propertyPath}.meta`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["meta"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator1398947189(
      value["createdAt"],
      `${propertyPath}.createdAt`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["createdAt"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator1398947189(
      value["updatedAt"],
      `${propertyPath}.updatedAt`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["updatedAt"] = validatorResult.value;
    }
  }
  if (errors.length > 0) {
    return { errors };
  }
  return { value: result };
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<StoreFileUpdatePartial>}
 */
export function anonymousValidator468289341(value, propertyPath) {
  if (isNil(value)) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.reference.undefined",
          info: {},
        },
      ],
    };
  }
  return anonymousValidator617486747(value, propertyPath);
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<StoreFileWhere>}
 */
export function anonymousValidator1623962574(value, propertyPath) {
  if (isNil(value)) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.reference.undefined",
          info: {},
        },
      ],
    };
  }
  return anonymousValidator2074494218(value, propertyPath);
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<"*">}
 */
export function anonymousValidator358976960(value, propertyPath) {
  if (isNil(value)) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.string.undefined",
          info: {},
        },
      ],
    };
  }
  if (typeof value !== "string") {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.string.type",
          info: {},
        },
      ],
    };
  }
  if (value.length < 1) {
    const min = 1;
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.string.min",
          info: { min },
        },
      ],
    };
  }
  if (value !== "*") {
    const oneOf = ["*"];
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.string.oneOf",
          info: { oneOf },
        },
      ],
    };
  }
  return { value };
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<"bucketName"|"contentLength"|"contentType"|"name"|"meta"|"id"|"createdAt"|"updatedAt">}
 */
export function anonymousValidator1543934225(value, propertyPath) {
  if (isNil(value)) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.string.undefined",
          info: {},
        },
      ],
    };
  }
  if (typeof value !== "string") {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.string.type",
          info: {},
        },
      ],
    };
  }
  if (value.length < 1) {
    const min = 1;
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.string.min",
          info: { min },
        },
      ],
    };
  }
  if (
    value !== "bucketName" &&
    value !== "contentLength" &&
    value !== "contentType" &&
    value !== "name" &&
    value !== "meta" &&
    value !== "id" &&
    value !== "createdAt" &&
    value !== "updatedAt"
  ) {
    const oneOf = [
      "bucketName",
      "contentLength",
      "contentType",
      "name",
      "meta",
      "id",
      "createdAt",
      "updatedAt",
    ];
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.string.oneOf",
          info: { oneOf },
        },
      ],
    };
  }
  return { value };
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<("bucketName"|"contentLength"|"contentType"|"name"|"meta"|"id"|"createdAt"|"updatedAt")[]>}
 */
export function anonymousValidator1324726735(value, propertyPath) {
  if (isNil(value)) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.array.undefined",
          info: {},
        },
      ],
    };
  }
  if (!Array.isArray(value)) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.array.type",
          info: {},
        },
      ],
    };
  }
  const result = Array.from({ length: value.length });
  let errors = [];
  for (let i = 0; i < value.length; ++i) {
    const arrVar = anonymousValidator1543934225(
      value[i],
      propertyPath + "[" + i + "]",
    );
    if (arrVar.errors) {
      errors.push(...arrVar.errors);
    } else {
      result[i] = arrVar.value;
    }
  }
  if (errors.length > 0) {
    /** @type {{ errors: InternalError[] }} */
    return { errors };
  }
  return { value: result };
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<undefined|"*"|("bucketName"|"contentLength"|"contentType"|"name"|"meta"|"id"|"createdAt"|"updatedAt")[]>}
 */
export function anonymousValidator538169824(value, propertyPath) {
  if (isNil(value)) {
    return { value: undefined };
  }
  /** @type {InternalError[]} */
  let errors = [];
  /** @type {EitherN<undefined|"*"|("bucketName"|"contentLength"|"contentType"|"name"|"meta"|"id"|"createdAt"|"updatedAt")[]>} */
  let result = { errors: [] };
  result = anonymousValidator358976960(value, propertyPath);
  if (result.errors) {
    errors.push(result.errors[0]);
  } else {
    return result;
  }
  result = anonymousValidator1324726735(value, propertyPath);
  if (result.errors) {
    errors.push(result.errors[0]);
  } else {
    return result;
  }
  for (const err of errors) {
    err.info.via = "validator.anyOf";
  }
  return {
    errors,
  };
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<{"update": StoreFileUpdatePartial, "where": StoreFileWhere, "returning"?: undefined|"*"|("bucketName"|"contentLength"|"contentType"|"name"|"meta"|"id"|"createdAt"|"updatedAt")[], }>}
 */
export function anonymousValidator165104378(value, propertyPath) {
  if (isNil(value)) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.object.undefined",
          info: {},
        },
      ],
    };
  }
  if (typeof value !== "object") {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.object.type",
          info: {},
        },
      ],
    };
  }
  const result = Object.create(null);
  let errors = [];
  for (const key of Object.keys(value)) {
    if (!objectKeys165104378.has(key)) {
      /** @type {{ errors: InternalError[] }} */
      return {
        errors: [
          {
            propertyPath,
            key: "validator.object.strict",
            info: {
              expectedKeys: [...objectKeys165104378],
              foundKeys: [...Object.keys(value)],
            },
          },
        ],
      };
    }
  }
  {
    const validatorResult = anonymousValidator468289341(
      value["update"],
      `${propertyPath}.update`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["update"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator1623962574(
      value["where"],
      `${propertyPath}.where`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["where"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator538169824(
      value["returning"],
      `${propertyPath}.returning`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["returning"] = validatorResult.value;
    }
  }
  if (errors.length > 0) {
    return { errors };
  }
  return { value: result };
}
/**
* @param {*} value
* @param {string} propertyPath
* @returns {EitherN<<I extends StoreFileUpdate>(
sql: import("@compas/store").Postgres,
input: I,
) => Promise<
import("@compas/store").Returning<StoreFile, I["returning"]>
>>}
*/
export function anonymousValidator248484974(value, propertyPath) {
  if (isNil(value)) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.any.undefined",
          info: {},
        },
      ],
    };
  }
  return { value };
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<boolean>}
 */
export function anonymousValidator2047524467(value, propertyPath) {
  if (isNil(value)) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.boolean.undefined",
          info: {},
        },
      ],
    };
  }
  if (typeof value !== "boolean") {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.boolean.type",
          info: {},
        },
      ],
    };
  }
  return { value };
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<{"$negate": boolean, }>}
 */
export function anonymousValidator1802084014(value, propertyPath) {
  if (isNil(value)) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.object.undefined",
          info: {},
        },
      ],
    };
  }
  if (typeof value !== "object") {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.object.type",
          info: {},
        },
      ],
    };
  }
  const result = Object.create(null);
  let errors = [];
  for (const key of Object.keys(value)) {
    if (!objectKeys1802084014.has(key)) {
      /** @type {{ errors: InternalError[] }} */
      return {
        errors: [
          {
            propertyPath,
            key: "validator.object.strict",
            info: {
              expectedKeys: [...objectKeys1802084014],
              foundKeys: [...Object.keys(value)],
            },
          },
        ],
      };
    }
  }
  {
    const validatorResult = anonymousValidator2047524467(
      value["$negate"],
      `${propertyPath}.$negate`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["$negate"] = validatorResult.value;
    }
  }
  if (errors.length > 0) {
    return { errors };
  }
  return { value: result };
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<undefined|boolean|{"$negate": boolean, }>}
 */
export function anonymousValidator437126703(value, propertyPath) {
  if (isNil(value)) {
    return { value: undefined };
  }
  /** @type {InternalError[]} */
  let errors = [];
  /** @type {EitherN<undefined|boolean|{"$negate": boolean, }>} */
  let result = { errors: [] };
  result = anonymousValidator897743470(value, propertyPath);
  if (result.errors) {
    errors.push(result.errors[0]);
  } else {
    return result;
  }
  result = anonymousValidator1802084014(value, propertyPath);
  if (result.errors) {
    errors.push(result.errors[0]);
  } else {
    return result;
  }
  for (const err of errors) {
    err.info.via = "validator.anyOf";
  }
  return {
    errors,
  };
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<undefined|number|{"$add": number, }|{"$subtract": number, }|{"$multiply": number, }|{"$divide": number, }>}
 */
export function anonymousValidator1285764902(value, propertyPath) {
  if (isNil(value)) {
    return { value: undefined };
  }
  /** @type {InternalError[]} */
  let errors = [];
  /** @type {EitherN<undefined|number|{"$add": number, }|{"$subtract": number, }|{"$multiply": number, }|{"$divide": number, }>} */
  let result = { errors: [] };
  result = anonymousValidator2799495(value, propertyPath);
  if (result.errors) {
    errors.push(result.errors[0]);
  } else {
    return result;
  }
  result = anonymousValidator1511542790(value, propertyPath);
  if (result.errors) {
    errors.push(result.errors[0]);
  } else {
    return result;
  }
  result = anonymousValidator1442950861(value, propertyPath);
  if (result.errors) {
    errors.push(result.errors[0]);
  } else {
    return result;
  }
  result = anonymousValidator553023933(value, propertyPath);
  if (result.errors) {
    errors.push(result.errors[0]);
  } else {
    return result;
  }
  result = anonymousValidator661036808(value, propertyPath);
  if (result.errors) {
    errors.push(result.errors[0]);
  } else {
    return result;
  }
  for (const err of errors) {
    err.info.via = "validator.anyOf";
  }
  return {
    errors,
  };
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<undefined|any|{"$set": {"path": (number|string)[], "value": any, }, }|{"$remove": {"path": (number|string)[], }, }>}
 */
export function anonymousValidator618537896(value, propertyPath) {
  if (isNil(value)) {
    return { value: undefined };
  }
  /** @type {InternalError[]} */
  let errors = [];
  /** @type {EitherN<undefined|any|{"$set": {"path": (number|string)[], "value": any, }, }|{"$remove": {"path": (number|string)[], }, }>} */
  let result = { errors: [] };
  result = anonymousValidator721172342(value, propertyPath);
  if (result.errors) {
    errors.push(result.errors[0]);
  } else {
    return result;
  }
  result = anonymousValidator1476139765(value, propertyPath);
  if (result.errors) {
    errors.push(result.errors[0]);
  } else {
    return result;
  }
  result = anonymousValidator1462381984(value, propertyPath);
  if (result.errors) {
    errors.push(result.errors[0]);
  } else {
    return result;
  }
  for (const err of errors) {
    err.info.via = "validator.anyOf";
  }
  return {
    errors,
  };
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<undefined|number|{"$add": number, }|{"$subtract": number, }|{"$multiply": number, }|{"$divide": number, }>}
 */
export function anonymousValidator58608997(value, propertyPath) {
  if (isNil(value)) {
    return { value: undefined };
  }
  /** @type {InternalError[]} */
  let errors = [];
  /** @type {EitherN<undefined|number|{"$add": number, }|{"$subtract": number, }|{"$multiply": number, }|{"$divide": number, }>} */
  let result = { errors: [] };
  result = anonymousValidator1983266932(value, propertyPath);
  if (result.errors) {
    errors.push(result.errors[0]);
  } else {
    return result;
  }
  result = anonymousValidator1511542790(value, propertyPath);
  if (result.errors) {
    errors.push(result.errors[0]);
  } else {
    return result;
  }
  result = anonymousValidator1442950861(value, propertyPath);
  if (result.errors) {
    errors.push(result.errors[0]);
  } else {
    return result;
  }
  result = anonymousValidator553023933(value, propertyPath);
  if (result.errors) {
    errors.push(result.errors[0]);
  } else {
    return result;
  }
  result = anonymousValidator661036808(value, propertyPath);
  if (result.errors) {
    errors.push(result.errors[0]);
  } else {
    return result;
  }
  for (const err of errors) {
    err.info.via = "validator.anyOf";
  }
  return {
    errors,
  };
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<undefined|null|number>}
 */
export function anonymousValidator371634527(value, propertyPath) {
  if (isNil(value)) {
    return { value: value };
  }
  if (typeof value !== "number" || isNaN(value) || !isFinite(value)) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.number.type",
          info: {},
        },
      ],
    };
  }
  if (!Number.isInteger(value)) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.number.integer",
          info: {},
        },
      ],
    };
  }
  if (value < 1000) {
    const min = 1000;
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.number.min",
          info: { min },
        },
      ],
    };
  }
  return { value };
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<undefined|null|number|{"$add": number, }|{"$subtract": number, }|{"$multiply": number, }|{"$divide": number, }>}
 */
export function anonymousValidator1048226008(value, propertyPath) {
  if (isNil(value)) {
    return { value: undefined };
  }
  /** @type {InternalError[]} */
  let errors = [];
  /** @type {EitherN<undefined|null|number|{"$add": number, }|{"$subtract": number, }|{"$multiply": number, }|{"$divide": number, }>} */
  let result = { errors: [] };
  result = anonymousValidator371634527(value, propertyPath);
  if (result.errors) {
    errors.push(result.errors[0]);
  } else {
    return result;
  }
  result = anonymousValidator1511542790(value, propertyPath);
  if (result.errors) {
    errors.push(result.errors[0]);
  } else {
    return result;
  }
  result = anonymousValidator1442950861(value, propertyPath);
  if (result.errors) {
    errors.push(result.errors[0]);
  } else {
    return result;
  }
  result = anonymousValidator553023933(value, propertyPath);
  if (result.errors) {
    errors.push(result.errors[0]);
  } else {
    return result;
  }
  result = anonymousValidator661036808(value, propertyPath);
  if (result.errors) {
    errors.push(result.errors[0]);
  } else {
    return result;
  }
  for (const err of errors) {
    err.info.via = "validator.anyOf";
  }
  return {
    errors,
  };
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<{"isComplete"?: undefined|boolean|{"$negate": boolean, }, "priority"?: undefined|number|{"$add": number, }|{"$subtract": number, }|{"$multiply": number, }|{"$divide": number, }, "scheduledAt"?: undefined|Date|{"$add": string, }|{"$subtract": string, }, "name"?: undefined|string|{"$append": string, }, "data"?: undefined|any|{"$set": {"path": (number|string)[], "value": any, }, }|{"$remove": {"path": (number|string)[], }, }, "retryCount"?: undefined|number|{"$add": number, }|{"$subtract": number, }|{"$multiply": number, }|{"$divide": number, }, "handlerTimeout"?: undefined|null|number|{"$add": number, }|{"$subtract": number, }|{"$multiply": number, }|{"$divide": number, }, "createdAt"?: undefined|Date|{"$add": string, }|{"$subtract": string, }, "updatedAt"?: undefined|Date|{"$add": string, }|{"$subtract": string, }, }>}
 */
export function anonymousValidator600940900(value, propertyPath) {
  if (isNil(value)) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.object.undefined",
          info: {},
        },
      ],
    };
  }
  if (typeof value !== "object") {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.object.type",
          info: {},
        },
      ],
    };
  }
  const result = Object.create(null);
  let errors = [];
  for (const key of Object.keys(value)) {
    if (!objectKeys600940900.has(key)) {
      /** @type {{ errors: InternalError[] }} */
      return {
        errors: [
          {
            propertyPath,
            key: "validator.object.strict",
            info: {
              expectedKeys: [...objectKeys600940900],
              foundKeys: [...Object.keys(value)],
            },
          },
        ],
      };
    }
  }
  {
    const validatorResult = anonymousValidator437126703(
      value["isComplete"],
      `${propertyPath}.isComplete`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["isComplete"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator1285764902(
      value["priority"],
      `${propertyPath}.priority`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["priority"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator1398947189(
      value["scheduledAt"],
      `${propertyPath}.scheduledAt`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["scheduledAt"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator2011937852(
      value["name"],
      `${propertyPath}.name`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["name"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator618537896(
      value["data"],
      `${propertyPath}.data`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["data"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator58608997(
      value["retryCount"],
      `${propertyPath}.retryCount`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["retryCount"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator1048226008(
      value["handlerTimeout"],
      `${propertyPath}.handlerTimeout`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["handlerTimeout"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator1398947189(
      value["createdAt"],
      `${propertyPath}.createdAt`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["createdAt"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator1398947189(
      value["updatedAt"],
      `${propertyPath}.updatedAt`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["updatedAt"] = validatorResult.value;
    }
  }
  if (errors.length > 0) {
    return { errors };
  }
  return { value: result };
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<StoreJobUpdatePartial>}
 */
export function anonymousValidator1605797260(value, propertyPath) {
  if (isNil(value)) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.reference.undefined",
          info: {},
        },
      ],
    };
  }
  return anonymousValidator600940900(value, propertyPath);
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<StoreJobWhere>}
 */
export function anonymousValidator1216835869(value, propertyPath) {
  if (isNil(value)) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.reference.undefined",
          info: {},
        },
      ],
    };
  }
  return anonymousValidator1257773835(value, propertyPath);
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<"id"|"isComplete"|"priority"|"scheduledAt"|"name"|"data"|"retryCount"|"handlerTimeout"|"createdAt"|"updatedAt">}
 */
export function anonymousValidator1079091822(value, propertyPath) {
  if (isNil(value)) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.string.undefined",
          info: {},
        },
      ],
    };
  }
  if (typeof value !== "string") {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.string.type",
          info: {},
        },
      ],
    };
  }
  if (value.length < 1) {
    const min = 1;
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.string.min",
          info: { min },
        },
      ],
    };
  }
  if (
    value !== "id" &&
    value !== "isComplete" &&
    value !== "priority" &&
    value !== "scheduledAt" &&
    value !== "name" &&
    value !== "data" &&
    value !== "retryCount" &&
    value !== "handlerTimeout" &&
    value !== "createdAt" &&
    value !== "updatedAt"
  ) {
    const oneOf = [
      "id",
      "isComplete",
      "priority",
      "scheduledAt",
      "name",
      "data",
      "retryCount",
      "handlerTimeout",
      "createdAt",
      "updatedAt",
    ];
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.string.oneOf",
          info: { oneOf },
        },
      ],
    };
  }
  return { value };
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<("id"|"isComplete"|"priority"|"scheduledAt"|"name"|"data"|"retryCount"|"handlerTimeout"|"createdAt"|"updatedAt")[]>}
 */
export function anonymousValidator68688236(value, propertyPath) {
  if (isNil(value)) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.array.undefined",
          info: {},
        },
      ],
    };
  }
  if (!Array.isArray(value)) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.array.type",
          info: {},
        },
      ],
    };
  }
  const result = Array.from({ length: value.length });
  let errors = [];
  for (let i = 0; i < value.length; ++i) {
    const arrVar = anonymousValidator1079091822(
      value[i],
      propertyPath + "[" + i + "]",
    );
    if (arrVar.errors) {
      errors.push(...arrVar.errors);
    } else {
      result[i] = arrVar.value;
    }
  }
  if (errors.length > 0) {
    /** @type {{ errors: InternalError[] }} */
    return { errors };
  }
  return { value: result };
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<undefined|"*"|("id"|"isComplete"|"priority"|"scheduledAt"|"name"|"data"|"retryCount"|"handlerTimeout"|"createdAt"|"updatedAt")[]>}
 */
export function anonymousValidator2017242205(value, propertyPath) {
  if (isNil(value)) {
    return { value: undefined };
  }
  /** @type {InternalError[]} */
  let errors = [];
  /** @type {EitherN<undefined|"*"|("id"|"isComplete"|"priority"|"scheduledAt"|"name"|"data"|"retryCount"|"handlerTimeout"|"createdAt"|"updatedAt")[]>} */
  let result = { errors: [] };
  result = anonymousValidator358976960(value, propertyPath);
  if (result.errors) {
    errors.push(result.errors[0]);
  } else {
    return result;
  }
  result = anonymousValidator68688236(value, propertyPath);
  if (result.errors) {
    errors.push(result.errors[0]);
  } else {
    return result;
  }
  for (const err of errors) {
    err.info.via = "validator.anyOf";
  }
  return {
    errors,
  };
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<{"update": StoreJobUpdatePartial, "where": StoreJobWhere, "returning"?: undefined|"*"|("id"|"isComplete"|"priority"|"scheduledAt"|"name"|"data"|"retryCount"|"handlerTimeout"|"createdAt"|"updatedAt")[], }>}
 */
export function anonymousValidator286367525(value, propertyPath) {
  if (isNil(value)) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.object.undefined",
          info: {},
        },
      ],
    };
  }
  if (typeof value !== "object") {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.object.type",
          info: {},
        },
      ],
    };
  }
  const result = Object.create(null);
  let errors = [];
  for (const key of Object.keys(value)) {
    if (!objectKeys286367525.has(key)) {
      /** @type {{ errors: InternalError[] }} */
      return {
        errors: [
          {
            propertyPath,
            key: "validator.object.strict",
            info: {
              expectedKeys: [...objectKeys286367525],
              foundKeys: [...Object.keys(value)],
            },
          },
        ],
      };
    }
  }
  {
    const validatorResult = anonymousValidator1605797260(
      value["update"],
      `${propertyPath}.update`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["update"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator1216835869(
      value["where"],
      `${propertyPath}.where`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["where"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator2017242205(
      value["returning"],
      `${propertyPath}.returning`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["returning"] = validatorResult.value;
    }
  }
  if (errors.length > 0) {
    return { errors };
  }
  return { value: result };
}
/**
* @param {*} value
* @param {string} propertyPath
* @returns {EitherN<<I extends StoreJobUpdate>(
sql: import("@compas/store").Postgres,
input: I,
) => Promise<
import("@compas/store").Returning<StoreJob, I["returning"]>
>>}
*/
export function anonymousValidator321286861(value, propertyPath) {
  if (isNil(value)) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.any.undefined",
          info: {},
        },
      ],
    };
  }
  return { value };
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<undefined|null|Date>}
 */
export function anonymousValidator795383528(value, propertyPath) {
  if (isNil(value)) {
    return { value: value };
  }
  if (
    typeof value !== "string" &&
    typeof value !== "number" &&
    !(value instanceof Date)
  ) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.date.invalid",
          info: {},
        },
      ],
    };
  }
  const date = new Date(value);
  if (isNaN(date.getTime())) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.date.invalid",
          info: {},
        },
      ],
    };
  }
  return { value: date };
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<undefined|null|Date|{"$add": string, }|{"$subtract": string, }>}
 */
export function anonymousValidator1827465744(value, propertyPath) {
  if (isNil(value)) {
    return { value: undefined };
  }
  /** @type {InternalError[]} */
  let errors = [];
  /** @type {EitherN<undefined|null|Date|{"$add": string, }|{"$subtract": string, }>} */
  let result = { errors: [] };
  result = anonymousValidator795383528(value, propertyPath);
  if (result.errors) {
    errors.push(result.errors[0]);
  } else {
    return result;
  }
  result = anonymousValidator1992090661(value, propertyPath);
  if (result.errors) {
    errors.push(result.errors[0]);
  } else {
    return result;
  }
  result = anonymousValidator962402990(value, propertyPath);
  if (result.errors) {
    errors.push(result.errors[0]);
  } else {
    return result;
  }
  for (const err of errors) {
    err.info.via = "validator.anyOf";
  }
  return {
    errors,
  };
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<{"data"?: undefined|any|{"$set": {"path": (number|string)[], "value": any, }, }|{"$remove": {"path": (number|string)[], }, }, "checksum"?: undefined|string|{"$append": string, }, "revokedAt"?: undefined|null|Date|{"$add": string, }|{"$subtract": string, }, "createdAt"?: undefined|Date|{"$add": string, }|{"$subtract": string, }, "updatedAt"?: undefined|Date|{"$add": string, }|{"$subtract": string, }, }>}
 */
export function anonymousValidator2102646924(value, propertyPath) {
  if (isNil(value)) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.object.undefined",
          info: {},
        },
      ],
    };
  }
  if (typeof value !== "object") {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.object.type",
          info: {},
        },
      ],
    };
  }
  const result = Object.create(null);
  let errors = [];
  for (const key of Object.keys(value)) {
    if (!objectKeys2102646924.has(key)) {
      /** @type {{ errors: InternalError[] }} */
      return {
        errors: [
          {
            propertyPath,
            key: "validator.object.strict",
            info: {
              expectedKeys: [...objectKeys2102646924],
              foundKeys: [...Object.keys(value)],
            },
          },
        ],
      };
    }
  }
  {
    const validatorResult = anonymousValidator618537896(
      value["data"],
      `${propertyPath}.data`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["data"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator2011937852(
      value["checksum"],
      `${propertyPath}.checksum`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["checksum"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator1827465744(
      value["revokedAt"],
      `${propertyPath}.revokedAt`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["revokedAt"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator1398947189(
      value["createdAt"],
      `${propertyPath}.createdAt`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["createdAt"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator1398947189(
      value["updatedAt"],
      `${propertyPath}.updatedAt`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["updatedAt"] = validatorResult.value;
    }
  }
  if (errors.length > 0) {
    return { errors };
  }
  return { value: result };
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<StoreSessionStoreUpdatePartial>}
 */
export function anonymousValidator75403188(value, propertyPath) {
  if (isNil(value)) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.reference.undefined",
          info: {},
        },
      ],
    };
  }
  return anonymousValidator2102646924(value, propertyPath);
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<StoreSessionStoreWhere>}
 */
export function anonymousValidator1874256931(value, propertyPath) {
  if (isNil(value)) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.reference.undefined",
          info: {},
        },
      ],
    };
  }
  return anonymousValidator1334934277(value, propertyPath);
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<"data"|"checksum"|"revokedAt"|"id"|"createdAt"|"updatedAt">}
 */
export function anonymousValidator1972584104(value, propertyPath) {
  if (isNil(value)) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.string.undefined",
          info: {},
        },
      ],
    };
  }
  if (typeof value !== "string") {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.string.type",
          info: {},
        },
      ],
    };
  }
  if (value.length < 1) {
    const min = 1;
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.string.min",
          info: { min },
        },
      ],
    };
  }
  if (
    value !== "data" &&
    value !== "checksum" &&
    value !== "revokedAt" &&
    value !== "id" &&
    value !== "createdAt" &&
    value !== "updatedAt"
  ) {
    const oneOf = [
      "data",
      "checksum",
      "revokedAt",
      "id",
      "createdAt",
      "updatedAt",
    ];
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.string.oneOf",
          info: { oneOf },
        },
      ],
    };
  }
  return { value };
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<("data"|"checksum"|"revokedAt"|"id"|"createdAt"|"updatedAt")[]>}
 */
export function anonymousValidator260152150(value, propertyPath) {
  if (isNil(value)) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.array.undefined",
          info: {},
        },
      ],
    };
  }
  if (!Array.isArray(value)) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.array.type",
          info: {},
        },
      ],
    };
  }
  const result = Array.from({ length: value.length });
  let errors = [];
  for (let i = 0; i < value.length; ++i) {
    const arrVar = anonymousValidator1972584104(
      value[i],
      propertyPath + "[" + i + "]",
    );
    if (arrVar.errors) {
      errors.push(...arrVar.errors);
    } else {
      result[i] = arrVar.value;
    }
  }
  if (errors.length > 0) {
    /** @type {{ errors: InternalError[] }} */
    return { errors };
  }
  return { value: result };
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<undefined|"*"|("data"|"checksum"|"revokedAt"|"id"|"createdAt"|"updatedAt")[]>}
 */
export function anonymousValidator1317514041(value, propertyPath) {
  if (isNil(value)) {
    return { value: undefined };
  }
  /** @type {InternalError[]} */
  let errors = [];
  /** @type {EitherN<undefined|"*"|("data"|"checksum"|"revokedAt"|"id"|"createdAt"|"updatedAt")[]>} */
  let result = { errors: [] };
  result = anonymousValidator358976960(value, propertyPath);
  if (result.errors) {
    errors.push(result.errors[0]);
  } else {
    return result;
  }
  result = anonymousValidator260152150(value, propertyPath);
  if (result.errors) {
    errors.push(result.errors[0]);
  } else {
    return result;
  }
  for (const err of errors) {
    err.info.via = "validator.anyOf";
  }
  return {
    errors,
  };
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<{"update": StoreSessionStoreUpdatePartial, "where": StoreSessionStoreWhere, "returning"?: undefined|"*"|("data"|"checksum"|"revokedAt"|"id"|"createdAt"|"updatedAt")[], }>}
 */
export function anonymousValidator1516794677(value, propertyPath) {
  if (isNil(value)) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.object.undefined",
          info: {},
        },
      ],
    };
  }
  if (typeof value !== "object") {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.object.type",
          info: {},
        },
      ],
    };
  }
  const result = Object.create(null);
  let errors = [];
  for (const key of Object.keys(value)) {
    if (!objectKeys1516794677.has(key)) {
      /** @type {{ errors: InternalError[] }} */
      return {
        errors: [
          {
            propertyPath,
            key: "validator.object.strict",
            info: {
              expectedKeys: [...objectKeys1516794677],
              foundKeys: [...Object.keys(value)],
            },
          },
        ],
      };
    }
  }
  {
    const validatorResult = anonymousValidator75403188(
      value["update"],
      `${propertyPath}.update`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["update"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator1874256931(
      value["where"],
      `${propertyPath}.where`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["where"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator1317514041(
      value["returning"],
      `${propertyPath}.returning`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["returning"] = validatorResult.value;
    }
  }
  if (errors.length > 0) {
    return { errors };
  }
  return { value: result };
}
/**
* @param {*} value
* @param {string} propertyPath
* @returns {EitherN<<I extends StoreSessionStoreUpdate>(
sql: import("@compas/store").Postgres,
input: I,
) => Promise<
import("@compas/store").Returning<StoreSessionStore, I["returning"]>
>>}
*/
export function anonymousValidator1645773533(value, propertyPath) {
  if (isNil(value)) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.any.undefined",
          info: {},
        },
      ],
    };
  }
  return { value };
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<undefined|Date|{"$add": string, }|{"$subtract": string, }>}
 */
export function anonymousValidator2131524087(value, propertyPath) {
  if (isNil(value)) {
    return { value: undefined };
  }
  /** @type {InternalError[]} */
  let errors = [];
  /** @type {EitherN<undefined|Date|{"$add": string, }|{"$subtract": string, }>} */
  let result = { errors: [] };
  result = anonymousValidator685440859(value, propertyPath);
  if (result.errors) {
    errors.push(result.errors[0]);
  } else {
    return result;
  }
  result = anonymousValidator1992090661(value, propertyPath);
  if (result.errors) {
    errors.push(result.errors[0]);
  } else {
    return result;
  }
  result = anonymousValidator962402990(value, propertyPath);
  if (result.errors) {
    errors.push(result.errors[0]);
  } else {
    return result;
  }
  for (const err of errors) {
    err.info.via = "validator.anyOf";
  }
  return {
    errors,
  };
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<undefined|string>}
 */
export function anonymousValidator180603534(value, propertyPath) {
  if (isNil(value)) {
    return { value: undefined };
  }
  return anonymousValidator981662321(value, propertyPath);
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<undefined|string>}
 */
export function anonymousValidator1865468913(value, propertyPath) {
  if (isNil(value)) {
    return { value: undefined };
  }
  /** @type {InternalError[]} */
  let errors = [];
  /** @type {EitherN<undefined|string>} */
  let result = { errors: [] };
  result = anonymousValidator180603534(value, propertyPath);
  if (result.errors) {
    errors.push(result.errors[0]);
  } else {
    return result;
  }
  for (const err of errors) {
    err.info.via = "validator.anyOf";
  }
  return {
    errors,
  };
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<undefined|null|string>}
 */
export function anonymousValidator290546203(value, propertyPath) {
  if (isNil(value)) {
    return { value: value };
  }
  return anonymousValidator981662321(value, propertyPath);
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<undefined|null|string>}
 */
export function anonymousValidator1314728024(value, propertyPath) {
  if (isNil(value)) {
    return { value: undefined };
  }
  /** @type {InternalError[]} */
  let errors = [];
  /** @type {EitherN<undefined|null|string>} */
  let result = { errors: [] };
  result = anonymousValidator290546203(value, propertyPath);
  if (result.errors) {
    errors.push(result.errors[0]);
  } else {
    return result;
  }
  for (const err of errors) {
    err.info.via = "validator.anyOf";
  }
  return {
    errors,
  };
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<{"expiresAt"?: undefined|Date|{"$add": string, }|{"$subtract": string, }, "revokedAt"?: undefined|null|Date|{"$add": string, }|{"$subtract": string, }, "createdAt"?: undefined|Date|{"$add": string, }|{"$subtract": string, }, "session"?: undefined|string, "refreshToken"?: undefined|null|string, }>}
 */
export function anonymousValidator84897941(value, propertyPath) {
  if (isNil(value)) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.object.undefined",
          info: {},
        },
      ],
    };
  }
  if (typeof value !== "object") {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.object.type",
          info: {},
        },
      ],
    };
  }
  const result = Object.create(null);
  let errors = [];
  for (const key of Object.keys(value)) {
    if (!objectKeys84897941.has(key)) {
      /** @type {{ errors: InternalError[] }} */
      return {
        errors: [
          {
            propertyPath,
            key: "validator.object.strict",
            info: {
              expectedKeys: [...objectKeys84897941],
              foundKeys: [...Object.keys(value)],
            },
          },
        ],
      };
    }
  }
  {
    const validatorResult = anonymousValidator2131524087(
      value["expiresAt"],
      `${propertyPath}.expiresAt`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["expiresAt"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator1827465744(
      value["revokedAt"],
      `${propertyPath}.revokedAt`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["revokedAt"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator2131524087(
      value["createdAt"],
      `${propertyPath}.createdAt`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["createdAt"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator1865468913(
      value["session"],
      `${propertyPath}.session`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["session"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator1314728024(
      value["refreshToken"],
      `${propertyPath}.refreshToken`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["refreshToken"] = validatorResult.value;
    }
  }
  if (errors.length > 0) {
    return { errors };
  }
  return { value: result };
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<StoreSessionStoreTokenUpdatePartial>}
 */
export function anonymousValidator383643325(value, propertyPath) {
  if (isNil(value)) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.reference.undefined",
          info: {},
        },
      ],
    };
  }
  return anonymousValidator84897941(value, propertyPath);
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<StoreSessionStoreTokenWhere>}
 */
export function anonymousValidator1134585010(value, propertyPath) {
  if (isNil(value)) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.reference.undefined",
          info: {},
        },
      ],
    };
  }
  return anonymousValidator1430489818(value, propertyPath);
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<"expiresAt"|"revokedAt"|"createdAt"|"id"|"session"|"refreshToken">}
 */
export function anonymousValidator1022399486(value, propertyPath) {
  if (isNil(value)) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.string.undefined",
          info: {},
        },
      ],
    };
  }
  if (typeof value !== "string") {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.string.type",
          info: {},
        },
      ],
    };
  }
  if (value.length < 1) {
    const min = 1;
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.string.min",
          info: { min },
        },
      ],
    };
  }
  if (
    value !== "expiresAt" &&
    value !== "revokedAt" &&
    value !== "createdAt" &&
    value !== "id" &&
    value !== "session" &&
    value !== "refreshToken"
  ) {
    const oneOf = [
      "expiresAt",
      "revokedAt",
      "createdAt",
      "id",
      "session",
      "refreshToken",
    ];
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.string.oneOf",
          info: { oneOf },
        },
      ],
    };
  }
  return { value };
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<("expiresAt"|"revokedAt"|"createdAt"|"id"|"session"|"refreshToken")[]>}
 */
export function anonymousValidator267319364(value, propertyPath) {
  if (isNil(value)) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.array.undefined",
          info: {},
        },
      ],
    };
  }
  if (!Array.isArray(value)) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.array.type",
          info: {},
        },
      ],
    };
  }
  const result = Array.from({ length: value.length });
  let errors = [];
  for (let i = 0; i < value.length; ++i) {
    const arrVar = anonymousValidator1022399486(
      value[i],
      propertyPath + "[" + i + "]",
    );
    if (arrVar.errors) {
      errors.push(...arrVar.errors);
    } else {
      result[i] = arrVar.value;
    }
  }
  if (errors.length > 0) {
    /** @type {{ errors: InternalError[] }} */
    return { errors };
  }
  return { value: result };
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<undefined|"*"|("expiresAt"|"revokedAt"|"createdAt"|"id"|"session"|"refreshToken")[]>}
 */
export function anonymousValidator17493427(value, propertyPath) {
  if (isNil(value)) {
    return { value: undefined };
  }
  /** @type {InternalError[]} */
  let errors = [];
  /** @type {EitherN<undefined|"*"|("expiresAt"|"revokedAt"|"createdAt"|"id"|"session"|"refreshToken")[]>} */
  let result = { errors: [] };
  result = anonymousValidator358976960(value, propertyPath);
  if (result.errors) {
    errors.push(result.errors[0]);
  } else {
    return result;
  }
  result = anonymousValidator267319364(value, propertyPath);
  if (result.errors) {
    errors.push(result.errors[0]);
  } else {
    return result;
  }
  for (const err of errors) {
    err.info.via = "validator.anyOf";
  }
  return {
    errors,
  };
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<{"update": StoreSessionStoreTokenUpdatePartial, "where": StoreSessionStoreTokenWhere, "returning"?: undefined|"*"|("expiresAt"|"revokedAt"|"createdAt"|"id"|"session"|"refreshToken")[], }>}
 */
export function anonymousValidator1345595702(value, propertyPath) {
  if (isNil(value)) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.object.undefined",
          info: {},
        },
      ],
    };
  }
  if (typeof value !== "object") {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.object.type",
          info: {},
        },
      ],
    };
  }
  const result = Object.create(null);
  let errors = [];
  for (const key of Object.keys(value)) {
    if (!objectKeys1345595702.has(key)) {
      /** @type {{ errors: InternalError[] }} */
      return {
        errors: [
          {
            propertyPath,
            key: "validator.object.strict",
            info: {
              expectedKeys: [...objectKeys1345595702],
              foundKeys: [...Object.keys(value)],
            },
          },
        ],
      };
    }
  }
  {
    const validatorResult = anonymousValidator383643325(
      value["update"],
      `${propertyPath}.update`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["update"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator1134585010(
      value["where"],
      `${propertyPath}.where`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["where"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator17493427(
      value["returning"],
      `${propertyPath}.returning`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["returning"] = validatorResult.value;
    }
  }
  if (errors.length > 0) {
    return { errors };
  }
  return { value: result };
}
/**
* @param {*} value
* @param {string} propertyPath
* @returns {EitherN<<I extends StoreSessionStoreTokenUpdate>(
sql: import("@compas/store").Postgres,
input: I,
) => Promise<
import("@compas/store").Returning<StoreSessionStoreToken, I["returning"]>
>>}
*/
export function anonymousValidator332315806(value, propertyPath) {
  if (isNil(value)) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.any.undefined",
          info: {},
        },
      ],
    };
  }
  return { value };
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<QueryPart<any>>}
 */
export function anonymousValidator62764704(value, propertyPath) {
  if (isNil(value)) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.any.undefined",
          info: {},
        },
      ],
    };
  }
  if (!isQueryPart(value)) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.any.custom",
          info: {},
        },
      ],
    };
  }
  return { value };
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<"id"|"bucketName"|"createdAt"|"updatedAt">}
 */
export function anonymousValidator988235265(value, propertyPath) {
  if (isNil(value)) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.string.undefined",
          info: {},
        },
      ],
    };
  }
  if (typeof value !== "string") {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.string.type",
          info: {},
        },
      ],
    };
  }
  if (value.length < 1) {
    const min = 1;
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.string.min",
          info: { min },
        },
      ],
    };
  }
  if (
    value !== "id" &&
    value !== "bucketName" &&
    value !== "createdAt" &&
    value !== "updatedAt"
  ) {
    const oneOf = ["id", "bucketName", "createdAt", "updatedAt"];
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.string.oneOf",
          info: { oneOf },
        },
      ],
    };
  }
  return { value };
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<("id"|"bucketName"|"createdAt"|"updatedAt")[]>}
 */
export function anonymousValidator1157993407(value, propertyPath) {
  if (isNil(value)) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.array.undefined",
          info: {},
        },
      ],
    };
  }
  if (!Array.isArray(value)) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.array.type",
          info: {},
        },
      ],
    };
  }
  const result = Array.from({ length: value.length });
  let errors = [];
  for (let i = 0; i < value.length; ++i) {
    const arrVar = anonymousValidator988235265(
      value[i],
      propertyPath + "[" + i + "]",
    );
    if (arrVar.errors) {
      errors.push(...arrVar.errors);
    } else {
      result[i] = arrVar.value;
    }
  }
  if (errors.length > 0) {
    /** @type {{ errors: InternalError[] }} */
    return { errors };
  }
  return { value: result };
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<QueryPart<any>|("id"|"bucketName"|"createdAt"|"updatedAt")[]>}
 */
export function anonymousValidator1795948632(value, propertyPath) {
  if (isNil(value)) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.anyOf.undefined",
          info: {},
        },
      ],
    };
  }
  /** @type {InternalError[]} */
  let errors = [];
  /** @type {EitherN<QueryPart<any>|("id"|"bucketName"|"createdAt"|"updatedAt")[]>} */
  let result = { errors: [] };
  result = anonymousValidator62764704(value, propertyPath);
  if (result.errors) {
    errors.push(result.errors[0]);
  } else {
    return result;
  }
  result = anonymousValidator1157993407(value, propertyPath);
  if (result.errors) {
    errors.push(result.errors[0]);
  } else {
    return result;
  }
  for (const err of errors) {
    err.info.via = "validator.anyOf";
  }
  return {
    errors,
  };
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<undefined|CompasOrderBy>}
 */
export function anonymousValidator704118887(value, propertyPath) {
  if (isNil(value)) {
    return { value: undefined };
  }
  return anonymousValidator80886428(value, propertyPath);
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<{"id"?: undefined|CompasOrderBy, "bucketName"?: undefined|CompasOrderBy, "createdAt"?: undefined|CompasOrderBy, "updatedAt"?: undefined|CompasOrderBy, }>}
 */
export function anonymousValidator163358845(value, propertyPath) {
  if (isNil(value)) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.object.undefined",
          info: {},
        },
      ],
    };
  }
  if (typeof value !== "object") {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.object.type",
          info: {},
        },
      ],
    };
  }
  const result = Object.create(null);
  let errors = [];
  for (const key of Object.keys(value)) {
    if (!objectKeys163358845.has(key)) {
      /** @type {{ errors: InternalError[] }} */
      return {
        errors: [
          {
            propertyPath,
            key: "validator.object.strict",
            info: {
              expectedKeys: [...objectKeys163358845],
              foundKeys: [...Object.keys(value)],
            },
          },
        ],
      };
    }
  }
  {
    const validatorResult = anonymousValidator704118887(
      value["id"],
      `${propertyPath}.id`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["id"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator704118887(
      value["bucketName"],
      `${propertyPath}.bucketName`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["bucketName"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator704118887(
      value["createdAt"],
      `${propertyPath}.createdAt`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["createdAt"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator704118887(
      value["updatedAt"],
      `${propertyPath}.updatedAt`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["updatedAt"] = validatorResult.value;
    }
  }
  if (errors.length > 0) {
    return { errors };
  }
  return { value: result };
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<"id"|"isComplete"|"name"|"scheduledAt"|"createdAt"|"updatedAt">}
 */
export function anonymousValidator1072183914(value, propertyPath) {
  if (isNil(value)) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.string.undefined",
          info: {},
        },
      ],
    };
  }
  if (typeof value !== "string") {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.string.type",
          info: {},
        },
      ],
    };
  }
  if (value.length < 1) {
    const min = 1;
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.string.min",
          info: { min },
        },
      ],
    };
  }
  if (
    value !== "id" &&
    value !== "isComplete" &&
    value !== "name" &&
    value !== "scheduledAt" &&
    value !== "createdAt" &&
    value !== "updatedAt"
  ) {
    const oneOf = [
      "id",
      "isComplete",
      "name",
      "scheduledAt",
      "createdAt",
      "updatedAt",
    ];
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.string.oneOf",
          info: { oneOf },
        },
      ],
    };
  }
  return { value };
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<("id"|"isComplete"|"name"|"scheduledAt"|"createdAt"|"updatedAt")[]>}
 */
export function anonymousValidator1693224812(value, propertyPath) {
  if (isNil(value)) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.array.undefined",
          info: {},
        },
      ],
    };
  }
  if (!Array.isArray(value)) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.array.type",
          info: {},
        },
      ],
    };
  }
  const result = Array.from({ length: value.length });
  let errors = [];
  for (let i = 0; i < value.length; ++i) {
    const arrVar = anonymousValidator1072183914(
      value[i],
      propertyPath + "[" + i + "]",
    );
    if (arrVar.errors) {
      errors.push(...arrVar.errors);
    } else {
      result[i] = arrVar.value;
    }
  }
  if (errors.length > 0) {
    /** @type {{ errors: InternalError[] }} */
    return { errors };
  }
  return { value: result };
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<QueryPart<any>|("id"|"isComplete"|"name"|"scheduledAt"|"createdAt"|"updatedAt")[]>}
 */
export function anonymousValidator685221527(value, propertyPath) {
  if (isNil(value)) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.anyOf.undefined",
          info: {},
        },
      ],
    };
  }
  /** @type {InternalError[]} */
  let errors = [];
  /** @type {EitherN<QueryPart<any>|("id"|"isComplete"|"name"|"scheduledAt"|"createdAt"|"updatedAt")[]>} */
  let result = { errors: [] };
  result = anonymousValidator62764704(value, propertyPath);
  if (result.errors) {
    errors.push(result.errors[0]);
  } else {
    return result;
  }
  result = anonymousValidator1693224812(value, propertyPath);
  if (result.errors) {
    errors.push(result.errors[0]);
  } else {
    return result;
  }
  for (const err of errors) {
    err.info.via = "validator.anyOf";
  }
  return {
    errors,
  };
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<undefined|CompasOrderByOptional>}
 */
export function anonymousValidator1515977191(value, propertyPath) {
  if (isNil(value)) {
    return { value: undefined };
  }
  return anonymousValidator293130468(value, propertyPath);
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<{"id"?: undefined|CompasOrderBy, "isComplete"?: undefined|CompasOrderByOptional, "name"?: undefined|CompasOrderBy, "scheduledAt"?: undefined|CompasOrderByOptional, "createdAt"?: undefined|CompasOrderBy, "updatedAt"?: undefined|CompasOrderBy, }>}
 */
export function anonymousValidator280827708(value, propertyPath) {
  if (isNil(value)) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.object.undefined",
          info: {},
        },
      ],
    };
  }
  if (typeof value !== "object") {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.object.type",
          info: {},
        },
      ],
    };
  }
  const result = Object.create(null);
  let errors = [];
  for (const key of Object.keys(value)) {
    if (!objectKeys280827708.has(key)) {
      /** @type {{ errors: InternalError[] }} */
      return {
        errors: [
          {
            propertyPath,
            key: "validator.object.strict",
            info: {
              expectedKeys: [...objectKeys280827708],
              foundKeys: [...Object.keys(value)],
            },
          },
        ],
      };
    }
  }
  {
    const validatorResult = anonymousValidator704118887(
      value["id"],
      `${propertyPath}.id`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["id"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator1515977191(
      value["isComplete"],
      `${propertyPath}.isComplete`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["isComplete"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator704118887(
      value["name"],
      `${propertyPath}.name`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["name"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator1515977191(
      value["scheduledAt"],
      `${propertyPath}.scheduledAt`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["scheduledAt"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator704118887(
      value["createdAt"],
      `${propertyPath}.createdAt`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["createdAt"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator704118887(
      value["updatedAt"],
      `${propertyPath}.updatedAt`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["updatedAt"] = validatorResult.value;
    }
  }
  if (errors.length > 0) {
    return { errors };
  }
  return { value: result };
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<"id"|"createdAt"|"updatedAt">}
 */
export function anonymousValidator1417351642(value, propertyPath) {
  if (isNil(value)) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.string.undefined",
          info: {},
        },
      ],
    };
  }
  if (typeof value !== "string") {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.string.type",
          info: {},
        },
      ],
    };
  }
  if (value.length < 1) {
    const min = 1;
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.string.min",
          info: { min },
        },
      ],
    };
  }
  if (value !== "id" && value !== "createdAt" && value !== "updatedAt") {
    const oneOf = ["id", "createdAt", "updatedAt"];
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.string.oneOf",
          info: { oneOf },
        },
      ],
    };
  }
  return { value };
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<("id"|"createdAt"|"updatedAt")[]>}
 */
export function anonymousValidator800802652(value, propertyPath) {
  if (isNil(value)) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.array.undefined",
          info: {},
        },
      ],
    };
  }
  if (!Array.isArray(value)) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.array.type",
          info: {},
        },
      ],
    };
  }
  const result = Array.from({ length: value.length });
  let errors = [];
  for (let i = 0; i < value.length; ++i) {
    const arrVar = anonymousValidator1417351642(
      value[i],
      propertyPath + "[" + i + "]",
    );
    if (arrVar.errors) {
      errors.push(...arrVar.errors);
    } else {
      result[i] = arrVar.value;
    }
  }
  if (errors.length > 0) {
    /** @type {{ errors: InternalError[] }} */
    return { errors };
  }
  return { value: result };
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<QueryPart<any>|("id"|"createdAt"|"updatedAt")[]>}
 */
export function anonymousValidator1196685479(value, propertyPath) {
  if (isNil(value)) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.anyOf.undefined",
          info: {},
        },
      ],
    };
  }
  /** @type {InternalError[]} */
  let errors = [];
  /** @type {EitherN<QueryPart<any>|("id"|"createdAt"|"updatedAt")[]>} */
  let result = { errors: [] };
  result = anonymousValidator62764704(value, propertyPath);
  if (result.errors) {
    errors.push(result.errors[0]);
  } else {
    return result;
  }
  result = anonymousValidator800802652(value, propertyPath);
  if (result.errors) {
    errors.push(result.errors[0]);
  } else {
    return result;
  }
  for (const err of errors) {
    err.info.via = "validator.anyOf";
  }
  return {
    errors,
  };
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<{"id"?: undefined|CompasOrderBy, "createdAt"?: undefined|CompasOrderBy, "updatedAt"?: undefined|CompasOrderBy, }>}
 */
export function anonymousValidator362930508(value, propertyPath) {
  if (isNil(value)) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.object.undefined",
          info: {},
        },
      ],
    };
  }
  if (typeof value !== "object") {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.object.type",
          info: {},
        },
      ],
    };
  }
  const result = Object.create(null);
  let errors = [];
  for (const key of Object.keys(value)) {
    if (!objectKeys362930508.has(key)) {
      /** @type {{ errors: InternalError[] }} */
      return {
        errors: [
          {
            propertyPath,
            key: "validator.object.strict",
            info: {
              expectedKeys: [...objectKeys362930508],
              foundKeys: [...Object.keys(value)],
            },
          },
        ],
      };
    }
  }
  {
    const validatorResult = anonymousValidator704118887(
      value["id"],
      `${propertyPath}.id`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["id"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator704118887(
      value["createdAt"],
      `${propertyPath}.createdAt`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["createdAt"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator704118887(
      value["updatedAt"],
      `${propertyPath}.updatedAt`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["updatedAt"] = validatorResult.value;
    }
  }
  if (errors.length > 0) {
    return { errors };
  }
  return { value: result };
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<"id"|"session"|"expiresAt"|"refreshToken"|"revokedAt">}
 */
export function anonymousValidator350591811(value, propertyPath) {
  if (isNil(value)) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.string.undefined",
          info: {},
        },
      ],
    };
  }
  if (typeof value !== "string") {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.string.type",
          info: {},
        },
      ],
    };
  }
  if (value.length < 1) {
    const min = 1;
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.string.min",
          info: { min },
        },
      ],
    };
  }
  if (
    value !== "id" &&
    value !== "session" &&
    value !== "expiresAt" &&
    value !== "refreshToken" &&
    value !== "revokedAt"
  ) {
    const oneOf = ["id", "session", "expiresAt", "refreshToken", "revokedAt"];
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.string.oneOf",
          info: { oneOf },
        },
      ],
    };
  }
  return { value };
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<("id"|"session"|"expiresAt"|"refreshToken"|"revokedAt")[]>}
 */
export function anonymousValidator644613499(value, propertyPath) {
  if (isNil(value)) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.array.undefined",
          info: {},
        },
      ],
    };
  }
  if (!Array.isArray(value)) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.array.type",
          info: {},
        },
      ],
    };
  }
  const result = Array.from({ length: value.length });
  let errors = [];
  for (let i = 0; i < value.length; ++i) {
    const arrVar = anonymousValidator350591811(
      value[i],
      propertyPath + "[" + i + "]",
    );
    if (arrVar.errors) {
      errors.push(...arrVar.errors);
    } else {
      result[i] = arrVar.value;
    }
  }
  if (errors.length > 0) {
    /** @type {{ errors: InternalError[] }} */
    return { errors };
  }
  return { value: result };
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<QueryPart<any>|("id"|"session"|"expiresAt"|"refreshToken"|"revokedAt")[]>}
 */
export function anonymousValidator2086080888(value, propertyPath) {
  if (isNil(value)) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.anyOf.undefined",
          info: {},
        },
      ],
    };
  }
  /** @type {InternalError[]} */
  let errors = [];
  /** @type {EitherN<QueryPart<any>|("id"|"session"|"expiresAt"|"refreshToken"|"revokedAt")[]>} */
  let result = { errors: [] };
  result = anonymousValidator62764704(value, propertyPath);
  if (result.errors) {
    errors.push(result.errors[0]);
  } else {
    return result;
  }
  result = anonymousValidator644613499(value, propertyPath);
  if (result.errors) {
    errors.push(result.errors[0]);
  } else {
    return result;
  }
  for (const err of errors) {
    err.info.via = "validator.anyOf";
  }
  return {
    errors,
  };
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<{"id"?: undefined|CompasOrderBy, "session"?: undefined|CompasOrderBy, "expiresAt"?: undefined|CompasOrderBy, "refreshToken"?: undefined|CompasOrderByOptional, "revokedAt"?: undefined|CompasOrderByOptional, }>}
 */
export function anonymousValidator1864958291(value, propertyPath) {
  if (isNil(value)) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.object.undefined",
          info: {},
        },
      ],
    };
  }
  if (typeof value !== "object") {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.object.type",
          info: {},
        },
      ],
    };
  }
  const result = Object.create(null);
  let errors = [];
  for (const key of Object.keys(value)) {
    if (!objectKeys1864958291.has(key)) {
      /** @type {{ errors: InternalError[] }} */
      return {
        errors: [
          {
            propertyPath,
            key: "validator.object.strict",
            info: {
              expectedKeys: [...objectKeys1864958291],
              foundKeys: [...Object.keys(value)],
            },
          },
        ],
      };
    }
  }
  {
    const validatorResult = anonymousValidator704118887(
      value["id"],
      `${propertyPath}.id`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["id"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator704118887(
      value["session"],
      `${propertyPath}.session`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["session"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator704118887(
      value["expiresAt"],
      `${propertyPath}.expiresAt`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["expiresAt"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator1515977191(
      value["refreshToken"],
      `${propertyPath}.refreshToken`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["refreshToken"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator1515977191(
      value["revokedAt"],
      `${propertyPath}.revokedAt`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["revokedAt"] = validatorResult.value;
    }
  }
  if (errors.length > 0) {
    return { errors };
  }
  return { value: result };
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<undefined|StoreFileWhere>}
 */
export function anonymousValidator65842827(value, propertyPath) {
  if (isNil(value)) {
    return { value: undefined };
  }
  return anonymousValidator2074494218(value, propertyPath);
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<undefined|StoreFileOrderBy>}
 */
export function anonymousValidator1370514093(value, propertyPath) {
  if (isNil(value)) {
    return { value: undefined };
  }
  return anonymousValidator1795948632(value, propertyPath);
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<undefined|StoreFileOrderBySpec>}
 */
export function anonymousValidator1745737810(value, propertyPath) {
  if (isNil(value)) {
    return { value: undefined };
  }
  return anonymousValidator163358845(value, propertyPath);
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<undefined|string>}
 */
export function anonymousValidator1443576836(value, propertyPath) {
  if (isNil(value)) {
    return { value: undefined };
  }
  if (typeof value !== "string") {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.string.type",
          info: {},
        },
      ],
    };
  }
  if (value.length === 0) {
    return {
      value: undefined,
    };
  }
  return { value };
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<("bucketName"|"contentLength"|"contentType"|"name"|"meta"|"id"|"createdAt"|"updatedAt")[]>}
 */
export function anonymousValidator1532767426(value, propertyPath) {
  if (isNil(value)) {
    return {
      value: [
        "bucketName",
        "contentLength",
        "contentType",
        "name",
        "meta",
        "id",
        "createdAt",
        "updatedAt",
      ],
    };
  }
  if (!Array.isArray(value)) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.array.type",
          info: {},
        },
      ],
    };
  }
  if (value.length < 1) {
    const min = 1;
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.array.min",
          info: { min },
        },
      ],
    };
  }
  const result = Array.from({ length: value.length });
  let errors = [];
  for (let i = 0; i < value.length; ++i) {
    const arrVar = anonymousValidator1543934225(
      value[i],
      propertyPath + "[" + i + "]",
    );
    if (arrVar.errors) {
      errors.push(...arrVar.errors);
    } else {
      result[i] = arrVar.value;
    }
  }
  if (errors.length > 0) {
    /** @type {{ errors: InternalError[] }} */
    return { errors };
  }
  return { value: result };
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<{"where"?: undefined|StoreFileWhere, "orderBy"?: undefined|StoreFileOrderBy, "orderBySpec"?: undefined|StoreFileOrderBySpec, "as"?: undefined|string, "limit"?: undefined|number, "offset"?: undefined|number, "select": ("bucketName"|"contentLength"|"contentType"|"name"|"meta"|"id"|"createdAt"|"updatedAt")[], }>}
 */
export function anonymousValidator310044624(value, propertyPath) {
  if (isNil(value)) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.object.undefined",
          info: {},
        },
      ],
    };
  }
  if (typeof value !== "object") {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.object.type",
          info: {},
        },
      ],
    };
  }
  const result = Object.create(null);
  let errors = [];
  for (const key of Object.keys(value)) {
    if (!objectKeys310044624.has(key)) {
      /** @type {{ errors: InternalError[] }} */
      return {
        errors: [
          {
            propertyPath,
            key: "validator.object.strict",
            info: {
              expectedKeys: [...objectKeys310044624],
              foundKeys: [...Object.keys(value)],
            },
          },
        ],
      };
    }
  }
  {
    const validatorResult = anonymousValidator65842827(
      value["where"],
      `${propertyPath}.where`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["where"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator1370514093(
      value["orderBy"],
      `${propertyPath}.orderBy`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["orderBy"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator1745737810(
      value["orderBySpec"],
      `${propertyPath}.orderBySpec`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["orderBySpec"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator1443576836(
      value["as"],
      `${propertyPath}.as`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["as"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator963028965(
      value["limit"],
      `${propertyPath}.limit`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["limit"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator963028965(
      value["offset"],
      `${propertyPath}.offset`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["offset"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator1532767426(
      value["select"],
      `${propertyPath}.select`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["select"] = validatorResult.value;
    }
  }
  if (errors.length > 0) {
    return { errors };
  }
  return { value: result };
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<undefined|StoreJobWhere>}
 */
export function anonymousValidator634541376(value, propertyPath) {
  if (isNil(value)) {
    return { value: undefined };
  }
  return anonymousValidator1257773835(value, propertyPath);
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<undefined|StoreJobOrderBy>}
 */
export function anonymousValidator1683806814(value, propertyPath) {
  if (isNil(value)) {
    return { value: undefined };
  }
  return anonymousValidator685221527(value, propertyPath);
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<undefined|StoreJobOrderBySpec>}
 */
export function anonymousValidator608966855(value, propertyPath) {
  if (isNil(value)) {
    return { value: undefined };
  }
  return anonymousValidator280827708(value, propertyPath);
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<("id"|"isComplete"|"priority"|"scheduledAt"|"name"|"data"|"retryCount"|"handlerTimeout"|"createdAt"|"updatedAt")[]>}
 */
export function anonymousValidator582777968(value, propertyPath) {
  if (isNil(value)) {
    return {
      value: [
        "id",
        "isComplete",
        "priority",
        "scheduledAt",
        "name",
        "data",
        "retryCount",
        "handlerTimeout",
        "createdAt",
        "updatedAt",
      ],
    };
  }
  if (!Array.isArray(value)) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.array.type",
          info: {},
        },
      ],
    };
  }
  if (value.length < 1) {
    const min = 1;
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.array.min",
          info: { min },
        },
      ],
    };
  }
  const result = Array.from({ length: value.length });
  let errors = [];
  for (let i = 0; i < value.length; ++i) {
    const arrVar = anonymousValidator1079091822(
      value[i],
      propertyPath + "[" + i + "]",
    );
    if (arrVar.errors) {
      errors.push(...arrVar.errors);
    } else {
      result[i] = arrVar.value;
    }
  }
  if (errors.length > 0) {
    /** @type {{ errors: InternalError[] }} */
    return { errors };
  }
  return { value: result };
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<{"where"?: undefined|StoreJobWhere, "orderBy"?: undefined|StoreJobOrderBy, "orderBySpec"?: undefined|StoreJobOrderBySpec, "as"?: undefined|string, "limit"?: undefined|number, "offset"?: undefined|number, "select": ("id"|"isComplete"|"priority"|"scheduledAt"|"name"|"data"|"retryCount"|"handlerTimeout"|"createdAt"|"updatedAt")[], }>}
 */
export function anonymousValidator343387919(value, propertyPath) {
  if (isNil(value)) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.object.undefined",
          info: {},
        },
      ],
    };
  }
  if (typeof value !== "object") {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.object.type",
          info: {},
        },
      ],
    };
  }
  const result = Object.create(null);
  let errors = [];
  for (const key of Object.keys(value)) {
    if (!objectKeys343387919.has(key)) {
      /** @type {{ errors: InternalError[] }} */
      return {
        errors: [
          {
            propertyPath,
            key: "validator.object.strict",
            info: {
              expectedKeys: [...objectKeys343387919],
              foundKeys: [...Object.keys(value)],
            },
          },
        ],
      };
    }
  }
  {
    const validatorResult = anonymousValidator634541376(
      value["where"],
      `${propertyPath}.where`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["where"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator1683806814(
      value["orderBy"],
      `${propertyPath}.orderBy`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["orderBy"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator608966855(
      value["orderBySpec"],
      `${propertyPath}.orderBySpec`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["orderBySpec"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator1443576836(
      value["as"],
      `${propertyPath}.as`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["as"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator963028965(
      value["limit"],
      `${propertyPath}.limit`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["limit"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator963028965(
      value["offset"],
      `${propertyPath}.offset`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["offset"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator582777968(
      value["select"],
      `${propertyPath}.select`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["select"] = validatorResult.value;
    }
  }
  if (errors.length > 0) {
    return { errors };
  }
  return { value: result };
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<undefined|StoreSessionStoreOrderBy>}
 */
export function anonymousValidator1221642756(value, propertyPath) {
  if (isNil(value)) {
    return { value: undefined };
  }
  return anonymousValidator1196685479(value, propertyPath);
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<undefined|StoreSessionStoreOrderBySpec>}
 */
export function anonymousValidator2142999519(value, propertyPath) {
  if (isNil(value)) {
    return { value: undefined };
  }
  return anonymousValidator362930508(value, propertyPath);
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<("data"|"checksum"|"revokedAt"|"id"|"createdAt"|"updatedAt")[]>}
 */
export function anonymousValidator1791620536(value, propertyPath) {
  if (isNil(value)) {
    return {
      value: ["data", "checksum", "revokedAt", "id", "createdAt", "updatedAt"],
    };
  }
  if (!Array.isArray(value)) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.array.type",
          info: {},
        },
      ],
    };
  }
  if (value.length < 1) {
    const min = 1;
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.array.min",
          info: { min },
        },
      ],
    };
  }
  const result = Array.from({ length: value.length });
  let errors = [];
  for (let i = 0; i < value.length; ++i) {
    const arrVar = anonymousValidator1972584104(
      value[i],
      propertyPath + "[" + i + "]",
    );
    if (arrVar.errors) {
      errors.push(...arrVar.errors);
    } else {
      result[i] = arrVar.value;
    }
  }
  if (errors.length > 0) {
    /** @type {{ errors: InternalError[] }} */
    return { errors };
  }
  return { value: result };
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<undefined|StoreSessionStoreTokenOrderBy>}
 */
export function anonymousValidator1834466899(value, propertyPath) {
  if (isNil(value)) {
    return { value: undefined };
  }
  return anonymousValidator2086080888(value, propertyPath);
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<undefined|StoreSessionStoreTokenOrderBySpec>}
 */
export function anonymousValidator1672671480(value, propertyPath) {
  if (isNil(value)) {
    return { value: undefined };
  }
  return anonymousValidator1864958291(value, propertyPath);
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<("expiresAt"|"revokedAt"|"createdAt"|"id"|"session"|"refreshToken")[]>}
 */
export function anonymousValidator1139804596(value, propertyPath) {
  if (isNil(value)) {
    return {
      value: [
        "expiresAt",
        "revokedAt",
        "createdAt",
        "id",
        "session",
        "refreshToken",
      ],
    };
  }
  if (!Array.isArray(value)) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.array.type",
          info: {},
        },
      ],
    };
  }
  if (value.length < 1) {
    const min = 1;
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.array.min",
          info: { min },
        },
      ],
    };
  }
  const result = Array.from({ length: value.length });
  let errors = [];
  for (let i = 0; i < value.length; ++i) {
    const arrVar = anonymousValidator1022399486(
      value[i],
      propertyPath + "[" + i + "]",
    );
    if (arrVar.errors) {
      errors.push(...arrVar.errors);
    } else {
      result[i] = arrVar.value;
    }
  }
  if (errors.length > 0) {
    /** @type {{ errors: InternalError[] }} */
    return { errors };
  }
  return { value: result };
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<undefined|StoreSessionStoreQueryBuilder>}
 */
export function anonymousValidator1827379372(value, propertyPath) {
  if (isNil(value)) {
    return { value: undefined };
  }
  return anonymousValidator2093168415(value, propertyPath);
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<{"where"?: undefined|StoreSessionStoreTokenWhere, "orderBy"?: undefined|StoreSessionStoreTokenOrderBy, "orderBySpec"?: undefined|StoreSessionStoreTokenOrderBySpec, "as"?: undefined|string, "limit"?: undefined|number, "offset"?: undefined|number, "select": ("expiresAt"|"revokedAt"|"createdAt"|"id"|"session"|"refreshToken")[], "session"?: undefined|StoreSessionStoreQueryBuilder, "refreshToken"?: undefined|StoreSessionStoreTokenQueryBuilder, "accessToken"?: undefined|StoreSessionStoreTokenQueryBuilder, }>}
 */
export function anonymousValidator1856722848(value, propertyPath) {
  if (isNil(value)) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.object.undefined",
          info: {},
        },
      ],
    };
  }
  if (typeof value !== "object") {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.object.type",
          info: {},
        },
      ],
    };
  }
  const result = Object.create(null);
  let errors = [];
  for (const key of Object.keys(value)) {
    if (!objectKeys1856722848.has(key)) {
      /** @type {{ errors: InternalError[] }} */
      return {
        errors: [
          {
            propertyPath,
            key: "validator.object.strict",
            info: {
              expectedKeys: [...objectKeys1856722848],
              foundKeys: [...Object.keys(value)],
            },
          },
        ],
      };
    }
  }
  {
    const validatorResult = anonymousValidator2065515599(
      value["where"],
      `${propertyPath}.where`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["where"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator1834466899(
      value["orderBy"],
      `${propertyPath}.orderBy`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["orderBy"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator1672671480(
      value["orderBySpec"],
      `${propertyPath}.orderBySpec`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["orderBySpec"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator1443576836(
      value["as"],
      `${propertyPath}.as`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["as"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator963028965(
      value["limit"],
      `${propertyPath}.limit`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["limit"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator963028965(
      value["offset"],
      `${propertyPath}.offset`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["offset"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator1139804596(
      value["select"],
      `${propertyPath}.select`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["select"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator1827379372(
      value["session"],
      `${propertyPath}.session`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["session"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator145903947(
      value["refreshToken"],
      `${propertyPath}.refreshToken`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["refreshToken"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator145903947(
      value["accessToken"],
      `${propertyPath}.accessToken`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["accessToken"] = validatorResult.value;
    }
  }
  if (errors.length > 0) {
    return { errors };
  }
  return { value: result };
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<undefined|StoreSessionStoreTokenQueryBuilder>}
 */
export function anonymousValidator145903947(value, propertyPath) {
  if (isNil(value)) {
    return { value: undefined };
  }
  return anonymousValidator1856722848(value, propertyPath);
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @returns {EitherN<{"where"?: undefined|StoreSessionStoreWhere, "orderBy"?: undefined|StoreSessionStoreOrderBy, "orderBySpec"?: undefined|StoreSessionStoreOrderBySpec, "as"?: undefined|string, "limit"?: undefined|number, "offset"?: undefined|number, "select": ("data"|"checksum"|"revokedAt"|"id"|"createdAt"|"updatedAt")[], "accessTokens"?: undefined|StoreSessionStoreTokenQueryBuilder, }>}
 */
export function anonymousValidator2093168415(value, propertyPath) {
  if (isNil(value)) {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.object.undefined",
          info: {},
        },
      ],
    };
  }
  if (typeof value !== "object") {
    /** @type {{ errors: InternalError[] }} */
    return {
      errors: [
        {
          propertyPath,
          key: "validator.object.type",
          info: {},
        },
      ],
    };
  }
  const result = Object.create(null);
  let errors = [];
  for (const key of Object.keys(value)) {
    if (!objectKeys2093168415.has(key)) {
      /** @type {{ errors: InternalError[] }} */
      return {
        errors: [
          {
            propertyPath,
            key: "validator.object.strict",
            info: {
              expectedKeys: [...objectKeys2093168415],
              foundKeys: [...Object.keys(value)],
            },
          },
        ],
      };
    }
  }
  {
    const validatorResult = anonymousValidator1582696858(
      value["where"],
      `${propertyPath}.where`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["where"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator1221642756(
      value["orderBy"],
      `${propertyPath}.orderBy`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["orderBy"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator2142999519(
      value["orderBySpec"],
      `${propertyPath}.orderBySpec`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["orderBySpec"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator1443576836(
      value["as"],
      `${propertyPath}.as`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["as"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator963028965(
      value["limit"],
      `${propertyPath}.limit`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["limit"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator963028965(
      value["offset"],
      `${propertyPath}.offset`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["offset"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator1791620536(
      value["select"],
      `${propertyPath}.select`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["select"] = validatorResult.value;
    }
  }
  {
    const validatorResult = anonymousValidator145903947(
      value["accessTokens"],
      `${propertyPath}.accessTokens`,
    );
    if (validatorResult.errors) {
      errors.push(...validatorResult.errors);
    } else {
      result["accessTokens"] = validatorResult.value;
    }
  }
  if (errors.length > 0) {
    return { errors };
  }
  return { value: result };
}
