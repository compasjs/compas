// Generated by @compas/code-gen
/* eslint-disable no-unused-vars */

import { AppError, streamToBuffer } from "@compas/stdlib";
export function handleError(e, group, name) {
  // Validator error
  if (AppError.instanceOf(e)) {
    e.key = `response.${group}.${name}.${e.key}`;
    throw e;
  }
  if (typeof e?.response?.data?.pipe === "function") {
    // Handle response streams
    return streamToBuffer(e.response.data).then((buffer) => {
      try {
        e.response.data = JSON.parse(buffer.toString("utf8"));
      } catch {
        // Unknown error
        throw new AppError(
          `response.${group}.${name}`,
          e.response?.status ?? 500,
          {
            data: e?.response?.data,
            headers: e?.response?.headers,
          },
          e,
        );
      }
      return handleError(e, group, name);
    });
  }
  // Server AppError
  const { key, info } = e.response?.data ?? {};
  if (typeof key === "string" && !!info && typeof info === "object") {
    throw new AppError(key, e.response.status, info, e);
  }
  // Unknown error
  throw new AppError(
    `response.${group}.${name}`,
    e.response?.status ?? 500,
    { data: e?.response?.data, headers: e?.response?.headers },
    e,
  );
}
