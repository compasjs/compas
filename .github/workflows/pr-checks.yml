name: PR Checks
on: [pull_request]

env:
  CI: true

jobs:
  lint:
    timeout-minutes: 15
    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [16]
    runs-on: ${{ matrix.os }}
    env:
      CI: true
    steps:
      - uses: actions/checkout@v3

      - name: Node.js ${{ matrix.node }}
        uses: actions/setup-node@v3.0.0
        with:
          node-version: ${{ matrix.node }}
          cache: "yarn"

      - name: Run lint
        run: |
          yarn install
          yarn compas lint

  test:
    timeout-minutes: 15
    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [16, 17]
        postgres_version: [12, 13]
    runs-on: ${{ matrix.os }}
    env:
      CI: true
      POSTGRES_VERSION: ${{ matrix.postgres_version }}
    steps:
      - uses: actions/checkout@v3

      - name: Node.js ${{ matrix.node }}
        uses: actions/setup-node@v3.0.0
        with:
          node-version: ${{ matrix.node }}
          cache: "yarn"

      - name: Run tests
        run: |
          yarn install
          yarn compas docker up
          yarn compas run generate
          yarn compas migrate
          yarn compas test

  coverage:
    timeout-minutes: 15
    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [16]
    runs-on: ${{ matrix.os }}
    env:
      CI: true
    steps:
      - uses: actions/checkout@v3

      - name: Node.js ${{ matrix.node }}
        uses: actions/setup-node@v3.0.0
        with:
          node-version: ${{ matrix.node }}
          cache: "yarn"

      - name: Run coverage
        run: |
          yarn install
          yarn compas docker up
          yarn compas run generate
          yarn compas migrate
          yarn compas test --coverage

      - name: Comment test coverage
        uses: codecov/codecov-action@v2.1.0
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: ./coverage

  build-docs:
    timeout-minutes: 15
    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [16]
    runs-on: ${{ matrix.os }}
    env:
      CI: true
    steps:
      - uses: actions/checkout@v3

      - name: Node.js ${{ matrix.node }}
        uses: actions/setup-node@v3.0.0
        with:
          node-version: ${{ matrix.node }}
          cache: "yarn"

      - name: Build and deploy
        run: |
          yarn install
          echo 'VITE_USER_NODE_ENV=production' > ./docs/.env
          yarn compas run syncMetadata
          yarn compas run docs:build
