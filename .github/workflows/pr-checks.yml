name: PR Checks
on: [pull_request]

env:
  CI: true

jobs:
  lint:
    timeout-minutes: 15
    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [14]
    runs-on: ${{ matrix.os }}
    env:
      CI: true
    steps:
      - uses: actions/checkout@v2

      - name: Node.js ${{ matrix.node }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key:
            ${{ runner.os }}-yarn-${{ matrix.node }}-${{
            hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-${{ matrix.node }}-
            ${{ runner.os }}-yarn-

      - name: Run lint
        run: |
          yarn install
          yarn compas lint

  test:
    timeout-minutes: 15
    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [14, 15]
        postgres_version: [12, 13]
    runs-on: ${{ matrix.os }}
    env:
      CI: true
      POSTGRES_VERSION: ${{ matrix.postgres_version }}
    steps:
      - uses: actions/checkout@v2

      - name: Node.js ${{ matrix.node }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key:
            ${{ runner.os }}-yarn-${{ matrix.node }}-${{
            hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-${{ matrix.node }}-
            ${{ runner.os }}-yarn-

      - name: Run tests
        run: |
          yarn install
          yarn compas docker up
          yarn compas gen
          yarn compas migrate
          yarn compas test

  bench:
    timeout-minutes: 15
    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [14, 15]
    runs-on: ${{ matrix.os }}
    needs:
      - test
      - lint
    env:
      CI: true
    steps:
      - uses: actions/checkout@v2

      - name: Node.js ${{ matrix.node }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key:
            ${{ runner.os }}-yarn-${{ matrix.node }}-${{
            hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-${{ matrix.node }}-
            ${{ runner.os }}-yarn-

      - name: Run benchmarks
        run: |
          yarn install
          yarn compas gen
          yarn compas bench
          echo -e "BENCH_RESULT<<EOF\n$(cat ./benchmark_output.txt)\nEOF" | tee -a $GITHUB_ENV

      - name: Comment bench result
        uses: mshick/add-pr-comment@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: ${{ env.GITHUB_TOKEN != null }}
        with:
          message: |
            ==== **Benchmark result** ====
            ```
            Node.js version: ${{ matrix.node }}
            ${{ env.BENCH_RESULT }}
            ```
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          repo-token-user-login: "github-actions[bot]"
          allow-repeats: false

  coverage:
    timeout-minutes: 15
    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [14]
    runs-on: ${{ matrix.os }}
    needs:
      - test
      - lint
    env:
      CI: true
    steps:
      - uses: actions/checkout@v2

      - name: Node.js ${{ matrix.node }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key:
            ${{ runner.os }}-yarn-${{ matrix.node }}-${{
            hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-${{ matrix.node }}-
            ${{ runner.os }}-yarn-

      - name: Run benchmarks
        run: |
          yarn install
          yarn compas docker up
          yarn compas gen
          yarn compas migrate
          yarn compas coverage
          yarn compas docker reset

      - name: Comment test coverage
        uses: AthleticNet/comment-test-coverage@1.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: ${{ env.GITHUB_TOKEN != null }}
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          path: coverage/coverage-summary.json
          title: C8 test coverage

  automerge:
    # Coverage runs tests, so should be fine
    needs: [coverage, bench]
    runs-on: ubuntu-latest
    steps:
      - uses: fastify/github-action-merge-dependabot@v1
        if: ${{ github.actor == 'dependabot[bot]' }}
        with:
          github-token: ${{secrets.github_token}}
