name: Create a release on tag

on:
  push:
    branches:
      - main

jobs:
  release:
    timeout-minutes: 15
    runs-on: ubuntu-latest
    if: "contains(github.event.head_commit.message, 'prepare release')"
    strategy:
      matrix:
        node: [15]

    env:
      CI: true
    steps:
      - uses: actions/checkout@v2
        with:
          # pulls all commits (needed for lerna / semantic release to correctly version)
          fetch-depth: "0"

      # pulls all tags (needed for lerna / semantic release to correctly version)
      - run: git fetch --depth=1 origin +refs/tags/*:refs/tags/*

      - name: Git Identity
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git remote set-url origin https://x-access-token:${GITHUB_TOKEN}@github.com/$GITHUB_REPOSITORY
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Node.js ${{ matrix.node }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key:
            ${{ runner.os }}-yarn-${{ matrix.node }}-${{
            hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-${{ matrix.node }}-
            ${{ runner.os }}-yarn-

      - run: echo //registry.npmjs.org/:_authToken=${NPM_TOKEN} > .npmrc
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create release
        run: |
          yarn install
          yarn compas create-release ${{ secrets.GITHUB_TOKEN }}
