name: Checks
on:
  push:
    branches: [main]

jobs:
  test:
    permissions:
      contents: read
    timeout-minutes: 15
    strategy:
      matrix:
        node: [16, 18]
        postgresVersion: [12, 13, 14]
    runs-on: ubuntu-latest
    env:
      CI: true
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Node.js ${{ matrix.node }}
        uses: actions/setup-node@v3.6.0
        with:
          node-version: ${{ matrix.node }}
          cache: "npm"

      - name: Install dependencies
        run: |
          npm ci

      - name: Generate and migrate
        run: |
          npx compas docker up --postgres-version ${{ matrix.postgresVersion }}
          npx compas generate --skip-tsc --skip-lint
          npx compas migrate

      - name: Run compas test
        run: |
          npx compas test

  coverage:
    permissions:
      contents: read
    timeout-minutes: 15
    strategy:
      matrix:
        node: [18]
        postgresVersion: [14]
    runs-on: ubuntu-latest
    env:
      CI: true
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Node.js ${{ matrix.node }}
        uses: actions/setup-node@v3.6.0
        with:
          node-version: ${{ matrix.node }}
          cache: "npm"

      - name: Install dependencies
        run: |
          npm ci

      - name: Generate and migrate
        run: |
          npx compas docker up --postgres-version ${{ matrix.postgresVersion }}
          npx compas generate --skip-tsc --skip-lint
          npx compas migrate

      - name: Run compas test --coverage
        run: |
          npx compas test --coverage

      - name: Upload coverage
        if: matrix.node == '18'
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: ./coverage

  sync-website:
    permissions:
      contents: read
    timeout-minutes: 15
    strategy:
      matrix:
        node: [18]
        postgresVersion: [14]
    runs-on: ubuntu-latest
    env:
      CI: true
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Node.js ${{ matrix.node }}
        uses: actions/setup-node@v3.6.0
        with:
          node-version: ${{ matrix.node }}
          cache: "npm"

      - name: Install dependencies
        run: |
          npm ci

      - name: Build and deploy
        run: |
          echo 'VITE_USER_NODE_ENV=production' > ./docs/.env
          npx compas run docs:build
          cd ./docs/.vitepress/dist
          echo 'compasjs.com' > CNAME
          git config --global init.defaultBranch main
          git config --global user.email "github@dirkdevisser.nl"
          git config --global user.name "Dirk de Visser[bot]"
          git init
          git add -A
          git commit -m "chore: deploy pages for ${{ github.sha }}"
          git push -f https://dirkdev98:${{ secrets.COMPAS_GITHUB_TOKEN }}@github.com/compasjs/compas.git main:gh-pages

  analyze:
    name: Analyze
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      actions: read
      contents: read
    strategy:
      fail-fast: false
      matrix:
        language: ["javascript"]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: ${{ matrix.language }}

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2
