name: Checks
on:
  push:
    branches: [main]
  pull_request:

jobs:
  lint:
    permissions:
      contents: read
    timeout-minutes: 15
    strategy:
      matrix:
        node: [22]
    runs-on: ubuntu-latest
    env:
      CI: true
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Node.js ${{ matrix.node }}
        uses: actions/setup-node@v5
        with:
          node-version: ${{ matrix.node }}
          cache: "npm"
          cache-dependency-path: "**/package.json"

      - name: Install dependencies
        run: |
          npm install

      - name: Run compas lint
        run: |
          CI=false npx compas generate
          npx compas lint

  types:
    permissions:
      contents: read
    timeout-minutes: 15
    strategy:
      matrix:
        node: [22]
    runs-on: ubuntu-latest
    env:
      CI: true
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Node.js ${{ matrix.node }}
        uses: actions/setup-node@v5
        with:
          node-version: ${{ matrix.node }}
          cache: "npm"
          cache-dependency-path: "**/package.json"

      - name: Install dependencies
        run: |
          npm install

      - name: Generate and run types
        run: |
          npx compas generate --skip-lint
          npx compas run types

  test:
    permissions:
      contents: read
    timeout-minutes: 15
    strategy:
      matrix:
        node: [20, 22, 24]
        postgresVersion: [12, 14, 16]
    runs-on: ubuntu-latest
    env:
      CI: true
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Node.js ${{ matrix.node }}
        uses: actions/setup-node@v5
        with:
          node-version: ${{ matrix.node }}
          cache: "npm"
          cache-dependency-path: "**/package.json"

      - name: Install dependencies
        run: |
          npm install

      - name: Generate and migrate
        run: |
          npx compas docker up --postgres-version ${{ matrix.postgresVersion }}
          npx compas generate --skip-lint
          npx compas migrate

      - name: Run compas test
        run: |
          npx compas test

      - name: Persist debug artifacts
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name:
            cache-artifact-test-${{ matrix.node }}-${{ matrix.postgresVersion }}
          path: .cache/

  sync-website:
    if: ${{ github.event.ref == 'refs/heads/main' }}
    permissions:
      contents: read
    timeout-minutes: 15
    strategy:
      matrix:
        node: [22]
        postgresVersion: [14]
    runs-on: ubuntu-latest
    env:
      CI: true
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Node.js ${{ matrix.node }}
        uses: actions/setup-node@v5
        with:
          node-version: ${{ matrix.node }}
          cache: "npm"
          cache-dependency-path: "**/package.json"

      - name: Install dependencies
        run: |
          npm install

      - name: Build and deploy
        run: |
          echo 'VITE_USER_NODE_ENV=production' > ./docs/.env
          npx compas run docs:build
          cd ./docs/.vitepress/dist
          echo 'compasjs.com' > CNAME
          git config --global init.defaultBranch main
          git config --global user.email "github@dirkdevisser.nl"
          git config --global user.name "Dirk de Visser[bot]"
          git init
          git add -A
          git commit -m "chore: deploy pages for ${{ github.sha }}"
          git push -f https://dirkdev98:${{ secrets.COMPAS_GITHUB_TOKEN }}@github.com/compasjs/compas.git main:gh-pages

  analyze:
    name: Analyze
    if: ${{ github.event.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      actions: read
      contents: read
    strategy:
      fail-fast: false
      matrix:
        language: ["javascript"]
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
