import{_ as i,c as e,o as a,ag as t}from"./chunks/framework.B-XtCDNB.js";const k=JSON.parse('{"title":"Compas configuration","description":"","frontmatter":{},"headers":[],"relativePath":"references/compas-config.md","filePath":"references/compas-config.md"}'),n={name:"references/compas-config.md"};function o(l,s,r,p,h,c){return a(),e("div",null,[...s[0]||(s[0]=[t(`<h1 id="compas-configuration" tabindex="-1">Compas configuration <a class="header-anchor" href="#compas-configuration" aria-label="Permalink to &quot;Compas configuration&quot;">​</a></h1><p>Most features work without external configuration. They are either relatively strict to enforce a way of working, or are configurable via their api&#39;s. However, some features are better configured via a global configuration file. This file is optional, but if exists should be located at <code>config/compas.{js,mjs,json}</code>. The file is loaded via the <a href="/features/config-files.html#config-loader">config loader</a>.</p><h2 id="contents" tabindex="-1">Contents <a class="header-anchor" href="#contents" aria-label="Permalink to &quot;Contents&quot;">​</a></h2><p>All keys are optional</p><p>If you use the <code>compas</code> CLI:</p><ul><li><strong>cli</strong> (object): root property for configuration for the CLI package <ul><li><strong>commandDirectories</strong> (string[]): Array of directories relative to the project root. All JavaScript files will be imported by the CLI and checked if it exports a &#39;cliDefinition&#39;. See <a href="https://compasjs.com/features/extending-the-cli.html" target="_blank" rel="noreferrer">extending the cli</a> for more information. The loader does not recurse in to sub directories.</li><li><strong>globalWatchOptions</strong> (object): Project level watch options, applied to all commands running in &#39;watch&#39; mode via the Compas CLI. The values here are appended to the defaults of the specific command that is being watched. <ul><li><strong>extensions</strong> (string[]): Add file extensions that should be watched. Say that you are creating a static site generator, then you most likely also want to restart if markdown files are changed.</li><li><strong>ignorePatterns</strong> (string[]): Remove directories from being watched, this has precedence over the included extensions. Useful to ignore build output directories and other temporary output created by the command, so it is not restarted because of it&#39;s own changes.</li></ul></li></ul></li></ul><p>If you use the experimental <code>zakmes</code> CLI:</p><ul><li><strong>projects</strong> (string[]): Add sub-projects which can have their own configurations.</li></ul><h3 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h3><p>Using a <code>.js</code> file for the <code>compas</code> CLI.</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> config</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">	return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">		cli: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">			commandDirectories: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;./src/my-commands&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">			globalWatchOptions: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">				extensions: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;md&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">				ignorePatterns: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;dist&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">			},</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">		},</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	};</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>Using a <code>config/compas.json</code> file for the <code>zakmes</code> CLI.</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">	&quot;projects&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;packages/frontend&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div>`,13)])])}const g=i(n,[["render",o]]);export{k as __pageData,g as default};
