import{_ as a,c as t,o as s,ag as o}from"./chunks/framework.B-XtCDNB.js";const h=JSON.parse('{"title":"Compas examples","description":"","frontmatter":{},"headers":[],"relativePath":"examples.md","filePath":"examples.md"}'),r={name:"examples.md"};function l(p,e,m,i,n,c){return s(),t("div",null,[...e[0]||(e[0]=[o('<h1 id="compas-examples" tabindex="-1">Compas examples <a class="header-anchor" href="#compas-examples" aria-label="Permalink to &quot;Compas examples&quot;">​</a></h1><p>Examples of how to do various tasks with Compas.</p><h2 id="templates" tabindex="-1">Templates <a class="header-anchor" href="#templates" aria-label="Permalink to &quot;Templates&quot;">​</a></h2><ul><li><p><strong><a href="https://github.com/compasjs/compas/tree/main/examples/default" target="_blank" rel="noreferrer">default</a>:</strong> This is the default template that is used. It contains boilerplate and conventions to create your api&#39;s.</p></li><li><p><strong><a href="https://github.com/compasjs/compas/tree/main/examples/with-auth" target="_blank" rel="noreferrer">with-auth</a>:</strong> Based on the default teplate, adds a basic register and loginc system, using <code>@compas/store</code> powered sessions.</p></li></ul>',4)])])}const u=a(r,[["render",l]]);export{h as __pageData,u as default};
