import{_ as t,c as a,o as r,ag as i}from"./chunks/framework.B-XtCDNB.js";const p=JSON.parse('{"title":"React Fetch API client","description":"","frontmatter":{},"headers":[],"relativePath":"../examples/react-fetch/README.md","filePath":"../examples/react-fetch/README.md"}'),c={name:"../examples/react-fetch/README.md"};function n(o,e,s,l,d,h){return r(),a("div",null,[...e[0]||(e[0]=[i('<h1 id="react-fetch-api-client" tabindex="-1">React Fetch API client <a class="header-anchor" href="#react-fetch-api-client" aria-label="Permalink to &quot;React Fetch API client&quot;">​</a></h1><p>This project is created using the <a href="https://github.com/compasjs/compas/tree/main/examples/react-fetch" target="_blank" rel="noreferrer">react-fetch</a> template.</p><h2 id="maintenance-mode" tabindex="-1">Maintenance mode <a class="header-anchor" href="#maintenance-mode" aria-label="Permalink to &quot;Maintenance mode&quot;">​</a></h2><p>Compas is in maintenance mode. The packages will be maintained for the foreseeable future. New features might be added, but some will also be dropped in favor of other ecosystem-available libraries. Please don&#39;t start new projects using Compas.</p><h2 id="getting-started" tabindex="-1">Getting started <a class="header-anchor" href="#getting-started" aria-label="Permalink to &quot;Getting started&quot;">​</a></h2><ul><li>Generate the API client and React query wrappers <ul><li><code>node ./scripts/generate.js</code></li></ul></li><li>Run the dev server <ul><li><code>npm run dev</code></li></ul></li></ul><h2 id="structure-and-features" tabindex="-1">Structure and features <a class="header-anchor" href="#structure-and-features" aria-label="Permalink to &quot;Structure and features&quot;">​</a></h2><p>This example contains the three main components for starting with generated api clients in your React application.</p><ul><li>A script to generate the api client is located at <code>scripts/generate.js</code>. It fetches the latest remote structure and generates the typed api client files in <code>src/generated</code>.</li><li>In <code>main.tsx</code> we set the required <code>QueryClientProvider</code> with a global query client from react-query</li><li>In <code>src/App.tsx</code> there are a few things happening: <ul><li>We set a custom <code>fetch</code> instance with a base url. All Compas clients rely on relative paths. We generate a helper around <code>fetch</code> to automatically add your API base url.</li><li>We use a generated react-query hook <code>useDateConvertNumber</code>. Under the covers it is a separately exported function that calls the api, wrapped in <code>useQuery</code>.</li></ul></li></ul>',9)])])}const m=t(c,[["render",n]]);export{p as __pageData,m as default};
