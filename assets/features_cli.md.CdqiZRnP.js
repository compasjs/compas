import{_ as i,c as a,o as e,ag as n}from"./chunks/framework.B-XtCDNB.js";const k=JSON.parse('{"title":"CLI","description":"","frontmatter":{},"headers":[],"relativePath":"features/cli.md","filePath":"features/cli.md"}'),t={name:"features/cli.md"};function l(p,s,h,o,d,r){return e(),a("div",null,[...s[0]||(s[0]=[n(`<h1 id="cli" tabindex="-1">CLI <a class="header-anchor" href="#cli" aria-label="Permalink to &quot;CLI&quot;">​</a></h1><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Requires <code>@compas/cli</code> and <code>@compas/stdlib</code> to be installed</p></div><p>The first thing that we will take a look at is the Compas CLI. This packs quite a lot of features. Let&#39;s see what it has to offer:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">compas</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> help</span></span></code></pre></div><p>As you can see, there is quite a variety of commands, feel free to explore them with <code>compas help COMMAND</code> or <code>compas COMMAND --help</code>. Some commands also require inputs in the form of flags. The expected value is often put at the end of a flag description. Let&#39;s see some examples:</p><p><strong>Toggle flags</strong></p><p>These are fine without a value, or with a number / string representing true and false.</p><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>// --help   Display help text (boolean)</span></span>
<span class="line"><span>-&gt; \`--help\`, \`--help=1\`, \`--help false\`</span></span></code></pre></div><p>As you can see both <code>--help=1</code> and <code>--help false</code> are supported when specifying a value.</p><p><strong>Multiple strings</strong></p><p>Some flags can be passed multiple times, this is denoted by the <code>[]</code> after <code>string[]</code>.</p><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>// --file   Specify files to operate on (string[])</span></span>
<span class="line"><span>-&gt; \`--file ./x.js\`, \`--file ./a.js --file ./bar/b.js\`</span></span></code></pre></div><div class="info custom-block"><p class="custom-block-title">INFO</p><p>If you are unable to run the CLI, you can take a look at <a href="/references/cli.html">the reference</a>.</p></div><h2 id="running-scripts" tabindex="-1">Running scripts <a class="header-anchor" href="#running-scripts" aria-label="Permalink to &quot;Running scripts&quot;">​</a></h2><p>The <code>@compas/cli</code> package comes with more features. Some of these will be explored in later parts of this setup guide. For now, we will take a look at the script runner.</p><p>The script runner at its base starts your scripts the same way as you would with Node.js.</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">compas</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ./src/a.js</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Is the same as \`node ./src/a.js\`</span></span></code></pre></div><p>However, it can also run named scripts. It will look for scripts defined in your <code>package.json</code> and in the <code>scripts</code> directory at the root of your project. Create a file in <code>scripts/hello.js</code> with the following contents:</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { mainFn } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;@compas/stdlib&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mainFn</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">meta</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, main);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">logger</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	logger.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">info</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Hello!&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>Let&#39;s run it:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">compas</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> hello</span></span></code></pre></div><p>This script is only printing &#39;Hello!&#39;, but you can use it for all tasks that require some code, and that you need to execute while developing or deploying.</p><h2 id="mainfn" tabindex="-1">mainFn <a class="header-anchor" href="#mainfn" aria-label="Permalink to &quot;mainFn&quot;">​</a></h2><p>An often used utility provided by the stdlib is <code>mainFn</code>. This does a few things:</p><ul><li>Only runs if the file that you call <code>mainFn</code> in, is the &#39;main&#39; file</li><li>Reads the <code>.env</code> file if exists</li><li>Calls the provided callback, and handles uncaught exceptions.</li><li>Create a logger from <a href="/index.html#todo">@compas/stdlib</a></li></ul><p>Let&#39;s create two files. Both exporting a constant and calling <code>mainFn</code>:</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// src/a.js</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { a } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;./a.js&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { b } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;./b.js&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { mainFn } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;@compas/stdlib&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// src/b.js</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { mainFn } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;@compas/stdlib&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mainFn</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">meta</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">logger</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> logger.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">info</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ message: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Hello from a.js&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, b }));</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> a</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mainFn</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">meta</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">logger</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> logger.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">info</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ message: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Hello from b.js.&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, a }));</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> b</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><p>Now if we run <code>src/a.js</code>, we see the following:</p><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>$ node ./src/a.js</span></span>
<span class="line"><span>{</span></span>
<span class="line"><span>  message: &quot;Hello from a.js.&quot;,</span></span>
<span class="line"><span>  b: false,</span></span>
<span class="line"><span>}</span></span></code></pre></div><p>When running <code>src/b.js</code>:</p><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>$ node ./src/b.js</span></span>
<span class="line"><span>{</span></span>
<span class="line"><span>  message: &quot;Hello from b.js.&quot;,</span></span>
<span class="line"><span>  a: true,</span></span>
<span class="line"><span>}</span></span></code></pre></div><p>As you can see in the output, only a single callback passed to <code>mainFn</code> is called. This callback in <code>src/a.js</code> only being called when it is the starting point of your program, ie started via <code>node ./src/a.js</code>. Consequently, the callback passed in <code>src/b.js</code> is only called when you start your program with <code>node ./src/b.js</code>.</p><h2 id="environment" tabindex="-1">Environment <a class="header-anchor" href="#environment" aria-label="Permalink to &quot;Environment&quot;">​</a></h2><p>The <code>mainFn</code> function from <code>@compas/stdlib</code>, and by extension <code>mainTestFn</code>, automatically loads the <code>.env.local</code> and <code>.env</code> files in the root of the project. The idea is that the <code>.env</code> contains default values for a quick development setup, so a new person on the team can just clone the project and run it directly. The <code>.env.local</code> values take precedence over values defined the <code>.env</code> file, and should be <code>.gitingore</code>&#39;d. This is useful when your particular dev setup is somehow different, ie your not using the <code>compas docker</code> based Postgres instance, but need to connect to a different Postgres instance.</p><p>It is expected that production values for these environment variables are injected by the hosting method of choice.</p><p>Use <code>compas check-env</code> to see if your <code>.env.local</code> is <code>.gitignore</code>&#39;d properly.</p>`,36)])])}const g=i(t,[["render",l]]);export{k as __pageData,g as default};
