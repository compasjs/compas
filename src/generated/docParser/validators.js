// Generated by @compas/code-gen
/* eslint-disable no-unused-vars */

import { anonymousValidator1282872738,
anonymousValidator1407080209,
anonymousValidator1831335775,
anonymousValidator1865996329,
anonymousValidator2103344335,
anonymousValidator730878810,
anonymousValidator781728730,
anonymousValidator796176522,
anonymousValidator835333298 } from "../common/anonymous-validators.js";
import { AppError, isNil } from "@compas/stdlib";
/**
* @template T
* @typedef {import("@compas/stdlib").Either<T, AppError>} Either
*/
/**
* @param {undefined|any} value
* @param {string|undefined} [propertyPath]
* @returns {Either<DocParserBlock>}
*/
export function validateDocParserBlock(value, propertyPath = "$") {
const result = anonymousValidator796176522(value, propertyPath);
if (result.errors) {
const info = {};
for (const err of result.errors) {
if (isNil(info[err.propertyPath])) {
info[err.propertyPath] = err;
} else if (Array.isArray(info[err.propertyPath])) {
info[err.propertyPath].push(err);
} else {
info[err.propertyPath] = [ info[err.propertyPath], err ];
}
}
/** @type {{ error: AppError }} */
return {
error: AppError.validationError("validator.error", info),
};
}
/** @type {{ value: DocParserBlock}} */
return { value: result.value };
}
/**
* @param {undefined|any} value
* @param {string|undefined} [propertyPath]
* @returns {Either<DocParserFunctionDeclarationBlock>}
*/
export function validateDocParserFunctionDeclarationBlock(value, propertyPath = "$") {
const result = anonymousValidator1282872738(value, propertyPath);
if (result.errors) {
const info = {};
for (const err of result.errors) {
if (isNil(info[err.propertyPath])) {
info[err.propertyPath] = err;
} else if (Array.isArray(info[err.propertyPath])) {
info[err.propertyPath].push(err);
} else {
info[err.propertyPath] = [ info[err.propertyPath], err ];
}
}
/** @type {{ error: AppError }} */
return {
error: AppError.validationError("validator.error", info),
};
}
/** @type {{ value: DocParserFunctionDeclarationBlock}} */
return { value: result.value };
}
/**
* @param {undefined|any} value
* @param {string|undefined} [propertyPath]
* @returns {Either<DocParserFunctionType>}
*/
export function validateDocParserFunctionType(value, propertyPath = "$") {
const result = anonymousValidator1865996329(value, propertyPath);
if (result.errors) {
const info = {};
for (const err of result.errors) {
if (isNil(info[err.propertyPath])) {
info[err.propertyPath] = err;
} else if (Array.isArray(info[err.propertyPath])) {
info[err.propertyPath].push(err);
} else {
info[err.propertyPath] = [ info[err.propertyPath], err ];
}
}
/** @type {{ error: AppError }} */
return {
error: AppError.validationError("validator.error", info),
};
}
/** @type {{ value: DocParserFunctionType}} */
return { value: result.value };
}
/**
* @param {undefined|any} value
* @param {string|undefined} [propertyPath]
* @returns {Either<DocParserJSComment>}
*/
export function validateDocParserJSComment(value, propertyPath = "$") {
const result = anonymousValidator1831335775(value, propertyPath);
if (result.errors) {
const info = {};
for (const err of result.errors) {
if (isNil(info[err.propertyPath])) {
info[err.propertyPath] = err;
} else if (Array.isArray(info[err.propertyPath])) {
info[err.propertyPath].push(err);
} else {
info[err.propertyPath] = [ info[err.propertyPath], err ];
}
}
/** @type {{ error: AppError }} */
return {
error: AppError.validationError("validator.error", info),
};
}
/** @type {{ value: DocParserJSComment}} */
return { value: result.value };
}
/**
* @param {undefined|any} value
* @param {string|undefined} [propertyPath]
* @returns {Either<DocParserLiteralType>}
*/
export function validateDocParserLiteralType(value, propertyPath = "$") {
const result = anonymousValidator835333298(value, propertyPath);
if (result.errors) {
const info = {};
for (const err of result.errors) {
if (isNil(info[err.propertyPath])) {
info[err.propertyPath] = err;
} else if (Array.isArray(info[err.propertyPath])) {
info[err.propertyPath].push(err);
} else {
info[err.propertyPath] = [ info[err.propertyPath], err ];
}
}
/** @type {{ error: AppError }} */
return {
error: AppError.validationError("validator.error", info),
};
}
/** @type {{ value: DocParserLiteralType}} */
return { value: result.value };
}
/**
* @param {undefined|any} value
* @param {string|undefined} [propertyPath]
* @returns {Either<DocParserPackage>}
*/
export function validateDocParserPackage(value, propertyPath = "$") {
const result = anonymousValidator1407080209(value, propertyPath);
if (result.errors) {
const info = {};
for (const err of result.errors) {
if (isNil(info[err.propertyPath])) {
info[err.propertyPath] = err;
} else if (Array.isArray(info[err.propertyPath])) {
info[err.propertyPath].push(err);
} else {
info[err.propertyPath] = [ info[err.propertyPath], err ];
}
}
/** @type {{ error: AppError }} */
return {
error: AppError.validationError("validator.error", info),
};
}
/** @type {{ value: DocParserPackage}} */
return { value: result.value };
}
/**
* @param {undefined|any} value
* @param {string|undefined} [propertyPath]
* @returns {Either<DocParserRange>}
*/
export function validateDocParserRange(value, propertyPath = "$") {
const result = anonymousValidator781728730(value, propertyPath);
if (result.errors) {
const info = {};
for (const err of result.errors) {
if (isNil(info[err.propertyPath])) {
info[err.propertyPath] = err;
} else if (Array.isArray(info[err.propertyPath])) {
info[err.propertyPath].push(err);
} else {
info[err.propertyPath] = [ info[err.propertyPath], err ];
}
}
/** @type {{ error: AppError }} */
return {
error: AppError.validationError("validator.error", info),
};
}
/** @type {{ value: DocParserRange}} */
return { value: result.value };
}
/**
* @param {undefined|any} value
* @param {string|undefined} [propertyPath]
* @returns {Either<DocParserType>}
*/
export function validateDocParserType(value, propertyPath = "$") {
const result = anonymousValidator2103344335(value, propertyPath);
if (result.errors) {
const info = {};
for (const err of result.errors) {
if (isNil(info[err.propertyPath])) {
info[err.propertyPath] = err;
} else if (Array.isArray(info[err.propertyPath])) {
info[err.propertyPath].push(err);
} else {
info[err.propertyPath] = [ info[err.propertyPath], err ];
}
}
/** @type {{ error: AppError }} */
return {
error: AppError.validationError("validator.error", info),
};
}
/** @type {{ value: DocParserType}} */
return { value: result.value };
}
/**
* @param {undefined|any} value
* @param {string|undefined} [propertyPath]
* @returns {Either<DocParserUnknownBlock>}
*/
export function validateDocParserUnknownBlock(value, propertyPath = "$") {
const result = anonymousValidator730878810(value, propertyPath);
if (result.errors) {
const info = {};
for (const err of result.errors) {
if (isNil(info[err.propertyPath])) {
info[err.propertyPath] = err;
} else if (Array.isArray(info[err.propertyPath])) {
info[err.propertyPath].push(err);
} else {
info[err.propertyPath] = [ info[err.propertyPath], err ];
}
}
/** @type {{ error: AppError }} */
return {
error: AppError.validationError("validator.error", info),
};
}
/** @type {{ value: DocParserUnknownBlock}} */
return { value: result.value };
}
