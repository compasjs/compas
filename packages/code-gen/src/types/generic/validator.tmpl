{{ const fnNumberKeys = ctx.anonFn(model.keys); }}
{{ const fnNumberValues = ctx.anonFn(model.values); }}

if (typeof value !== "object") {
  return buildError(`validator.${parentType}.type`, { propertyPath }, errorList);
}

const result = Object.create(null);
for (const key of Object.keys(value)) {
  const validatedKey = {{= model.keys.type }}Validator{{= fnNumberKeys }}(key, propertyPath + `.$key[${key}]`, errorList);

  result[validatedKey] = {{= model.values.type }}Validator{{= fnNumberValues }}(value[key], propertyPath + `.$value[${key}]`, errorList);
}

return result;
