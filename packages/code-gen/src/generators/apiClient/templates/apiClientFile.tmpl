{{= options.fileHeader }}
((newline))

{{ if (options.enableMocks) { }}
import {
{{ for (const group of Object.keys(structure)) { }}
{{= group }}Mocks,
{{ } }}
} from "./mocks.js";
{{ } }}
((newline))

let _internalClient = undefined;
((newline))

function checkApiClient() {
  if (_internalClient === undefined) {
    throw new Error("Initialize api client with createApiClient");
  }
}
((newline))

/**
 * Should set an axios compatible api client
 * @param {AxiosInstance} instance
 */
export function createApiClient(instance) {
  _internalClient = instance;
}
((newline))

function setXRequestId(headers) {
  _internalClient.defaults.headers.common["X-Request-Id"] = headers["x-request-id"];
}
((newline))

{{ for (const groupName of Object.keys(structure)) { }}

  export const {{= groupName }}Api = {

  {{ for (const itemName of Object.keys(structure[groupName])) { }}
    {{ const item = structure[groupName][itemName]; }}

    {{ if (item.type !== "route") { }}
    {{ continue; }}
    {{ } }}

    {{= apiClientFn({ options, model: item }) }}
((newline))

  {{ } }}

  };
((newline))

{{ } }}
