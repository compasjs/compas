// Generated by @lbu/code-gen
/* eslint-disable no-unused-vars */

import { query } from "@lbu/store";
import {
  fileFields,
  fileWhere,
  fileOrderBy,
  jobFields,
  jobWhere,
  jobOrderBy,
  sessionFields,
  sessionWhere,
  sessionOrderBy,
} from "./query-partials.js";
/**
 * @param {Postgres} sql
 * @param {StoreFileWhere} [where]
 * @returns {Promise<StoreFile[]>}
 */
export function fileSelect(sql, where) {
  return query`
SELECT ${fileFields()}
FROM "file" f
${fileWhere(where)}
${fileOrderBy()}
`.exec(sql);
}
/**
 * @param {Postgres} sql
 * @param {StoreFileWhere} [where={}]
 * @returns {Promise<void>}
 */
export function fileDeletePermanent(sql, where = {}) {
  where.deletedAtIncludeNotNull = true;
  return query`
DELETE FROM "file" f
${fileWhere(where)}
`.exec(sql);
}
/**
 * @param {Postgres} sql
 * @param {StoreJobWhere} [where]
 * @returns {Promise<StoreJob[]>}
 */
export function jobSelect(sql, where) {
  return query`
SELECT ${jobFields()}
FROM "job" j
${jobWhere(where)}
${jobOrderBy()}
`.exec(sql);
}
/**
 * @param {Postgres} sql
 * @param {StoreJobWhere} [where={}]
 * @returns {Promise<void>}
 */
export function jobDelete(sql, where = {}) {
  return query`
DELETE FROM "job" j
${jobWhere(where)}
`.exec(sql);
}
/**
 * @param {Postgres} sql
 * @param {StoreSessionWhere} [where]
 * @returns {Promise<StoreSession[]>}
 */
export function sessionSelect(sql, where) {
  return query`
SELECT ${sessionFields()}
FROM "session" s
${sessionWhere(where)}
${sessionOrderBy()}
`.exec(sql);
}
/**
 * @param {Postgres} sql
 * @param {StoreSessionWhere} [where={}]
 * @returns {Promise<void>}
 */
export function sessionDelete(sql, where = {}) {
  return query`
DELETE FROM "session" s
${sessionWhere(where)}
`.exec(sql);
}
