// Generated by @compas/code-gen
/* eslint-disable no-unused-vars */

import { AppError } from "@compas/stdlib";
import { isQueryPart } from "@compas/store";

const objectKeys599447075 = new Set([
  "bucketName",
  "contentLength",
  "contentType",
  "name",
  "meta",
  "id",
  "createdAt",
  "updatedAt",
  "deletedAt",
]);
const objectKeys2144828802 = new Set(["transforms", "transformedFromOriginal"]);
const objectKeys2060025506 = new Set([
  "name",
  "order",
  "meta",
  "id",
  "file",
  "parent",
  "createdAt",
  "updatedAt",
  "deletedAt",
]);
const objectKeys420878393 = new Set([""]);
const objectKeys376443596 = new Set(["q", "w"]);
const objectKeys1781782332 = new Set([
  "id",
  "isComplete",
  "priority",
  "scheduledAt",
  "name",
  "data",
  "retryCount",
  "handlerTimeout",
  "createdAt",
  "updatedAt",
]);
const objectKeys430889951 = new Set([
  "years",
  "months",
  "days",
  "hours",
  "minutes",
  "seconds",
]);
const objectKeys1108679019 = new Set([
  "expires",
  "data",
  "id",
  "createdAt",
  "updatedAt",
]);
const objectKeys2074494218 = new Set([
  "$raw",
  "$or",
  "id",
  "idNotEqual",
  "idIn",
  "idNotIn",
  "idLike",
  "idNotLike",
  "bucketName",
  "bucketNameNotEqual",
  "bucketNameIn",
  "bucketNameNotIn",
  "bucketNameLike",
  "bucketNameILike",
  "bucketNameNotLike",
  "createdAt",
  "createdAtNotEqual",
  "createdAtIn",
  "createdAtNotIn",
  "createdAtGreaterThan",
  "createdAtLowerThan",
  "createdAtIsNull",
  "createdAtIsNotNull",
  "updatedAt",
  "updatedAtNotEqual",
  "updatedAtIn",
  "updatedAtNotIn",
  "updatedAtGreaterThan",
  "updatedAtLowerThan",
  "updatedAtIsNull",
  "updatedAtIsNotNull",
  "deletedAt",
  "deletedAtNotEqual",
  "deletedAtIn",
  "deletedAtNotIn",
  "deletedAtGreaterThan",
  "deletedAtLowerThan",
  "deletedAtIncludeNotNull",
  "groupExists",
  "groupNotExists",
]);
const objectKeys153017499 = new Set([
  "$raw",
  "$or",
  "id",
  "idNotEqual",
  "idIn",
  "idNotIn",
  "idLike",
  "idNotLike",
  "order",
  "orderNotEqual",
  "orderIn",
  "orderNotIn",
  "orderGreaterThan",
  "orderLowerThan",
  "orderIsNull",
  "orderIsNotNull",
  "file",
  "fileNotEqual",
  "fileIn",
  "fileNotIn",
  "fileLike",
  "fileNotLike",
  "fileIsNull",
  "fileIsNotNull",
  "parent",
  "parentNotEqual",
  "parentIn",
  "parentNotIn",
  "parentLike",
  "parentNotLike",
  "parentIsNull",
  "parentIsNotNull",
  "createdAt",
  "createdAtNotEqual",
  "createdAtIn",
  "createdAtNotIn",
  "createdAtGreaterThan",
  "createdAtLowerThan",
  "createdAtIsNull",
  "createdAtIsNotNull",
  "updatedAt",
  "updatedAtNotEqual",
  "updatedAtIn",
  "updatedAtNotIn",
  "updatedAtGreaterThan",
  "updatedAtLowerThan",
  "updatedAtIsNull",
  "updatedAtIsNotNull",
  "deletedAt",
  "deletedAtNotEqual",
  "deletedAtIn",
  "deletedAtNotIn",
  "deletedAtGreaterThan",
  "deletedAtLowerThan",
  "deletedAtIncludeNotNull",
  "childrenExists",
  "childrenNotExists",
]);
const objectKeys1257773835 = new Set([
  "$raw",
  "$or",
  "id",
  "idNotEqual",
  "idIn",
  "idNotIn",
  "idGreaterThan",
  "idLowerThan",
  "isComplete",
  "isCompleteIsNull",
  "isCompleteIsNotNull",
  "name",
  "nameNotEqual",
  "nameIn",
  "nameNotIn",
  "nameLike",
  "nameILike",
  "nameNotLike",
  "scheduledAt",
  "scheduledAtNotEqual",
  "scheduledAtIn",
  "scheduledAtNotIn",
  "scheduledAtGreaterThan",
  "scheduledAtLowerThan",
  "scheduledAtIsNull",
  "scheduledAtIsNotNull",
  "createdAt",
  "createdAtNotEqual",
  "createdAtIn",
  "createdAtNotIn",
  "createdAtGreaterThan",
  "createdAtLowerThan",
  "createdAtIsNull",
  "createdAtIsNotNull",
  "updatedAt",
  "updatedAtNotEqual",
  "updatedAtIn",
  "updatedAtNotIn",
  "updatedAtGreaterThan",
  "updatedAtLowerThan",
  "updatedAtIsNull",
  "updatedAtIsNotNull",
]);
const objectKeys500057262 = new Set([
  "$raw",
  "$or",
  "id",
  "idNotEqual",
  "idIn",
  "idNotIn",
  "idLike",
  "idNotLike",
  "expires",
  "expiresNotEqual",
  "expiresIn",
  "expiresNotIn",
  "expiresGreaterThan",
  "expiresLowerThan",
  "createdAt",
  "createdAtNotEqual",
  "createdAtIn",
  "createdAtNotIn",
  "createdAtGreaterThan",
  "createdAtLowerThan",
  "createdAtIsNull",
  "createdAtIsNotNull",
  "updatedAt",
  "updatedAtNotEqual",
  "updatedAtIn",
  "updatedAtNotIn",
  "updatedAtGreaterThan",
  "updatedAtLowerThan",
  "updatedAtIsNull",
  "updatedAtIsNotNull",
]);
const objectKeys163358845 = new Set([
  "id",
  "bucketName",
  "createdAt",
  "updatedAt",
  "deletedAt",
]);
const objectKeys322356638 = new Set([
  "id",
  "order",
  "file",
  "parent",
  "createdAt",
  "updatedAt",
  "deletedAt",
]);
const objectKeys280827708 = new Set([
  "id",
  "isComplete",
  "name",
  "scheduledAt",
  "createdAt",
  "updatedAt",
]);
const objectKeys144635851 = new Set([
  "id",
  "expires",
  "createdAt",
  "updatedAt",
]);
const objectKeys310044624 = new Set([
  "where",
  "orderBy",
  "orderBySpec",
  "as",
  "limit",
  "offset",
  "group",
  "viaGroup",
]);
const objectKeys1862233461 = new Set([
  "where",
  "orderBy",
  "orderBySpec",
  "as",
  "limit",
  "offset",
  "file",
  "viaFile",
  "parent",
  "viaParent",
  "children",
  "viaChildren",
]);
const objectKeys1069465749 = new Set(["where", "limit", "offset", "viaGroup"]);
const objectKeys1274599578 = new Set([
  "where",
  "limit",
  "offset",
  "viaFile",
  "viaParent",
  "viaChildren",
]);
const objectKeys343387919 = new Set([
  "where",
  "orderBy",
  "orderBySpec",
  "as",
  "limit",
  "offset",
]);
const objectKeys1952914356 = new Set(["where", "limit", "offset"]);
const objectKeys647856360 = new Set([
  "where",
  "orderBy",
  "orderBySpec",
  "as",
  "limit",
  "offset",
]);
const objectKeys1805657267 = new Set(["where", "limit", "offset"]);
/**
 * @param {*} value
 * @returns {boolean}
 */
export function isNil(value) {
  return value === undefined || value === null;
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {string}
 */
export function anonymousValidator186795873(
  value,
  propertyPath,
  errors = [],
  parentType = "string",
) {
  if (isNil(value)) {
    throw AppError.validationError(`validator.${parentType}.undefined`, {
      propertyPath,
    });
  }
  if (typeof value !== "string") {
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath,
    });
  }
  if (value.length < 1) {
    const min = 1;
    throw AppError.validationError(`validator.${parentType}.min`, {
      propertyPath,
      min,
    });
  }
  return value;
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {number}
 */
export function anonymousValidator293751998(
  value,
  propertyPath,
  errors = [],
  parentType = "number",
) {
  if (isNil(value)) {
    throw AppError.validationError(`validator.${parentType}.undefined`, {
      propertyPath,
    });
  }
  if (typeof value !== "number" || isNaN(value) || !isFinite(value)) {
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath,
    });
  }
  if (!Number.isInteger(value)) {
    throw AppError.validationError(`validator.${parentType}.integer`, {
      propertyPath,
    });
  }
  if (value < -2147483647) {
    const min = -2147483647;
    throw AppError.validationError(`validator.${parentType}.min`, {
      propertyPath,
      min,
    });
  }
  if (value > 2147483647) {
    const max = 2147483647;
    throw AppError.validationError(`validator.${parentType}.max`, {
      propertyPath,
      max,
    });
  }
  return value;
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {undefined|string}
 */
export function anonymousValidator1443576836(
  value,
  propertyPath,
  errors = [],
  parentType = "string",
) {
  if (isNil(value)) {
    return value;
  }
  if (typeof value !== "string") {
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath,
    });
  }
  if (value.length === 0) {
    return undefined;
  }
  if (value.length < 1) {
    const min = 1;
    throw AppError.validationError(`validator.${parentType}.min`, {
      propertyPath,
      min,
    });
  }
  return value;
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {{"transforms"?: undefined|any, "transformedFromOriginal"?: undefined|string, }}
 */
export function anonymousValidator2144828802(
  value,
  propertyPath,
  errors = [],
  parentType = "object",
) {
  if (isNil(value)) {
    return {};
  }
  if (typeof value !== "object") {
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath,
    });
  }
  const result = Object.create(null);
  for (const key of Object.keys(value)) {
    if (!objectKeys2144828802.has(key)) {
      throw AppError.validationError(`validator.${parentType}.strict`, {
        propertyPath,
        extraKey: key,
      });
    }
  }
  result["transforms"] = value["transforms"] ?? undefined;
  result["transformedFromOriginal"] = anonymousValidator1443576836(
    value["transformedFromOriginal"],
    `${propertyPath}.transformedFromOriginal`,
    errors,
  );
  return result;
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {string}
 */
export function anonymousValidator981662321(
  value,
  propertyPath,
  errors = [],
  parentType = "string",
) {
  if (isNil(value)) {
    throw AppError.validationError(`validator.${parentType}.undefined`, {
      propertyPath,
    });
  }
  if (typeof value !== "string") {
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath,
    });
  }
  value = value.trim();
  if (value.length < 36) {
    const min = 36;
    throw AppError.validationError(`validator.${parentType}.min`, {
      propertyPath,
      min,
    });
  }
  if (value.length > 36) {
    const max = 36;
    throw AppError.validationError(`validator.${parentType}.max`, {
      propertyPath,
      max,
    });
  }
  value = value.toLowerCase();
  if (
    !/^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[a-f0-9]{4}-[a-f0-9]{12}$/gi.test(
      value,
    )
  ) {
    throw AppError.validationError(`validator.${parentType}.pattern`, {
      propertyPath,
    });
  }
  return value;
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {string}
 */
export function anonymousValidator56355924(
  value,
  propertyPath,
  errors = [],
  parentType = "uuid",
) {
  if (isNil(value)) {
    throw AppError.validationError(`validator.${parentType}.undefined`, {
      propertyPath,
    });
  }
  return anonymousValidator981662321(value, propertyPath, errors, "uuid");
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {undefined|string}
 */
export function anonymousValidator852571656(
  value,
  propertyPath,
  errors = [],
  parentType = "string",
) {
  if (isNil(value)) {
    return value;
  }
  if (typeof value !== "string") {
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath,
    });
  }
  if (value.length === 0) {
    return undefined;
  }
  if (value.length < 24) {
    const min = 24;
    throw AppError.validationError(`validator.${parentType}.min`, {
      propertyPath,
      min,
    });
  }
  if (value.length > 29) {
    const max = 29;
    throw AppError.validationError(`validator.${parentType}.max`, {
      propertyPath,
      max,
    });
  }
  if (
    !/^(\d{4}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d\.\d+([+-][0-2]\d:[0-5]\d|Z))|(\d{4}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d([+-][0-2]\d:[0-5]\d|Z))|(\d{4}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d([+-][0-2]\d:[0-5]\d|Z))$/gi.test(
      value,
    )
  ) {
    throw AppError.validationError(`validator.${parentType}.pattern`, {
      propertyPath,
    });
  }
  return value;
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {Date}
 */
export function anonymousValidator1389014320(
  value,
  propertyPath,
  errors = [],
  parentType = "date",
) {
  if (isNil(value)) {
    return new Date();
  }
  if (
    typeof value !== "string" &&
    typeof value !== "number" &&
    !(value instanceof Date)
  ) {
    throw AppError.validationError(`validator.${parentType}.invalid`, {
      propertyPath,
    });
  }
  if (typeof value === "string") {
    value = anonymousValidator852571656(value, propertyPath, errors, "date");
    if (!value) {
      return new Date();
    }
    if (!value) {
      return value;
    }
  }
  const date = new Date(value);
  if (isNaN(date.getTime())) {
    throw AppError.validationError(`validator.${parentType}.invalid`, {
      propertyPath,
    });
  }
  return date;
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {undefined|Date}
 */
export function anonymousValidator1988053796(
  value,
  propertyPath,
  errors = [],
  parentType = "date",
) {
  if (isNil(value)) {
    return value;
  }
  if (
    typeof value !== "string" &&
    typeof value !== "number" &&
    !(value instanceof Date)
  ) {
    throw AppError.validationError(`validator.${parentType}.invalid`, {
      propertyPath,
    });
  }
  if (typeof value === "string") {
    value = anonymousValidator852571656(value, propertyPath, errors, "date");
    if (!value) {
      return value;
    }
  }
  const date = new Date(value);
  if (isNaN(date.getTime())) {
    throw AppError.validationError(`validator.${parentType}.invalid`, {
      propertyPath,
    });
  }
  return date;
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {{"bucketName": string, "contentLength": number, "contentType": string, "name": string, "meta": StoreFileMeta, "id": string, "createdAt": Date, "updatedAt": Date, "deletedAt"?: undefined|Date, }}
 */
export function anonymousValidator599447075(
  value,
  propertyPath,
  errors = [],
  parentType = "object",
) {
  if (isNil(value)) {
    throw AppError.validationError(`validator.${parentType}.undefined`, {
      propertyPath,
    });
  }
  if (typeof value !== "object") {
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath,
    });
  }
  const result = Object.create(null);
  for (const key of Object.keys(value)) {
    if (!objectKeys599447075.has(key)) {
      throw AppError.validationError(`validator.${parentType}.strict`, {
        propertyPath,
        extraKey: key,
      });
    }
  }
  result["bucketName"] = anonymousValidator186795873(
    value["bucketName"],
    `${propertyPath}.bucketName`,
    errors,
  );
  result["contentLength"] = anonymousValidator293751998(
    value["contentLength"],
    `${propertyPath}.contentLength`,
    errors,
  );
  result["contentType"] = anonymousValidator186795873(
    value["contentType"],
    `${propertyPath}.contentType`,
    errors,
  );
  result["name"] = anonymousValidator186795873(
    value["name"],
    `${propertyPath}.name`,
    errors,
  );
  result["meta"] = anonymousValidator2144828802(
    value["meta"],
    `${propertyPath}.meta`,
    errors,
  );
  result["id"] = anonymousValidator56355924(
    value["id"],
    `${propertyPath}.id`,
    errors,
  );
  result["createdAt"] = anonymousValidator1389014320(
    value["createdAt"],
    `${propertyPath}.createdAt`,
    errors,
  );
  result["updatedAt"] = anonymousValidator1389014320(
    value["updatedAt"],
    `${propertyPath}.updatedAt`,
    errors,
  );
  result["deletedAt"] = anonymousValidator1988053796(
    value["deletedAt"],
    `${propertyPath}.deletedAt`,
    errors,
  );
  return result;
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {number}
 */
export function anonymousValidator1789497143(
  value,
  propertyPath,
  errors = [],
  parentType = "number",
) {
  if (isNil(value)) {
    return Math.floor(Date.now() / 1000000);
  }
  if (typeof value !== "number" || isNaN(value) || !isFinite(value)) {
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath,
    });
  }
  if (!Number.isInteger(value)) {
    throw AppError.validationError(`validator.${parentType}.integer`, {
      propertyPath,
    });
  }
  if (value < -2147483647) {
    const min = -2147483647;
    throw AppError.validationError(`validator.${parentType}.min`, {
      propertyPath,
      min,
    });
  }
  if (value > 2147483647) {
    const max = 2147483647;
    throw AppError.validationError(`validator.${parentType}.max`, {
      propertyPath,
      max,
    });
  }
  return value;
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {{}}
 */
export function anonymousValidator420878393(
  value,
  propertyPath,
  errors = [],
  parentType = "object",
) {
  if (isNil(value)) {
    return {};
  }
  if (typeof value !== "object") {
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath,
    });
  }
  const result = Object.create(null);
  for (const key of Object.keys(value)) {
    if (!objectKeys420878393.has(key)) {
      throw AppError.validationError(`validator.${parentType}.strict`, {
        propertyPath,
        extraKey: key,
      });
    }
  }
  return result;
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {undefined|string}
 */
export function anonymousValidator1802076175(
  value,
  propertyPath,
  errors = [],
  parentType = "uuid",
) {
  if (isNil(value)) {
    return value;
  }
  return anonymousValidator981662321(value, propertyPath, errors, "uuid");
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {{"name"?: undefined|string, "order": number, "meta": StoreFileGroupMeta, "id": string, "file"?: undefined|string, "parent"?: undefined|string, "createdAt": Date, "updatedAt": Date, "deletedAt"?: undefined|Date, }}
 */
export function anonymousValidator2060025506(
  value,
  propertyPath,
  errors = [],
  parentType = "object",
) {
  if (isNil(value)) {
    throw AppError.validationError(`validator.${parentType}.undefined`, {
      propertyPath,
    });
  }
  if (typeof value !== "object") {
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath,
    });
  }
  const result = Object.create(null);
  for (const key of Object.keys(value)) {
    if (!objectKeys2060025506.has(key)) {
      throw AppError.validationError(`validator.${parentType}.strict`, {
        propertyPath,
        extraKey: key,
      });
    }
  }
  result["name"] = anonymousValidator1443576836(
    value["name"],
    `${propertyPath}.name`,
    errors,
  );
  result["order"] = anonymousValidator1789497143(
    value["order"],
    `${propertyPath}.order`,
    errors,
  );
  result["meta"] = anonymousValidator420878393(
    value["meta"],
    `${propertyPath}.meta`,
    errors,
  );
  result["id"] = anonymousValidator56355924(
    value["id"],
    `${propertyPath}.id`,
    errors,
  );
  result["file"] = anonymousValidator1802076175(
    value["file"],
    `${propertyPath}.file`,
    errors,
  );
  result["parent"] = anonymousValidator1802076175(
    value["parent"],
    `${propertyPath}.parent`,
    errors,
  );
  result["createdAt"] = anonymousValidator1389014320(
    value["createdAt"],
    `${propertyPath}.createdAt`,
    errors,
  );
  result["updatedAt"] = anonymousValidator1389014320(
    value["updatedAt"],
    `${propertyPath}.updatedAt`,
    errors,
  );
  result["deletedAt"] = anonymousValidator1988053796(
    value["deletedAt"],
    `${propertyPath}.deletedAt`,
    errors,
  );
  return result;
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {number}
 */
export function anonymousValidator66994068(
  value,
  propertyPath,
  errors = [],
  parentType = "number",
) {
  if (isNil(value)) {
    return 75;
  }
  if (typeof value !== "number") {
    value = Number(value);
  }
  if (typeof value !== "number" || isNaN(value) || !isFinite(value)) {
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath,
    });
  }
  if (!Number.isInteger(value)) {
    throw AppError.validationError(`validator.${parentType}.integer`, {
      propertyPath,
    });
  }
  if (value < 0) {
    const min = 0;
    throw AppError.validationError(`validator.${parentType}.min`, {
      propertyPath,
      min,
    });
  }
  if (value > 100) {
    const max = 100;
    throw AppError.validationError(`validator.${parentType}.max`, {
      propertyPath,
      max,
    });
  }
  return value;
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {number}
 */
export function anonymousValidator1483765921(
  value,
  propertyPath,
  errors = [],
  parentType = "number",
) {
  if (isNil(value)) {
    throw AppError.validationError(`validator.${parentType}.undefined`, {
      propertyPath,
    });
  }
  if (typeof value !== "number") {
    value = Number(value);
  }
  if (typeof value !== "number" || isNaN(value) || !isFinite(value)) {
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath,
    });
  }
  if (!Number.isInteger(value)) {
    throw AppError.validationError(`validator.${parentType}.integer`, {
      propertyPath,
    });
  }
  if (value < -2147483647) {
    const min = -2147483647;
    throw AppError.validationError(`validator.${parentType}.min`, {
      propertyPath,
      min,
    });
  }
  if (value > 2147483647) {
    const max = 2147483647;
    throw AppError.validationError(`validator.${parentType}.max`, {
      propertyPath,
      max,
    });
  }
  return value;
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {{"q": number, "w": number, }}
 */
export function anonymousValidator376443596(
  value,
  propertyPath,
  errors = [],
  parentType = "object",
) {
  if (isNil(value)) {
    throw AppError.validationError(`validator.${parentType}.undefined`, {
      propertyPath,
    });
  }
  if (typeof value !== "object") {
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath,
    });
  }
  const result = Object.create(null);
  for (const key of Object.keys(value)) {
    if (!objectKeys376443596.has(key)) {
      throw AppError.validationError(`validator.${parentType}.strict`, {
        propertyPath,
        extraKey: key,
      });
    }
  }
  result["q"] = anonymousValidator66994068(
    value["q"],
    `${propertyPath}.q`,
    errors,
  );
  result["w"] = anonymousValidator1483765921(
    value["w"],
    `${propertyPath}.w`,
    errors,
  );
  return result;
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {boolean}
 */
export function anonymousValidator1174857441(
  value,
  propertyPath,
  errors = [],
  parentType = "boolean",
) {
  if (isNil(value)) {
    return false;
  }
  if (typeof value !== "boolean") {
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath,
    });
  }
  return value;
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {number}
 */
export function anonymousValidator326842456(
  value,
  propertyPath,
  errors = [],
  parentType = "number",
) {
  if (isNil(value)) {
    return 0;
  }
  if (typeof value !== "number" || isNaN(value) || !isFinite(value)) {
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath,
    });
  }
  if (!Number.isInteger(value)) {
    throw AppError.validationError(`validator.${parentType}.integer`, {
      propertyPath,
    });
  }
  if (value < 0) {
    const min = 0;
    throw AppError.validationError(`validator.${parentType}.min`, {
      propertyPath,
      min,
    });
  }
  return value;
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {any}
 */
export function anonymousValidator1471603504(
  value,
  propertyPath,
  errors = [],
  parentType = "any",
) {
  if (isNil(value)) {
    return {};
  }
  return value;
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {number}
 */
export function anonymousValidator1103865757(
  value,
  propertyPath,
  errors = [],
  parentType = "number",
) {
  if (isNil(value)) {
    return 0;
  }
  if (typeof value !== "number" || isNaN(value) || !isFinite(value)) {
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath,
    });
  }
  if (!Number.isInteger(value)) {
    throw AppError.validationError(`validator.${parentType}.integer`, {
      propertyPath,
    });
  }
  if (value < -2147483647) {
    const min = -2147483647;
    throw AppError.validationError(`validator.${parentType}.min`, {
      propertyPath,
      min,
    });
  }
  if (value > 2147483647) {
    const max = 2147483647;
    throw AppError.validationError(`validator.${parentType}.max`, {
      propertyPath,
      max,
    });
  }
  return value;
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {undefined|number}
 */
export function anonymousValidator1065942849(
  value,
  propertyPath,
  errors = [],
  parentType = "number",
) {
  if (isNil(value)) {
    return value;
  }
  if (typeof value !== "number" || isNaN(value) || !isFinite(value)) {
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath,
    });
  }
  if (!Number.isInteger(value)) {
    throw AppError.validationError(`validator.${parentType}.integer`, {
      propertyPath,
    });
  }
  if (value < 1000) {
    const min = 1000;
    throw AppError.validationError(`validator.${parentType}.min`, {
      propertyPath,
      min,
    });
  }
  return value;
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {{"id": number, "isComplete": boolean, "priority": number, "scheduledAt": Date, "name": string, "data": any, "retryCount": number, "handlerTimeout"?: undefined|number, "createdAt": Date, "updatedAt": Date, }}
 */
export function anonymousValidator1781782332(
  value,
  propertyPath,
  errors = [],
  parentType = "object",
) {
  if (isNil(value)) {
    throw AppError.validationError(`validator.${parentType}.undefined`, {
      propertyPath,
    });
  }
  if (typeof value !== "object") {
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath,
    });
  }
  const result = Object.create(null);
  for (const key of Object.keys(value)) {
    if (!objectKeys1781782332.has(key)) {
      throw AppError.validationError(`validator.${parentType}.strict`, {
        propertyPath,
        extraKey: key,
      });
    }
  }
  result["id"] = anonymousValidator1483765921(
    value["id"],
    `${propertyPath}.id`,
    errors,
  );
  result["isComplete"] = anonymousValidator1174857441(
    value["isComplete"],
    `${propertyPath}.isComplete`,
    errors,
  );
  result["priority"] = anonymousValidator326842456(
    value["priority"],
    `${propertyPath}.priority`,
    errors,
  );
  result["scheduledAt"] = anonymousValidator1389014320(
    value["scheduledAt"],
    `${propertyPath}.scheduledAt`,
    errors,
  );
  result["name"] = anonymousValidator186795873(
    value["name"],
    `${propertyPath}.name`,
    errors,
  );
  result["data"] = anonymousValidator1471603504(
    value["data"],
    `${propertyPath}.data`,
    errors,
  );
  result["retryCount"] = anonymousValidator1103865757(
    value["retryCount"],
    `${propertyPath}.retryCount`,
    errors,
  );
  result["handlerTimeout"] = anonymousValidator1065942849(
    value["handlerTimeout"],
    `${propertyPath}.handlerTimeout`,
    errors,
  );
  result["createdAt"] = anonymousValidator1389014320(
    value["createdAt"],
    `${propertyPath}.createdAt`,
    errors,
  );
  result["updatedAt"] = anonymousValidator1389014320(
    value["updatedAt"],
    `${propertyPath}.updatedAt`,
    errors,
  );
  return result;
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {undefined|number}
 */
export function anonymousValidator963028965(
  value,
  propertyPath,
  errors = [],
  parentType = "number",
) {
  if (isNil(value)) {
    return value;
  }
  if (typeof value !== "number" || isNaN(value) || !isFinite(value)) {
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath,
    });
  }
  if (!Number.isInteger(value)) {
    throw AppError.validationError(`validator.${parentType}.integer`, {
      propertyPath,
    });
  }
  if (value < -2147483647) {
    const min = -2147483647;
    throw AppError.validationError(`validator.${parentType}.min`, {
      propertyPath,
      min,
    });
  }
  if (value > 2147483647) {
    const max = 2147483647;
    throw AppError.validationError(`validator.${parentType}.max`, {
      propertyPath,
      max,
    });
  }
  return value;
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {{"years"?: undefined|number, "months"?: undefined|number, "days"?: undefined|number, "hours"?: undefined|number, "minutes"?: undefined|number, "seconds"?: undefined|number, }}
 */
export function anonymousValidator430889951(
  value,
  propertyPath,
  errors = [],
  parentType = "object",
) {
  if (isNil(value)) {
    throw AppError.validationError(`validator.${parentType}.undefined`, {
      propertyPath,
    });
  }
  if (typeof value !== "object") {
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath,
    });
  }
  const result = Object.create(null);
  for (const key of Object.keys(value)) {
    if (!objectKeys430889951.has(key)) {
      throw AppError.validationError(`validator.${parentType}.strict`, {
        propertyPath,
        extraKey: key,
      });
    }
  }
  result["years"] = anonymousValidator963028965(
    value["years"],
    `${propertyPath}.years`,
    errors,
  );
  result["months"] = anonymousValidator963028965(
    value["months"],
    `${propertyPath}.months`,
    errors,
  );
  result["days"] = anonymousValidator963028965(
    value["days"],
    `${propertyPath}.days`,
    errors,
  );
  result["hours"] = anonymousValidator963028965(
    value["hours"],
    `${propertyPath}.hours`,
    errors,
  );
  result["minutes"] = anonymousValidator963028965(
    value["minutes"],
    `${propertyPath}.minutes`,
    errors,
  );
  result["seconds"] = anonymousValidator963028965(
    value["seconds"],
    `${propertyPath}.seconds`,
    errors,
  );
  return result;
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {string}
 */
export function anonymousValidator1135331723(
  value,
  propertyPath,
  errors = [],
  parentType = "string",
) {
  if (isNil(value)) {
    throw AppError.validationError(`validator.${parentType}.undefined`, {
      propertyPath,
    });
  }
  if (typeof value !== "string") {
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath,
    });
  }
  if (value.length < 24) {
    const min = 24;
    throw AppError.validationError(`validator.${parentType}.min`, {
      propertyPath,
      min,
    });
  }
  if (value.length > 29) {
    const max = 29;
    throw AppError.validationError(`validator.${parentType}.max`, {
      propertyPath,
      max,
    });
  }
  if (
    !/^(\d{4}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d\.\d+([+-][0-2]\d:[0-5]\d|Z))|(\d{4}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d([+-][0-2]\d:[0-5]\d|Z))|(\d{4}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d([+-][0-2]\d:[0-5]\d|Z))$/gi.test(
      value,
    )
  ) {
    throw AppError.validationError(`validator.${parentType}.pattern`, {
      propertyPath,
    });
  }
  return value;
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {Date}
 */
export function anonymousValidator448481401(
  value,
  propertyPath,
  errors = [],
  parentType = "date",
) {
  if (isNil(value)) {
    throw AppError.validationError(`validator.${parentType}.undefined`, {
      propertyPath,
    });
  }
  if (
    typeof value !== "string" &&
    typeof value !== "number" &&
    !(value instanceof Date)
  ) {
    throw AppError.validationError(`validator.${parentType}.invalid`, {
      propertyPath,
    });
  }
  if (typeof value === "string") {
    value = anonymousValidator1135331723(value, propertyPath, errors, "date");
  }
  const date = new Date(value);
  if (isNaN(date.getTime())) {
    throw AppError.validationError(`validator.${parentType}.invalid`, {
      propertyPath,
    });
  }
  return date;
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {{"expires": Date, "data": any, "id": string, "createdAt": Date, "updatedAt": Date, }}
 */
export function anonymousValidator1108679019(
  value,
  propertyPath,
  errors = [],
  parentType = "object",
) {
  if (isNil(value)) {
    throw AppError.validationError(`validator.${parentType}.undefined`, {
      propertyPath,
    });
  }
  if (typeof value !== "object") {
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath,
    });
  }
  const result = Object.create(null);
  for (const key of Object.keys(value)) {
    if (!objectKeys1108679019.has(key)) {
      throw AppError.validationError(`validator.${parentType}.strict`, {
        propertyPath,
        extraKey: key,
      });
    }
  }
  result["expires"] = anonymousValidator448481401(
    value["expires"],
    `${propertyPath}.expires`,
    errors,
  );
  result["data"] = anonymousValidator1471603504(
    value["data"],
    `${propertyPath}.data`,
    errors,
  );
  result["id"] = anonymousValidator56355924(
    value["id"],
    `${propertyPath}.id`,
    errors,
  );
  result["createdAt"] = anonymousValidator1389014320(
    value["createdAt"],
    `${propertyPath}.createdAt`,
    errors,
  );
  result["updatedAt"] = anonymousValidator1389014320(
    value["updatedAt"],
    `${propertyPath}.updatedAt`,
    errors,
  );
  return result;
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {undefined|(StoreFileWhere)[]}
 */
export function anonymousValidator1804070323(
  value,
  propertyPath,
  errors = [],
  parentType = "array",
) {
  if (isNil(value)) {
    return value;
  }
  if (!Array.isArray(value)) {
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath,
    });
  }
  const result = Array.from({ length: value.length });
  for (let i = 0; i < value.length; ++i) {
    result[i] = anonymousValidator2074494218(
      value[i],
      `${propertyPath}[${i}]`,
      errors,
    );
  }
  return result;
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {undefined|(string)[]}
 */
export function anonymousValidator1899069927(
  value,
  propertyPath,
  errors = [],
  parentType = "array",
) {
  if (isNil(value)) {
    return value;
  }
  if (!Array.isArray(value)) {
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath,
    });
  }
  const result = Array.from({ length: value.length });
  for (let i = 0; i < value.length; ++i) {
    result[i] = anonymousValidator56355924(
      value[i],
      `${propertyPath}[${i}]`,
      errors,
    );
  }
  return result;
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {undefined|(string)[]|QueryPart<any>}
 */
export function anonymousValidator1024905514(
  value,
  propertyPath,
  errors = [],
  parentType = "anyOf",
) {
  if (isNil(value)) {
    return value;
  }
  const subErrors = [];
  try {
    return anonymousValidator1899069927(value, propertyPath, subErrors);
  } catch (e) {
    delete e.stack;
    subErrors.push(e);
  }
  try {
    if (!isNil(value) && !isQueryPart(value)) {
      const parentType = "any";
      throw AppError.validationError(`validator.${parentType}.custom`, {
        propertyPath: propertyPath,
      });
    }
    return value ?? undefined;
  } catch (e) {
    delete e.stack;
    subErrors.push(e);
  }
  throw AppError.validationError(`validator.${parentType}.type`, {
    propertyPath,
    errors: subErrors,
  });
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {undefined|(string)[]}
 */
export function anonymousValidator890105892(
  value,
  propertyPath,
  errors = [],
  parentType = "array",
) {
  if (isNil(value)) {
    return value;
  }
  if (!Array.isArray(value)) {
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath,
    });
  }
  const result = Array.from({ length: value.length });
  for (let i = 0; i < value.length; ++i) {
    result[i] = anonymousValidator186795873(
      value[i],
      `${propertyPath}[${i}]`,
      errors,
    );
  }
  return result;
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {undefined|(string)[]|QueryPart<any>}
 */
export function anonymousValidator972289697(
  value,
  propertyPath,
  errors = [],
  parentType = "anyOf",
) {
  if (isNil(value)) {
    return value;
  }
  const subErrors = [];
  try {
    return anonymousValidator890105892(value, propertyPath, subErrors);
  } catch (e) {
    delete e.stack;
    subErrors.push(e);
  }
  try {
    if (!isNil(value) && !isQueryPart(value)) {
      const parentType = "any";
      throw AppError.validationError(`validator.${parentType}.custom`, {
        propertyPath: propertyPath,
      });
    }
    return value ?? undefined;
  } catch (e) {
    delete e.stack;
    subErrors.push(e);
  }
  throw AppError.validationError(`validator.${parentType}.type`, {
    propertyPath,
    errors: subErrors,
  });
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {undefined|(Date)[]}
 */
export function anonymousValidator1891060044(
  value,
  propertyPath,
  errors = [],
  parentType = "array",
) {
  if (isNil(value)) {
    return value;
  }
  if (!Array.isArray(value)) {
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath,
    });
  }
  const result = Array.from({ length: value.length });
  for (let i = 0; i < value.length; ++i) {
    result[i] = anonymousValidator448481401(
      value[i],
      `${propertyPath}[${i}]`,
      errors,
    );
  }
  return result;
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {undefined|(Date)[]|QueryPart<any>}
 */
export function anonymousValidator978954249(
  value,
  propertyPath,
  errors = [],
  parentType = "anyOf",
) {
  if (isNil(value)) {
    return value;
  }
  const subErrors = [];
  try {
    return anonymousValidator1891060044(value, propertyPath, subErrors);
  } catch (e) {
    delete e.stack;
    subErrors.push(e);
  }
  try {
    if (!isNil(value) && !isQueryPart(value)) {
      const parentType = "any";
      throw AppError.validationError(`validator.${parentType}.custom`, {
        propertyPath: propertyPath,
      });
    }
    return value ?? undefined;
  } catch (e) {
    delete e.stack;
    subErrors.push(e);
  }
  throw AppError.validationError(`validator.${parentType}.type`, {
    propertyPath,
    errors: subErrors,
  });
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {undefined|(StoreFileGroupWhere)[]}
 */
export function anonymousValidator58972158(
  value,
  propertyPath,
  errors = [],
  parentType = "array",
) {
  if (isNil(value)) {
    return value;
  }
  if (!Array.isArray(value)) {
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath,
    });
  }
  const result = Array.from({ length: value.length });
  for (let i = 0; i < value.length; ++i) {
    result[i] = anonymousValidator153017499(
      value[i],
      `${propertyPath}[${i}]`,
      errors,
    );
  }
  return result;
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {undefined|(number)[]}
 */
export function anonymousValidator1370653763(
  value,
  propertyPath,
  errors = [],
  parentType = "array",
) {
  if (isNil(value)) {
    return value;
  }
  if (!Array.isArray(value)) {
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath,
    });
  }
  const result = Array.from({ length: value.length });
  for (let i = 0; i < value.length; ++i) {
    result[i] = anonymousValidator293751998(
      value[i],
      `${propertyPath}[${i}]`,
      errors,
    );
  }
  return result;
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {undefined|(number)[]|QueryPart<any>}
 */
export function anonymousValidator2102014144(
  value,
  propertyPath,
  errors = [],
  parentType = "anyOf",
) {
  if (isNil(value)) {
    return value;
  }
  const subErrors = [];
  try {
    return anonymousValidator1370653763(value, propertyPath, subErrors);
  } catch (e) {
    delete e.stack;
    subErrors.push(e);
  }
  try {
    if (!isNil(value) && !isQueryPart(value)) {
      const parentType = "any";
      throw AppError.validationError(`validator.${parentType}.custom`, {
        propertyPath: propertyPath,
      });
    }
    return value ?? undefined;
  } catch (e) {
    delete e.stack;
    subErrors.push(e);
  }
  throw AppError.validationError(`validator.${parentType}.type`, {
    propertyPath,
    errors: subErrors,
  });
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {{"$raw"?: undefined|QueryPart<any>, "$or"?: undefined|(StoreFileGroupWhere)[], "id"?: undefined|string, "idNotEqual"?: undefined|string, "idIn"?: undefined|(string)[]|QueryPart<any>, "idNotIn"?: undefined|(string)[]|QueryPart<any>, "idLike"?: undefined|string, "idNotLike"?: undefined|string, "order"?: undefined|number, "orderNotEqual"?: undefined|number, "orderIn"?: undefined|(number)[]|QueryPart<any>, "orderNotIn"?: undefined|(number)[]|QueryPart<any>, "orderGreaterThan"?: undefined|number, "orderLowerThan"?: undefined|number, "orderIsNull"?: undefined|boolean, "orderIsNotNull"?: undefined|boolean, "file"?: undefined|string, "fileNotEqual"?: undefined|string, "fileIn"?: undefined|(string)[]|QueryPart<any>, "fileNotIn"?: undefined|(string)[]|QueryPart<any>, "fileLike"?: undefined|string, "fileNotLike"?: undefined|string, "fileIsNull"?: undefined|boolean, "fileIsNotNull"?: undefined|boolean, "parent"?: undefined|string, "parentNotEqual"?: undefined|string, "parentIn"?: undefined|(string)[]|QueryPart<any>, "parentNotIn"?: undefined|(string)[]|QueryPart<any>, "parentLike"?: undefined|string, "parentNotLike"?: undefined|string, "parentIsNull"?: undefined|boolean, "parentIsNotNull"?: undefined|boolean, "createdAt"?: undefined|Date, "createdAtNotEqual"?: undefined|Date, "createdAtIn"?: undefined|(Date)[]|QueryPart<any>, "createdAtNotIn"?: undefined|(Date)[]|QueryPart<any>, "createdAtGreaterThan"?: undefined|Date, "createdAtLowerThan"?: undefined|Date, "createdAtIsNull"?: undefined|boolean, "createdAtIsNotNull"?: undefined|boolean, "updatedAt"?: undefined|Date, "updatedAtNotEqual"?: undefined|Date, "updatedAtIn"?: undefined|(Date)[]|QueryPart<any>, "updatedAtNotIn"?: undefined|(Date)[]|QueryPart<any>, "updatedAtGreaterThan"?: undefined|Date, "updatedAtLowerThan"?: undefined|Date, "updatedAtIsNull"?: undefined|boolean, "updatedAtIsNotNull"?: undefined|boolean, "deletedAt"?: undefined|Date, "deletedAtNotEqual"?: undefined|Date, "deletedAtIn"?: undefined|(Date)[]|QueryPart<any>, "deletedAtNotIn"?: undefined|(Date)[]|QueryPart<any>, "deletedAtGreaterThan"?: undefined|Date, "deletedAtLowerThan"?: undefined|Date, "deletedAtIncludeNotNull"?: undefined|boolean, "childrenExists"?: undefined|StoreFileGroupWhere, "childrenNotExists"?: undefined|StoreFileGroupWhere, }}
 */
export function anonymousValidator153017499(
  value,
  propertyPath,
  errors = [],
  parentType = "object",
) {
  if (isNil(value)) {
    throw AppError.validationError(`validator.${parentType}.undefined`, {
      propertyPath,
    });
  }
  if (typeof value !== "object") {
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath,
    });
  }
  const result = Object.create(null);
  for (const key of Object.keys(value)) {
    if (!objectKeys153017499.has(key)) {
      throw AppError.validationError(`validator.${parentType}.strict`, {
        propertyPath,
        extraKey: key,
      });
    }
  }
  if (!isNil(value["$raw"]) && !isQueryPart(value["$raw"])) {
    const parentType = "any";
    throw AppError.validationError(`validator.${parentType}.custom`, {
      propertyPath: `${propertyPath}.$raw`,
    });
  }
  result["$raw"] = value["$raw"] ?? undefined;
  result["$or"] = anonymousValidator58972158(
    value["$or"],
    `${propertyPath}.$or`,
    errors,
  );
  result["id"] = anonymousValidator1802076175(
    value["id"],
    `${propertyPath}.id`,
    errors,
  );
  result["idNotEqual"] = anonymousValidator1802076175(
    value["idNotEqual"],
    `${propertyPath}.idNotEqual`,
    errors,
  );
  result["idIn"] = anonymousValidator1024905514(
    value["idIn"],
    `${propertyPath}.idIn`,
    errors,
  );
  result["idNotIn"] = anonymousValidator1024905514(
    value["idNotIn"],
    `${propertyPath}.idNotIn`,
    errors,
  );
  result["idLike"] = anonymousValidator1802076175(
    value["idLike"],
    `${propertyPath}.idLike`,
    errors,
  );
  result["idNotLike"] = anonymousValidator1802076175(
    value["idNotLike"],
    `${propertyPath}.idNotLike`,
    errors,
  );
  result["order"] = anonymousValidator963028965(
    value["order"],
    `${propertyPath}.order`,
    errors,
  );
  result["orderNotEqual"] = anonymousValidator963028965(
    value["orderNotEqual"],
    `${propertyPath}.orderNotEqual`,
    errors,
  );
  result["orderIn"] = anonymousValidator2102014144(
    value["orderIn"],
    `${propertyPath}.orderIn`,
    errors,
  );
  result["orderNotIn"] = anonymousValidator2102014144(
    value["orderNotIn"],
    `${propertyPath}.orderNotIn`,
    errors,
  );
  result["orderGreaterThan"] = anonymousValidator963028965(
    value["orderGreaterThan"],
    `${propertyPath}.orderGreaterThan`,
    errors,
  );
  result["orderLowerThan"] = anonymousValidator963028965(
    value["orderLowerThan"],
    `${propertyPath}.orderLowerThan`,
    errors,
  );
  if (
    !isNil(value["orderIsNull"]) &&
    typeof value["orderIsNull"] !== "boolean"
  ) {
    const parentType = "boolean";
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath: `${propertyPath}.orderIsNull`,
    });
  }
  result["orderIsNull"] = value["orderIsNull"] ?? undefined;
  if (
    !isNil(value["orderIsNotNull"]) &&
    typeof value["orderIsNotNull"] !== "boolean"
  ) {
    const parentType = "boolean";
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath: `${propertyPath}.orderIsNotNull`,
    });
  }
  result["orderIsNotNull"] = value["orderIsNotNull"] ?? undefined;
  result["file"] = anonymousValidator1802076175(
    value["file"],
    `${propertyPath}.file`,
    errors,
  );
  result["fileNotEqual"] = anonymousValidator1802076175(
    value["fileNotEqual"],
    `${propertyPath}.fileNotEqual`,
    errors,
  );
  result["fileIn"] = anonymousValidator1024905514(
    value["fileIn"],
    `${propertyPath}.fileIn`,
    errors,
  );
  result["fileNotIn"] = anonymousValidator1024905514(
    value["fileNotIn"],
    `${propertyPath}.fileNotIn`,
    errors,
  );
  result["fileLike"] = anonymousValidator1802076175(
    value["fileLike"],
    `${propertyPath}.fileLike`,
    errors,
  );
  result["fileNotLike"] = anonymousValidator1802076175(
    value["fileNotLike"],
    `${propertyPath}.fileNotLike`,
    errors,
  );
  if (!isNil(value["fileIsNull"]) && typeof value["fileIsNull"] !== "boolean") {
    const parentType = "boolean";
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath: `${propertyPath}.fileIsNull`,
    });
  }
  result["fileIsNull"] = value["fileIsNull"] ?? undefined;
  if (
    !isNil(value["fileIsNotNull"]) &&
    typeof value["fileIsNotNull"] !== "boolean"
  ) {
    const parentType = "boolean";
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath: `${propertyPath}.fileIsNotNull`,
    });
  }
  result["fileIsNotNull"] = value["fileIsNotNull"] ?? undefined;
  result["parent"] = anonymousValidator1802076175(
    value["parent"],
    `${propertyPath}.parent`,
    errors,
  );
  result["parentNotEqual"] = anonymousValidator1802076175(
    value["parentNotEqual"],
    `${propertyPath}.parentNotEqual`,
    errors,
  );
  result["parentIn"] = anonymousValidator1024905514(
    value["parentIn"],
    `${propertyPath}.parentIn`,
    errors,
  );
  result["parentNotIn"] = anonymousValidator1024905514(
    value["parentNotIn"],
    `${propertyPath}.parentNotIn`,
    errors,
  );
  result["parentLike"] = anonymousValidator1802076175(
    value["parentLike"],
    `${propertyPath}.parentLike`,
    errors,
  );
  result["parentNotLike"] = anonymousValidator1802076175(
    value["parentNotLike"],
    `${propertyPath}.parentNotLike`,
    errors,
  );
  if (
    !isNil(value["parentIsNull"]) &&
    typeof value["parentIsNull"] !== "boolean"
  ) {
    const parentType = "boolean";
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath: `${propertyPath}.parentIsNull`,
    });
  }
  result["parentIsNull"] = value["parentIsNull"] ?? undefined;
  if (
    !isNil(value["parentIsNotNull"]) &&
    typeof value["parentIsNotNull"] !== "boolean"
  ) {
    const parentType = "boolean";
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath: `${propertyPath}.parentIsNotNull`,
    });
  }
  result["parentIsNotNull"] = value["parentIsNotNull"] ?? undefined;
  result["createdAt"] = anonymousValidator1988053796(
    value["createdAt"],
    `${propertyPath}.createdAt`,
    errors,
  );
  result["createdAtNotEqual"] = anonymousValidator1988053796(
    value["createdAtNotEqual"],
    `${propertyPath}.createdAtNotEqual`,
    errors,
  );
  result["createdAtIn"] = anonymousValidator978954249(
    value["createdAtIn"],
    `${propertyPath}.createdAtIn`,
    errors,
  );
  result["createdAtNotIn"] = anonymousValidator978954249(
    value["createdAtNotIn"],
    `${propertyPath}.createdAtNotIn`,
    errors,
  );
  result["createdAtGreaterThan"] = anonymousValidator1988053796(
    value["createdAtGreaterThan"],
    `${propertyPath}.createdAtGreaterThan`,
    errors,
  );
  result["createdAtLowerThan"] = anonymousValidator1988053796(
    value["createdAtLowerThan"],
    `${propertyPath}.createdAtLowerThan`,
    errors,
  );
  if (
    !isNil(value["createdAtIsNull"]) &&
    typeof value["createdAtIsNull"] !== "boolean"
  ) {
    const parentType = "boolean";
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath: `${propertyPath}.createdAtIsNull`,
    });
  }
  result["createdAtIsNull"] = value["createdAtIsNull"] ?? undefined;
  if (
    !isNil(value["createdAtIsNotNull"]) &&
    typeof value["createdAtIsNotNull"] !== "boolean"
  ) {
    const parentType = "boolean";
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath: `${propertyPath}.createdAtIsNotNull`,
    });
  }
  result["createdAtIsNotNull"] = value["createdAtIsNotNull"] ?? undefined;
  result["updatedAt"] = anonymousValidator1988053796(
    value["updatedAt"],
    `${propertyPath}.updatedAt`,
    errors,
  );
  result["updatedAtNotEqual"] = anonymousValidator1988053796(
    value["updatedAtNotEqual"],
    `${propertyPath}.updatedAtNotEqual`,
    errors,
  );
  result["updatedAtIn"] = anonymousValidator978954249(
    value["updatedAtIn"],
    `${propertyPath}.updatedAtIn`,
    errors,
  );
  result["updatedAtNotIn"] = anonymousValidator978954249(
    value["updatedAtNotIn"],
    `${propertyPath}.updatedAtNotIn`,
    errors,
  );
  result["updatedAtGreaterThan"] = anonymousValidator1988053796(
    value["updatedAtGreaterThan"],
    `${propertyPath}.updatedAtGreaterThan`,
    errors,
  );
  result["updatedAtLowerThan"] = anonymousValidator1988053796(
    value["updatedAtLowerThan"],
    `${propertyPath}.updatedAtLowerThan`,
    errors,
  );
  if (
    !isNil(value["updatedAtIsNull"]) &&
    typeof value["updatedAtIsNull"] !== "boolean"
  ) {
    const parentType = "boolean";
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath: `${propertyPath}.updatedAtIsNull`,
    });
  }
  result["updatedAtIsNull"] = value["updatedAtIsNull"] ?? undefined;
  if (
    !isNil(value["updatedAtIsNotNull"]) &&
    typeof value["updatedAtIsNotNull"] !== "boolean"
  ) {
    const parentType = "boolean";
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath: `${propertyPath}.updatedAtIsNotNull`,
    });
  }
  result["updatedAtIsNotNull"] = value["updatedAtIsNotNull"] ?? undefined;
  result["deletedAt"] = anonymousValidator1988053796(
    value["deletedAt"],
    `${propertyPath}.deletedAt`,
    errors,
  );
  result["deletedAtNotEqual"] = anonymousValidator1988053796(
    value["deletedAtNotEqual"],
    `${propertyPath}.deletedAtNotEqual`,
    errors,
  );
  result["deletedAtIn"] = anonymousValidator978954249(
    value["deletedAtIn"],
    `${propertyPath}.deletedAtIn`,
    errors,
  );
  result["deletedAtNotIn"] = anonymousValidator978954249(
    value["deletedAtNotIn"],
    `${propertyPath}.deletedAtNotIn`,
    errors,
  );
  result["deletedAtGreaterThan"] = anonymousValidator1988053796(
    value["deletedAtGreaterThan"],
    `${propertyPath}.deletedAtGreaterThan`,
    errors,
  );
  result["deletedAtLowerThan"] = anonymousValidator1988053796(
    value["deletedAtLowerThan"],
    `${propertyPath}.deletedAtLowerThan`,
    errors,
  );
  if (
    !isNil(value["deletedAtIncludeNotNull"]) &&
    typeof value["deletedAtIncludeNotNull"] !== "boolean"
  ) {
    const parentType = "boolean";
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath: `${propertyPath}.deletedAtIncludeNotNull`,
    });
  }
  result["deletedAtIncludeNotNull"] =
    value["deletedAtIncludeNotNull"] ?? undefined;
  result["childrenExists"] = anonymousValidator481156646(
    value["childrenExists"],
    `${propertyPath}.childrenExists`,
    errors,
  );
  result["childrenNotExists"] = anonymousValidator481156646(
    value["childrenNotExists"],
    `${propertyPath}.childrenNotExists`,
    errors,
  );
  return result;
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {undefined|StoreFileGroupWhere}
 */
export function anonymousValidator481156646(
  value,
  propertyPath,
  errors = [],
  parentType = "reference",
) {
  if (isNil(value)) {
    return value;
  }
  return anonymousValidator153017499(value, propertyPath, errors);
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {{"$raw"?: undefined|QueryPart<any>, "$or"?: undefined|(StoreFileWhere)[], "id"?: undefined|string, "idNotEqual"?: undefined|string, "idIn"?: undefined|(string)[]|QueryPart<any>, "idNotIn"?: undefined|(string)[]|QueryPart<any>, "idLike"?: undefined|string, "idNotLike"?: undefined|string, "bucketName"?: undefined|string, "bucketNameNotEqual"?: undefined|string, "bucketNameIn"?: undefined|(string)[]|QueryPart<any>, "bucketNameNotIn"?: undefined|(string)[]|QueryPart<any>, "bucketNameLike"?: undefined|string, "bucketNameILike"?: undefined|string, "bucketNameNotLike"?: undefined|string, "createdAt"?: undefined|Date, "createdAtNotEqual"?: undefined|Date, "createdAtIn"?: undefined|(Date)[]|QueryPart<any>, "createdAtNotIn"?: undefined|(Date)[]|QueryPart<any>, "createdAtGreaterThan"?: undefined|Date, "createdAtLowerThan"?: undefined|Date, "createdAtIsNull"?: undefined|boolean, "createdAtIsNotNull"?: undefined|boolean, "updatedAt"?: undefined|Date, "updatedAtNotEqual"?: undefined|Date, "updatedAtIn"?: undefined|(Date)[]|QueryPart<any>, "updatedAtNotIn"?: undefined|(Date)[]|QueryPart<any>, "updatedAtGreaterThan"?: undefined|Date, "updatedAtLowerThan"?: undefined|Date, "updatedAtIsNull"?: undefined|boolean, "updatedAtIsNotNull"?: undefined|boolean, "deletedAt"?: undefined|Date, "deletedAtNotEqual"?: undefined|Date, "deletedAtIn"?: undefined|(Date)[]|QueryPart<any>, "deletedAtNotIn"?: undefined|(Date)[]|QueryPart<any>, "deletedAtGreaterThan"?: undefined|Date, "deletedAtLowerThan"?: undefined|Date, "deletedAtIncludeNotNull"?: undefined|boolean, "groupExists"?: undefined|StoreFileGroupWhere, "groupNotExists"?: undefined|StoreFileGroupWhere, }}
 */
export function anonymousValidator2074494218(
  value,
  propertyPath,
  errors = [],
  parentType = "object",
) {
  if (isNil(value)) {
    throw AppError.validationError(`validator.${parentType}.undefined`, {
      propertyPath,
    });
  }
  if (typeof value !== "object") {
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath,
    });
  }
  const result = Object.create(null);
  for (const key of Object.keys(value)) {
    if (!objectKeys2074494218.has(key)) {
      throw AppError.validationError(`validator.${parentType}.strict`, {
        propertyPath,
        extraKey: key,
      });
    }
  }
  if (!isNil(value["$raw"]) && !isQueryPart(value["$raw"])) {
    const parentType = "any";
    throw AppError.validationError(`validator.${parentType}.custom`, {
      propertyPath: `${propertyPath}.$raw`,
    });
  }
  result["$raw"] = value["$raw"] ?? undefined;
  result["$or"] = anonymousValidator1804070323(
    value["$or"],
    `${propertyPath}.$or`,
    errors,
  );
  result["id"] = anonymousValidator1802076175(
    value["id"],
    `${propertyPath}.id`,
    errors,
  );
  result["idNotEqual"] = anonymousValidator1802076175(
    value["idNotEqual"],
    `${propertyPath}.idNotEqual`,
    errors,
  );
  result["idIn"] = anonymousValidator1024905514(
    value["idIn"],
    `${propertyPath}.idIn`,
    errors,
  );
  result["idNotIn"] = anonymousValidator1024905514(
    value["idNotIn"],
    `${propertyPath}.idNotIn`,
    errors,
  );
  result["idLike"] = anonymousValidator1802076175(
    value["idLike"],
    `${propertyPath}.idLike`,
    errors,
  );
  result["idNotLike"] = anonymousValidator1802076175(
    value["idNotLike"],
    `${propertyPath}.idNotLike`,
    errors,
  );
  result["bucketName"] = anonymousValidator1443576836(
    value["bucketName"],
    `${propertyPath}.bucketName`,
    errors,
  );
  result["bucketNameNotEqual"] = anonymousValidator1443576836(
    value["bucketNameNotEqual"],
    `${propertyPath}.bucketNameNotEqual`,
    errors,
  );
  result["bucketNameIn"] = anonymousValidator972289697(
    value["bucketNameIn"],
    `${propertyPath}.bucketNameIn`,
    errors,
  );
  result["bucketNameNotIn"] = anonymousValidator972289697(
    value["bucketNameNotIn"],
    `${propertyPath}.bucketNameNotIn`,
    errors,
  );
  result["bucketNameLike"] = anonymousValidator1443576836(
    value["bucketNameLike"],
    `${propertyPath}.bucketNameLike`,
    errors,
  );
  result["bucketNameILike"] = anonymousValidator1443576836(
    value["bucketNameILike"],
    `${propertyPath}.bucketNameILike`,
    errors,
  );
  result["bucketNameNotLike"] = anonymousValidator1443576836(
    value["bucketNameNotLike"],
    `${propertyPath}.bucketNameNotLike`,
    errors,
  );
  result["createdAt"] = anonymousValidator1988053796(
    value["createdAt"],
    `${propertyPath}.createdAt`,
    errors,
  );
  result["createdAtNotEqual"] = anonymousValidator1988053796(
    value["createdAtNotEqual"],
    `${propertyPath}.createdAtNotEqual`,
    errors,
  );
  result["createdAtIn"] = anonymousValidator978954249(
    value["createdAtIn"],
    `${propertyPath}.createdAtIn`,
    errors,
  );
  result["createdAtNotIn"] = anonymousValidator978954249(
    value["createdAtNotIn"],
    `${propertyPath}.createdAtNotIn`,
    errors,
  );
  result["createdAtGreaterThan"] = anonymousValidator1988053796(
    value["createdAtGreaterThan"],
    `${propertyPath}.createdAtGreaterThan`,
    errors,
  );
  result["createdAtLowerThan"] = anonymousValidator1988053796(
    value["createdAtLowerThan"],
    `${propertyPath}.createdAtLowerThan`,
    errors,
  );
  if (
    !isNil(value["createdAtIsNull"]) &&
    typeof value["createdAtIsNull"] !== "boolean"
  ) {
    const parentType = "boolean";
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath: `${propertyPath}.createdAtIsNull`,
    });
  }
  result["createdAtIsNull"] = value["createdAtIsNull"] ?? undefined;
  if (
    !isNil(value["createdAtIsNotNull"]) &&
    typeof value["createdAtIsNotNull"] !== "boolean"
  ) {
    const parentType = "boolean";
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath: `${propertyPath}.createdAtIsNotNull`,
    });
  }
  result["createdAtIsNotNull"] = value["createdAtIsNotNull"] ?? undefined;
  result["updatedAt"] = anonymousValidator1988053796(
    value["updatedAt"],
    `${propertyPath}.updatedAt`,
    errors,
  );
  result["updatedAtNotEqual"] = anonymousValidator1988053796(
    value["updatedAtNotEqual"],
    `${propertyPath}.updatedAtNotEqual`,
    errors,
  );
  result["updatedAtIn"] = anonymousValidator978954249(
    value["updatedAtIn"],
    `${propertyPath}.updatedAtIn`,
    errors,
  );
  result["updatedAtNotIn"] = anonymousValidator978954249(
    value["updatedAtNotIn"],
    `${propertyPath}.updatedAtNotIn`,
    errors,
  );
  result["updatedAtGreaterThan"] = anonymousValidator1988053796(
    value["updatedAtGreaterThan"],
    `${propertyPath}.updatedAtGreaterThan`,
    errors,
  );
  result["updatedAtLowerThan"] = anonymousValidator1988053796(
    value["updatedAtLowerThan"],
    `${propertyPath}.updatedAtLowerThan`,
    errors,
  );
  if (
    !isNil(value["updatedAtIsNull"]) &&
    typeof value["updatedAtIsNull"] !== "boolean"
  ) {
    const parentType = "boolean";
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath: `${propertyPath}.updatedAtIsNull`,
    });
  }
  result["updatedAtIsNull"] = value["updatedAtIsNull"] ?? undefined;
  if (
    !isNil(value["updatedAtIsNotNull"]) &&
    typeof value["updatedAtIsNotNull"] !== "boolean"
  ) {
    const parentType = "boolean";
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath: `${propertyPath}.updatedAtIsNotNull`,
    });
  }
  result["updatedAtIsNotNull"] = value["updatedAtIsNotNull"] ?? undefined;
  result["deletedAt"] = anonymousValidator1988053796(
    value["deletedAt"],
    `${propertyPath}.deletedAt`,
    errors,
  );
  result["deletedAtNotEqual"] = anonymousValidator1988053796(
    value["deletedAtNotEqual"],
    `${propertyPath}.deletedAtNotEqual`,
    errors,
  );
  result["deletedAtIn"] = anonymousValidator978954249(
    value["deletedAtIn"],
    `${propertyPath}.deletedAtIn`,
    errors,
  );
  result["deletedAtNotIn"] = anonymousValidator978954249(
    value["deletedAtNotIn"],
    `${propertyPath}.deletedAtNotIn`,
    errors,
  );
  result["deletedAtGreaterThan"] = anonymousValidator1988053796(
    value["deletedAtGreaterThan"],
    `${propertyPath}.deletedAtGreaterThan`,
    errors,
  );
  result["deletedAtLowerThan"] = anonymousValidator1988053796(
    value["deletedAtLowerThan"],
    `${propertyPath}.deletedAtLowerThan`,
    errors,
  );
  if (
    !isNil(value["deletedAtIncludeNotNull"]) &&
    typeof value["deletedAtIncludeNotNull"] !== "boolean"
  ) {
    const parentType = "boolean";
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath: `${propertyPath}.deletedAtIncludeNotNull`,
    });
  }
  result["deletedAtIncludeNotNull"] =
    value["deletedAtIncludeNotNull"] ?? undefined;
  result["groupExists"] = anonymousValidator481156646(
    value["groupExists"],
    `${propertyPath}.groupExists`,
    errors,
  );
  result["groupNotExists"] = anonymousValidator481156646(
    value["groupNotExists"],
    `${propertyPath}.groupNotExists`,
    errors,
  );
  return result;
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {undefined|(StoreJobWhere)[]}
 */
export function anonymousValidator807003800(
  value,
  propertyPath,
  errors = [],
  parentType = "array",
) {
  if (isNil(value)) {
    return value;
  }
  if (!Array.isArray(value)) {
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath,
    });
  }
  const result = Array.from({ length: value.length });
  for (let i = 0; i < value.length; ++i) {
    result[i] = anonymousValidator1257773835(
      value[i],
      `${propertyPath}[${i}]`,
      errors,
    );
  }
  return result;
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {undefined|number}
 */
export function anonymousValidator1108665246(
  value,
  propertyPath,
  errors = [],
  parentType = "number",
) {
  if (isNil(value)) {
    return value;
  }
  if (typeof value !== "number") {
    value = Number(value);
  }
  if (typeof value !== "number" || isNaN(value) || !isFinite(value)) {
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath,
    });
  }
  if (!Number.isInteger(value)) {
    throw AppError.validationError(`validator.${parentType}.integer`, {
      propertyPath,
    });
  }
  if (value < -2147483647) {
    const min = -2147483647;
    throw AppError.validationError(`validator.${parentType}.min`, {
      propertyPath,
      min,
    });
  }
  if (value > 2147483647) {
    const max = 2147483647;
    throw AppError.validationError(`validator.${parentType}.max`, {
      propertyPath,
      max,
    });
  }
  return value;
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {undefined|(number)[]}
 */
export function anonymousValidator1033385158(
  value,
  propertyPath,
  errors = [],
  parentType = "array",
) {
  if (isNil(value)) {
    return value;
  }
  if (!Array.isArray(value)) {
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath,
    });
  }
  const result = Array.from({ length: value.length });
  for (let i = 0; i < value.length; ++i) {
    result[i] = anonymousValidator1483765921(
      value[i],
      `${propertyPath}[${i}]`,
      errors,
    );
  }
  return result;
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {undefined|(number)[]|QueryPart<any>}
 */
export function anonymousValidator1971955962(
  value,
  propertyPath,
  errors = [],
  parentType = "anyOf",
) {
  if (isNil(value)) {
    return value;
  }
  const subErrors = [];
  try {
    return anonymousValidator1033385158(value, propertyPath, subErrors);
  } catch (e) {
    delete e.stack;
    subErrors.push(e);
  }
  try {
    if (!isNil(value) && !isQueryPart(value)) {
      const parentType = "any";
      throw AppError.validationError(`validator.${parentType}.custom`, {
        propertyPath: propertyPath,
      });
    }
    return value ?? undefined;
  } catch (e) {
    delete e.stack;
    subErrors.push(e);
  }
  throw AppError.validationError(`validator.${parentType}.type`, {
    propertyPath,
    errors: subErrors,
  });
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {{"$raw"?: undefined|QueryPart<any>, "$or"?: undefined|(StoreJobWhere)[], "id"?: undefined|number, "idNotEqual"?: undefined|number, "idIn"?: undefined|(number)[]|QueryPart<any>, "idNotIn"?: undefined|(number)[]|QueryPart<any>, "idGreaterThan"?: undefined|number, "idLowerThan"?: undefined|number, "isComplete"?: undefined|boolean, "isCompleteIsNull"?: undefined|boolean, "isCompleteIsNotNull"?: undefined|boolean, "name"?: undefined|string, "nameNotEqual"?: undefined|string, "nameIn"?: undefined|(string)[]|QueryPart<any>, "nameNotIn"?: undefined|(string)[]|QueryPart<any>, "nameLike"?: undefined|string, "nameILike"?: undefined|string, "nameNotLike"?: undefined|string, "scheduledAt"?: undefined|Date, "scheduledAtNotEqual"?: undefined|Date, "scheduledAtIn"?: undefined|(Date)[]|QueryPart<any>, "scheduledAtNotIn"?: undefined|(Date)[]|QueryPart<any>, "scheduledAtGreaterThan"?: undefined|Date, "scheduledAtLowerThan"?: undefined|Date, "scheduledAtIsNull"?: undefined|boolean, "scheduledAtIsNotNull"?: undefined|boolean, "createdAt"?: undefined|Date, "createdAtNotEqual"?: undefined|Date, "createdAtIn"?: undefined|(Date)[]|QueryPart<any>, "createdAtNotIn"?: undefined|(Date)[]|QueryPart<any>, "createdAtGreaterThan"?: undefined|Date, "createdAtLowerThan"?: undefined|Date, "createdAtIsNull"?: undefined|boolean, "createdAtIsNotNull"?: undefined|boolean, "updatedAt"?: undefined|Date, "updatedAtNotEqual"?: undefined|Date, "updatedAtIn"?: undefined|(Date)[]|QueryPart<any>, "updatedAtNotIn"?: undefined|(Date)[]|QueryPart<any>, "updatedAtGreaterThan"?: undefined|Date, "updatedAtLowerThan"?: undefined|Date, "updatedAtIsNull"?: undefined|boolean, "updatedAtIsNotNull"?: undefined|boolean, }}
 */
export function anonymousValidator1257773835(
  value,
  propertyPath,
  errors = [],
  parentType = "object",
) {
  if (isNil(value)) {
    throw AppError.validationError(`validator.${parentType}.undefined`, {
      propertyPath,
    });
  }
  if (typeof value !== "object") {
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath,
    });
  }
  const result = Object.create(null);
  for (const key of Object.keys(value)) {
    if (!objectKeys1257773835.has(key)) {
      throw AppError.validationError(`validator.${parentType}.strict`, {
        propertyPath,
        extraKey: key,
      });
    }
  }
  if (!isNil(value["$raw"]) && !isQueryPart(value["$raw"])) {
    const parentType = "any";
    throw AppError.validationError(`validator.${parentType}.custom`, {
      propertyPath: `${propertyPath}.$raw`,
    });
  }
  result["$raw"] = value["$raw"] ?? undefined;
  result["$or"] = anonymousValidator807003800(
    value["$or"],
    `${propertyPath}.$or`,
    errors,
  );
  result["id"] = anonymousValidator1108665246(
    value["id"],
    `${propertyPath}.id`,
    errors,
  );
  result["idNotEqual"] = anonymousValidator1108665246(
    value["idNotEqual"],
    `${propertyPath}.idNotEqual`,
    errors,
  );
  result["idIn"] = anonymousValidator1971955962(
    value["idIn"],
    `${propertyPath}.idIn`,
    errors,
  );
  result["idNotIn"] = anonymousValidator1971955962(
    value["idNotIn"],
    `${propertyPath}.idNotIn`,
    errors,
  );
  result["idGreaterThan"] = anonymousValidator1108665246(
    value["idGreaterThan"],
    `${propertyPath}.idGreaterThan`,
    errors,
  );
  result["idLowerThan"] = anonymousValidator1108665246(
    value["idLowerThan"],
    `${propertyPath}.idLowerThan`,
    errors,
  );
  if (!isNil(value["isComplete"]) && typeof value["isComplete"] !== "boolean") {
    const parentType = "boolean";
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath: `${propertyPath}.isComplete`,
    });
  }
  result["isComplete"] = value["isComplete"] ?? undefined;
  if (
    !isNil(value["isCompleteIsNull"]) &&
    typeof value["isCompleteIsNull"] !== "boolean"
  ) {
    const parentType = "boolean";
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath: `${propertyPath}.isCompleteIsNull`,
    });
  }
  result["isCompleteIsNull"] = value["isCompleteIsNull"] ?? undefined;
  if (
    !isNil(value["isCompleteIsNotNull"]) &&
    typeof value["isCompleteIsNotNull"] !== "boolean"
  ) {
    const parentType = "boolean";
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath: `${propertyPath}.isCompleteIsNotNull`,
    });
  }
  result["isCompleteIsNotNull"] = value["isCompleteIsNotNull"] ?? undefined;
  result["name"] = anonymousValidator1443576836(
    value["name"],
    `${propertyPath}.name`,
    errors,
  );
  result["nameNotEqual"] = anonymousValidator1443576836(
    value["nameNotEqual"],
    `${propertyPath}.nameNotEqual`,
    errors,
  );
  result["nameIn"] = anonymousValidator972289697(
    value["nameIn"],
    `${propertyPath}.nameIn`,
    errors,
  );
  result["nameNotIn"] = anonymousValidator972289697(
    value["nameNotIn"],
    `${propertyPath}.nameNotIn`,
    errors,
  );
  result["nameLike"] = anonymousValidator1443576836(
    value["nameLike"],
    `${propertyPath}.nameLike`,
    errors,
  );
  result["nameILike"] = anonymousValidator1443576836(
    value["nameILike"],
    `${propertyPath}.nameILike`,
    errors,
  );
  result["nameNotLike"] = anonymousValidator1443576836(
    value["nameNotLike"],
    `${propertyPath}.nameNotLike`,
    errors,
  );
  result["scheduledAt"] = anonymousValidator1988053796(
    value["scheduledAt"],
    `${propertyPath}.scheduledAt`,
    errors,
  );
  result["scheduledAtNotEqual"] = anonymousValidator1988053796(
    value["scheduledAtNotEqual"],
    `${propertyPath}.scheduledAtNotEqual`,
    errors,
  );
  result["scheduledAtIn"] = anonymousValidator978954249(
    value["scheduledAtIn"],
    `${propertyPath}.scheduledAtIn`,
    errors,
  );
  result["scheduledAtNotIn"] = anonymousValidator978954249(
    value["scheduledAtNotIn"],
    `${propertyPath}.scheduledAtNotIn`,
    errors,
  );
  result["scheduledAtGreaterThan"] = anonymousValidator1988053796(
    value["scheduledAtGreaterThan"],
    `${propertyPath}.scheduledAtGreaterThan`,
    errors,
  );
  result["scheduledAtLowerThan"] = anonymousValidator1988053796(
    value["scheduledAtLowerThan"],
    `${propertyPath}.scheduledAtLowerThan`,
    errors,
  );
  if (
    !isNil(value["scheduledAtIsNull"]) &&
    typeof value["scheduledAtIsNull"] !== "boolean"
  ) {
    const parentType = "boolean";
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath: `${propertyPath}.scheduledAtIsNull`,
    });
  }
  result["scheduledAtIsNull"] = value["scheduledAtIsNull"] ?? undefined;
  if (
    !isNil(value["scheduledAtIsNotNull"]) &&
    typeof value["scheduledAtIsNotNull"] !== "boolean"
  ) {
    const parentType = "boolean";
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath: `${propertyPath}.scheduledAtIsNotNull`,
    });
  }
  result["scheduledAtIsNotNull"] = value["scheduledAtIsNotNull"] ?? undefined;
  result["createdAt"] = anonymousValidator1988053796(
    value["createdAt"],
    `${propertyPath}.createdAt`,
    errors,
  );
  result["createdAtNotEqual"] = anonymousValidator1988053796(
    value["createdAtNotEqual"],
    `${propertyPath}.createdAtNotEqual`,
    errors,
  );
  result["createdAtIn"] = anonymousValidator978954249(
    value["createdAtIn"],
    `${propertyPath}.createdAtIn`,
    errors,
  );
  result["createdAtNotIn"] = anonymousValidator978954249(
    value["createdAtNotIn"],
    `${propertyPath}.createdAtNotIn`,
    errors,
  );
  result["createdAtGreaterThan"] = anonymousValidator1988053796(
    value["createdAtGreaterThan"],
    `${propertyPath}.createdAtGreaterThan`,
    errors,
  );
  result["createdAtLowerThan"] = anonymousValidator1988053796(
    value["createdAtLowerThan"],
    `${propertyPath}.createdAtLowerThan`,
    errors,
  );
  if (
    !isNil(value["createdAtIsNull"]) &&
    typeof value["createdAtIsNull"] !== "boolean"
  ) {
    const parentType = "boolean";
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath: `${propertyPath}.createdAtIsNull`,
    });
  }
  result["createdAtIsNull"] = value["createdAtIsNull"] ?? undefined;
  if (
    !isNil(value["createdAtIsNotNull"]) &&
    typeof value["createdAtIsNotNull"] !== "boolean"
  ) {
    const parentType = "boolean";
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath: `${propertyPath}.createdAtIsNotNull`,
    });
  }
  result["createdAtIsNotNull"] = value["createdAtIsNotNull"] ?? undefined;
  result["updatedAt"] = anonymousValidator1988053796(
    value["updatedAt"],
    `${propertyPath}.updatedAt`,
    errors,
  );
  result["updatedAtNotEqual"] = anonymousValidator1988053796(
    value["updatedAtNotEqual"],
    `${propertyPath}.updatedAtNotEqual`,
    errors,
  );
  result["updatedAtIn"] = anonymousValidator978954249(
    value["updatedAtIn"],
    `${propertyPath}.updatedAtIn`,
    errors,
  );
  result["updatedAtNotIn"] = anonymousValidator978954249(
    value["updatedAtNotIn"],
    `${propertyPath}.updatedAtNotIn`,
    errors,
  );
  result["updatedAtGreaterThan"] = anonymousValidator1988053796(
    value["updatedAtGreaterThan"],
    `${propertyPath}.updatedAtGreaterThan`,
    errors,
  );
  result["updatedAtLowerThan"] = anonymousValidator1988053796(
    value["updatedAtLowerThan"],
    `${propertyPath}.updatedAtLowerThan`,
    errors,
  );
  if (
    !isNil(value["updatedAtIsNull"]) &&
    typeof value["updatedAtIsNull"] !== "boolean"
  ) {
    const parentType = "boolean";
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath: `${propertyPath}.updatedAtIsNull`,
    });
  }
  result["updatedAtIsNull"] = value["updatedAtIsNull"] ?? undefined;
  if (
    !isNil(value["updatedAtIsNotNull"]) &&
    typeof value["updatedAtIsNotNull"] !== "boolean"
  ) {
    const parentType = "boolean";
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath: `${propertyPath}.updatedAtIsNotNull`,
    });
  }
  result["updatedAtIsNotNull"] = value["updatedAtIsNotNull"] ?? undefined;
  return result;
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {undefined|(StoreSessionWhere)[]}
 */
export function anonymousValidator688866095(
  value,
  propertyPath,
  errors = [],
  parentType = "array",
) {
  if (isNil(value)) {
    return value;
  }
  if (!Array.isArray(value)) {
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath,
    });
  }
  const result = Array.from({ length: value.length });
  for (let i = 0; i < value.length; ++i) {
    result[i] = anonymousValidator500057262(
      value[i],
      `${propertyPath}[${i}]`,
      errors,
    );
  }
  return result;
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {{"$raw"?: undefined|QueryPart<any>, "$or"?: undefined|(StoreSessionWhere)[], "id"?: undefined|string, "idNotEqual"?: undefined|string, "idIn"?: undefined|(string)[]|QueryPart<any>, "idNotIn"?: undefined|(string)[]|QueryPart<any>, "idLike"?: undefined|string, "idNotLike"?: undefined|string, "expires"?: undefined|Date, "expiresNotEqual"?: undefined|Date, "expiresIn"?: undefined|(Date)[]|QueryPart<any>, "expiresNotIn"?: undefined|(Date)[]|QueryPart<any>, "expiresGreaterThan"?: undefined|Date, "expiresLowerThan"?: undefined|Date, "createdAt"?: undefined|Date, "createdAtNotEqual"?: undefined|Date, "createdAtIn"?: undefined|(Date)[]|QueryPart<any>, "createdAtNotIn"?: undefined|(Date)[]|QueryPart<any>, "createdAtGreaterThan"?: undefined|Date, "createdAtLowerThan"?: undefined|Date, "createdAtIsNull"?: undefined|boolean, "createdAtIsNotNull"?: undefined|boolean, "updatedAt"?: undefined|Date, "updatedAtNotEqual"?: undefined|Date, "updatedAtIn"?: undefined|(Date)[]|QueryPart<any>, "updatedAtNotIn"?: undefined|(Date)[]|QueryPart<any>, "updatedAtGreaterThan"?: undefined|Date, "updatedAtLowerThan"?: undefined|Date, "updatedAtIsNull"?: undefined|boolean, "updatedAtIsNotNull"?: undefined|boolean, }}
 */
export function anonymousValidator500057262(
  value,
  propertyPath,
  errors = [],
  parentType = "object",
) {
  if (isNil(value)) {
    throw AppError.validationError(`validator.${parentType}.undefined`, {
      propertyPath,
    });
  }
  if (typeof value !== "object") {
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath,
    });
  }
  const result = Object.create(null);
  for (const key of Object.keys(value)) {
    if (!objectKeys500057262.has(key)) {
      throw AppError.validationError(`validator.${parentType}.strict`, {
        propertyPath,
        extraKey: key,
      });
    }
  }
  if (!isNil(value["$raw"]) && !isQueryPart(value["$raw"])) {
    const parentType = "any";
    throw AppError.validationError(`validator.${parentType}.custom`, {
      propertyPath: `${propertyPath}.$raw`,
    });
  }
  result["$raw"] = value["$raw"] ?? undefined;
  result["$or"] = anonymousValidator688866095(
    value["$or"],
    `${propertyPath}.$or`,
    errors,
  );
  result["id"] = anonymousValidator1802076175(
    value["id"],
    `${propertyPath}.id`,
    errors,
  );
  result["idNotEqual"] = anonymousValidator1802076175(
    value["idNotEqual"],
    `${propertyPath}.idNotEqual`,
    errors,
  );
  result["idIn"] = anonymousValidator1024905514(
    value["idIn"],
    `${propertyPath}.idIn`,
    errors,
  );
  result["idNotIn"] = anonymousValidator1024905514(
    value["idNotIn"],
    `${propertyPath}.idNotIn`,
    errors,
  );
  result["idLike"] = anonymousValidator1802076175(
    value["idLike"],
    `${propertyPath}.idLike`,
    errors,
  );
  result["idNotLike"] = anonymousValidator1802076175(
    value["idNotLike"],
    `${propertyPath}.idNotLike`,
    errors,
  );
  result["expires"] = anonymousValidator1988053796(
    value["expires"],
    `${propertyPath}.expires`,
    errors,
  );
  result["expiresNotEqual"] = anonymousValidator1988053796(
    value["expiresNotEqual"],
    `${propertyPath}.expiresNotEqual`,
    errors,
  );
  result["expiresIn"] = anonymousValidator978954249(
    value["expiresIn"],
    `${propertyPath}.expiresIn`,
    errors,
  );
  result["expiresNotIn"] = anonymousValidator978954249(
    value["expiresNotIn"],
    `${propertyPath}.expiresNotIn`,
    errors,
  );
  result["expiresGreaterThan"] = anonymousValidator1988053796(
    value["expiresGreaterThan"],
    `${propertyPath}.expiresGreaterThan`,
    errors,
  );
  result["expiresLowerThan"] = anonymousValidator1988053796(
    value["expiresLowerThan"],
    `${propertyPath}.expiresLowerThan`,
    errors,
  );
  result["createdAt"] = anonymousValidator1988053796(
    value["createdAt"],
    `${propertyPath}.createdAt`,
    errors,
  );
  result["createdAtNotEqual"] = anonymousValidator1988053796(
    value["createdAtNotEqual"],
    `${propertyPath}.createdAtNotEqual`,
    errors,
  );
  result["createdAtIn"] = anonymousValidator978954249(
    value["createdAtIn"],
    `${propertyPath}.createdAtIn`,
    errors,
  );
  result["createdAtNotIn"] = anonymousValidator978954249(
    value["createdAtNotIn"],
    `${propertyPath}.createdAtNotIn`,
    errors,
  );
  result["createdAtGreaterThan"] = anonymousValidator1988053796(
    value["createdAtGreaterThan"],
    `${propertyPath}.createdAtGreaterThan`,
    errors,
  );
  result["createdAtLowerThan"] = anonymousValidator1988053796(
    value["createdAtLowerThan"],
    `${propertyPath}.createdAtLowerThan`,
    errors,
  );
  if (
    !isNil(value["createdAtIsNull"]) &&
    typeof value["createdAtIsNull"] !== "boolean"
  ) {
    const parentType = "boolean";
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath: `${propertyPath}.createdAtIsNull`,
    });
  }
  result["createdAtIsNull"] = value["createdAtIsNull"] ?? undefined;
  if (
    !isNil(value["createdAtIsNotNull"]) &&
    typeof value["createdAtIsNotNull"] !== "boolean"
  ) {
    const parentType = "boolean";
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath: `${propertyPath}.createdAtIsNotNull`,
    });
  }
  result["createdAtIsNotNull"] = value["createdAtIsNotNull"] ?? undefined;
  result["updatedAt"] = anonymousValidator1988053796(
    value["updatedAt"],
    `${propertyPath}.updatedAt`,
    errors,
  );
  result["updatedAtNotEqual"] = anonymousValidator1988053796(
    value["updatedAtNotEqual"],
    `${propertyPath}.updatedAtNotEqual`,
    errors,
  );
  result["updatedAtIn"] = anonymousValidator978954249(
    value["updatedAtIn"],
    `${propertyPath}.updatedAtIn`,
    errors,
  );
  result["updatedAtNotIn"] = anonymousValidator978954249(
    value["updatedAtNotIn"],
    `${propertyPath}.updatedAtNotIn`,
    errors,
  );
  result["updatedAtGreaterThan"] = anonymousValidator1988053796(
    value["updatedAtGreaterThan"],
    `${propertyPath}.updatedAtGreaterThan`,
    errors,
  );
  result["updatedAtLowerThan"] = anonymousValidator1988053796(
    value["updatedAtLowerThan"],
    `${propertyPath}.updatedAtLowerThan`,
    errors,
  );
  if (
    !isNil(value["updatedAtIsNull"]) &&
    typeof value["updatedAtIsNull"] !== "boolean"
  ) {
    const parentType = "boolean";
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath: `${propertyPath}.updatedAtIsNull`,
    });
  }
  result["updatedAtIsNull"] = value["updatedAtIsNull"] ?? undefined;
  if (
    !isNil(value["updatedAtIsNotNull"]) &&
    typeof value["updatedAtIsNotNull"] !== "boolean"
  ) {
    const parentType = "boolean";
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath: `${propertyPath}.updatedAtIsNotNull`,
    });
  }
  result["updatedAtIsNotNull"] = value["updatedAtIsNotNull"] ?? undefined;
  return result;
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {("id"|"bucketName"|"createdAt"|"updatedAt"|"deletedAt")[]}
 */
export function anonymousValidator757309139(
  value,
  propertyPath,
  errors = [],
  parentType = "array",
) {
  if (isNil(value)) {
    throw AppError.validationError(`validator.${parentType}.undefined`, {
      propertyPath,
    });
  }
  if (!Array.isArray(value)) {
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath,
    });
  }
  const result = Array.from({ length: value.length });
  for (let i = 0; i < value.length; ++i) {
    if (
      value[i] !== "id" &&
      value[i] !== "bucketName" &&
      value[i] !== "createdAt" &&
      value[i] !== "updatedAt" &&
      value[i] !== "deletedAt"
    ) {
      const parentType = "string";
      const oneOf = ["id", "bucketName", "createdAt", "updatedAt", "deletedAt"];
      throw AppError.validationError(`validator.${parentType}.oneOf`, {
        propertyPath: `${propertyPath}[${i}]`,
        oneOf,
      });
    }
    result[i] = value[i] ?? undefined;
  }
  return result;
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {QueryPart<any>|("id"|"bucketName"|"createdAt"|"updatedAt"|"deletedAt")[]}
 */
export function anonymousValidator1795948632(
  value,
  propertyPath,
  errors = [],
  parentType = "anyOf",
) {
  if (isNil(value)) {
    throw AppError.validationError(`validator.${parentType}.undefined`, {
      propertyPath,
    });
  }
  const subErrors = [];
  try {
    if (isNil(value) || !isQueryPart(value)) {
      const parentType = "any";
      throw AppError.validationError(`validator.${parentType}.custom`, {
        propertyPath: propertyPath,
      });
    }
    return value ?? undefined;
  } catch (e) {
    delete e.stack;
    subErrors.push(e);
  }
  try {
    return anonymousValidator757309139(value, propertyPath, subErrors);
  } catch (e) {
    delete e.stack;
    subErrors.push(e);
  }
  throw AppError.validationError(`validator.${parentType}.type`, {
    propertyPath,
    errors: subErrors,
  });
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {undefined|CompasSqlOrderBy}
 */
export function anonymousValidator20803901(
  value,
  propertyPath,
  errors = [],
  parentType = "reference",
) {
  if (isNil(value)) {
    return value;
  }
  if (value !== "ASC" && value !== "DESC") {
    const parentType = "string";
    const oneOf = ["ASC", "DESC"];
    throw AppError.validationError(`validator.${parentType}.oneOf`, {
      propertyPath: propertyPath,
      oneOf,
    });
  }
  return value ?? undefined;
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {undefined|CompasSqlOrderByOptionalField}
 */
export function anonymousValidator198346889(
  value,
  propertyPath,
  errors = [],
  parentType = "reference",
) {
  if (isNil(value)) {
    return value;
  }
  if (
    value !== "ASC" &&
    value !== "DESC" &&
    value !== "ASC NULLS FIRST" &&
    value !== "DESC NULLS LAST"
  ) {
    const parentType = "string";
    const oneOf = ["ASC", "DESC", "ASC NULLS FIRST", "DESC NULLS LAST"];
    throw AppError.validationError(`validator.${parentType}.oneOf`, {
      propertyPath: propertyPath,
      oneOf,
    });
  }
  return value ?? undefined;
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {{"id"?: undefined|CompasSqlOrderBy, "bucketName"?: undefined|CompasSqlOrderBy, "createdAt"?: undefined|CompasSqlOrderBy, "updatedAt"?: undefined|CompasSqlOrderBy, "deletedAt"?: undefined|CompasSqlOrderByOptionalField, }}
 */
export function anonymousValidator163358845(
  value,
  propertyPath,
  errors = [],
  parentType = "object",
) {
  if (isNil(value)) {
    throw AppError.validationError(`validator.${parentType}.undefined`, {
      propertyPath,
    });
  }
  if (typeof value !== "object") {
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath,
    });
  }
  const result = Object.create(null);
  for (const key of Object.keys(value)) {
    if (!objectKeys163358845.has(key)) {
      throw AppError.validationError(`validator.${parentType}.strict`, {
        propertyPath,
        extraKey: key,
      });
    }
  }
  result["id"] = anonymousValidator20803901(
    value["id"],
    `${propertyPath}.id`,
    errors,
  );
  result["bucketName"] = anonymousValidator20803901(
    value["bucketName"],
    `${propertyPath}.bucketName`,
    errors,
  );
  result["createdAt"] = anonymousValidator20803901(
    value["createdAt"],
    `${propertyPath}.createdAt`,
    errors,
  );
  result["updatedAt"] = anonymousValidator20803901(
    value["updatedAt"],
    `${propertyPath}.updatedAt`,
    errors,
  );
  result["deletedAt"] = anonymousValidator198346889(
    value["deletedAt"],
    `${propertyPath}.deletedAt`,
    errors,
  );
  return result;
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {("id"|"order"|"file"|"parent"|"createdAt"|"updatedAt"|"deletedAt")[]}
 */
export function anonymousValidator938090836(
  value,
  propertyPath,
  errors = [],
  parentType = "array",
) {
  if (isNil(value)) {
    throw AppError.validationError(`validator.${parentType}.undefined`, {
      propertyPath,
    });
  }
  if (!Array.isArray(value)) {
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath,
    });
  }
  const result = Array.from({ length: value.length });
  for (let i = 0; i < value.length; ++i) {
    if (
      value[i] !== "id" &&
      value[i] !== "order" &&
      value[i] !== "file" &&
      value[i] !== "parent" &&
      value[i] !== "createdAt" &&
      value[i] !== "updatedAt" &&
      value[i] !== "deletedAt"
    ) {
      const parentType = "string";
      const oneOf = [
        "id",
        "order",
        "file",
        "parent",
        "createdAt",
        "updatedAt",
        "deletedAt",
      ];
      throw AppError.validationError(`validator.${parentType}.oneOf`, {
        propertyPath: `${propertyPath}[${i}]`,
        oneOf,
      });
    }
    result[i] = value[i] ?? undefined;
  }
  return result;
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {QueryPart<any>|("id"|"order"|"file"|"parent"|"createdAt"|"updatedAt"|"deletedAt")[]}
 */
export function anonymousValidator753972035(
  value,
  propertyPath,
  errors = [],
  parentType = "anyOf",
) {
  if (isNil(value)) {
    throw AppError.validationError(`validator.${parentType}.undefined`, {
      propertyPath,
    });
  }
  const subErrors = [];
  try {
    if (isNil(value) || !isQueryPart(value)) {
      const parentType = "any";
      throw AppError.validationError(`validator.${parentType}.custom`, {
        propertyPath: propertyPath,
      });
    }
    return value ?? undefined;
  } catch (e) {
    delete e.stack;
    subErrors.push(e);
  }
  try {
    return anonymousValidator938090836(value, propertyPath, subErrors);
  } catch (e) {
    delete e.stack;
    subErrors.push(e);
  }
  throw AppError.validationError(`validator.${parentType}.type`, {
    propertyPath,
    errors: subErrors,
  });
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {{"id"?: undefined|CompasSqlOrderBy, "order"?: undefined|CompasSqlOrderByOptionalField, "file"?: undefined|CompasSqlOrderByOptionalField, "parent"?: undefined|CompasSqlOrderByOptionalField, "createdAt"?: undefined|CompasSqlOrderBy, "updatedAt"?: undefined|CompasSqlOrderBy, "deletedAt"?: undefined|CompasSqlOrderByOptionalField, }}
 */
export function anonymousValidator322356638(
  value,
  propertyPath,
  errors = [],
  parentType = "object",
) {
  if (isNil(value)) {
    throw AppError.validationError(`validator.${parentType}.undefined`, {
      propertyPath,
    });
  }
  if (typeof value !== "object") {
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath,
    });
  }
  const result = Object.create(null);
  for (const key of Object.keys(value)) {
    if (!objectKeys322356638.has(key)) {
      throw AppError.validationError(`validator.${parentType}.strict`, {
        propertyPath,
        extraKey: key,
      });
    }
  }
  result["id"] = anonymousValidator20803901(
    value["id"],
    `${propertyPath}.id`,
    errors,
  );
  result["order"] = anonymousValidator198346889(
    value["order"],
    `${propertyPath}.order`,
    errors,
  );
  result["file"] = anonymousValidator198346889(
    value["file"],
    `${propertyPath}.file`,
    errors,
  );
  result["parent"] = anonymousValidator198346889(
    value["parent"],
    `${propertyPath}.parent`,
    errors,
  );
  result["createdAt"] = anonymousValidator20803901(
    value["createdAt"],
    `${propertyPath}.createdAt`,
    errors,
  );
  result["updatedAt"] = anonymousValidator20803901(
    value["updatedAt"],
    `${propertyPath}.updatedAt`,
    errors,
  );
  result["deletedAt"] = anonymousValidator198346889(
    value["deletedAt"],
    `${propertyPath}.deletedAt`,
    errors,
  );
  return result;
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {("id"|"isComplete"|"name"|"scheduledAt"|"createdAt"|"updatedAt")[]}
 */
export function anonymousValidator1693224812(
  value,
  propertyPath,
  errors = [],
  parentType = "array",
) {
  if (isNil(value)) {
    throw AppError.validationError(`validator.${parentType}.undefined`, {
      propertyPath,
    });
  }
  if (!Array.isArray(value)) {
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath,
    });
  }
  const result = Array.from({ length: value.length });
  for (let i = 0; i < value.length; ++i) {
    if (
      value[i] !== "id" &&
      value[i] !== "isComplete" &&
      value[i] !== "name" &&
      value[i] !== "scheduledAt" &&
      value[i] !== "createdAt" &&
      value[i] !== "updatedAt"
    ) {
      const parentType = "string";
      const oneOf = [
        "id",
        "isComplete",
        "name",
        "scheduledAt",
        "createdAt",
        "updatedAt",
      ];
      throw AppError.validationError(`validator.${parentType}.oneOf`, {
        propertyPath: `${propertyPath}[${i}]`,
        oneOf,
      });
    }
    result[i] = value[i] ?? undefined;
  }
  return result;
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {QueryPart<any>|("id"|"isComplete"|"name"|"scheduledAt"|"createdAt"|"updatedAt")[]}
 */
export function anonymousValidator685221527(
  value,
  propertyPath,
  errors = [],
  parentType = "anyOf",
) {
  if (isNil(value)) {
    throw AppError.validationError(`validator.${parentType}.undefined`, {
      propertyPath,
    });
  }
  const subErrors = [];
  try {
    if (isNil(value) || !isQueryPart(value)) {
      const parentType = "any";
      throw AppError.validationError(`validator.${parentType}.custom`, {
        propertyPath: propertyPath,
      });
    }
    return value ?? undefined;
  } catch (e) {
    delete e.stack;
    subErrors.push(e);
  }
  try {
    return anonymousValidator1693224812(value, propertyPath, subErrors);
  } catch (e) {
    delete e.stack;
    subErrors.push(e);
  }
  throw AppError.validationError(`validator.${parentType}.type`, {
    propertyPath,
    errors: subErrors,
  });
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {{"id"?: undefined|CompasSqlOrderBy, "isComplete"?: undefined|CompasSqlOrderByOptionalField, "name"?: undefined|CompasSqlOrderBy, "scheduledAt"?: undefined|CompasSqlOrderByOptionalField, "createdAt"?: undefined|CompasSqlOrderBy, "updatedAt"?: undefined|CompasSqlOrderBy, }}
 */
export function anonymousValidator280827708(
  value,
  propertyPath,
  errors = [],
  parentType = "object",
) {
  if (isNil(value)) {
    throw AppError.validationError(`validator.${parentType}.undefined`, {
      propertyPath,
    });
  }
  if (typeof value !== "object") {
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath,
    });
  }
  const result = Object.create(null);
  for (const key of Object.keys(value)) {
    if (!objectKeys280827708.has(key)) {
      throw AppError.validationError(`validator.${parentType}.strict`, {
        propertyPath,
        extraKey: key,
      });
    }
  }
  result["id"] = anonymousValidator20803901(
    value["id"],
    `${propertyPath}.id`,
    errors,
  );
  result["isComplete"] = anonymousValidator198346889(
    value["isComplete"],
    `${propertyPath}.isComplete`,
    errors,
  );
  result["name"] = anonymousValidator20803901(
    value["name"],
    `${propertyPath}.name`,
    errors,
  );
  result["scheduledAt"] = anonymousValidator198346889(
    value["scheduledAt"],
    `${propertyPath}.scheduledAt`,
    errors,
  );
  result["createdAt"] = anonymousValidator20803901(
    value["createdAt"],
    `${propertyPath}.createdAt`,
    errors,
  );
  result["updatedAt"] = anonymousValidator20803901(
    value["updatedAt"],
    `${propertyPath}.updatedAt`,
    errors,
  );
  return result;
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {("id"|"expires"|"createdAt"|"updatedAt")[]}
 */
export function anonymousValidator196705720(
  value,
  propertyPath,
  errors = [],
  parentType = "array",
) {
  if (isNil(value)) {
    throw AppError.validationError(`validator.${parentType}.undefined`, {
      propertyPath,
    });
  }
  if (!Array.isArray(value)) {
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath,
    });
  }
  const result = Array.from({ length: value.length });
  for (let i = 0; i < value.length; ++i) {
    if (
      value[i] !== "id" &&
      value[i] !== "expires" &&
      value[i] !== "createdAt" &&
      value[i] !== "updatedAt"
    ) {
      const parentType = "string";
      const oneOf = ["id", "expires", "createdAt", "updatedAt"];
      throw AppError.validationError(`validator.${parentType}.oneOf`, {
        propertyPath: `${propertyPath}[${i}]`,
        oneOf,
      });
    }
    result[i] = value[i] ?? undefined;
  }
  return result;
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {QueryPart<any>|("id"|"expires"|"createdAt"|"updatedAt")[]}
 */
export function anonymousValidator2038758416(
  value,
  propertyPath,
  errors = [],
  parentType = "anyOf",
) {
  if (isNil(value)) {
    throw AppError.validationError(`validator.${parentType}.undefined`, {
      propertyPath,
    });
  }
  const subErrors = [];
  try {
    if (isNil(value) || !isQueryPart(value)) {
      const parentType = "any";
      throw AppError.validationError(`validator.${parentType}.custom`, {
        propertyPath: propertyPath,
      });
    }
    return value ?? undefined;
  } catch (e) {
    delete e.stack;
    subErrors.push(e);
  }
  try {
    return anonymousValidator196705720(value, propertyPath, subErrors);
  } catch (e) {
    delete e.stack;
    subErrors.push(e);
  }
  throw AppError.validationError(`validator.${parentType}.type`, {
    propertyPath,
    errors: subErrors,
  });
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {{"id"?: undefined|CompasSqlOrderBy, "expires"?: undefined|CompasSqlOrderBy, "createdAt"?: undefined|CompasSqlOrderBy, "updatedAt"?: undefined|CompasSqlOrderBy, }}
 */
export function anonymousValidator144635851(
  value,
  propertyPath,
  errors = [],
  parentType = "object",
) {
  if (isNil(value)) {
    throw AppError.validationError(`validator.${parentType}.undefined`, {
      propertyPath,
    });
  }
  if (typeof value !== "object") {
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath,
    });
  }
  const result = Object.create(null);
  for (const key of Object.keys(value)) {
    if (!objectKeys144635851.has(key)) {
      throw AppError.validationError(`validator.${parentType}.strict`, {
        propertyPath,
        extraKey: key,
      });
    }
  }
  result["id"] = anonymousValidator20803901(
    value["id"],
    `${propertyPath}.id`,
    errors,
  );
  result["expires"] = anonymousValidator20803901(
    value["expires"],
    `${propertyPath}.expires`,
    errors,
  );
  result["createdAt"] = anonymousValidator20803901(
    value["createdAt"],
    `${propertyPath}.createdAt`,
    errors,
  );
  result["updatedAt"] = anonymousValidator20803901(
    value["updatedAt"],
    `${propertyPath}.updatedAt`,
    errors,
  );
  return result;
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {undefined|StoreFileWhere}
 */
export function anonymousValidator65842827(
  value,
  propertyPath,
  errors = [],
  parentType = "reference",
) {
  if (isNil(value)) {
    return value;
  }
  return anonymousValidator2074494218(value, propertyPath, errors);
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {undefined|StoreFileOrderBy}
 */
export function anonymousValidator1370514093(
  value,
  propertyPath,
  errors = [],
  parentType = "reference",
) {
  if (isNil(value)) {
    return value;
  }
  return anonymousValidator1795948632(value, propertyPath, errors);
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {undefined|StoreFileOrderBySpec}
 */
export function anonymousValidator1745737810(
  value,
  propertyPath,
  errors = [],
  parentType = "reference",
) {
  if (isNil(value)) {
    return value;
  }
  return anonymousValidator163358845(value, propertyPath, errors);
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {undefined|StoreFileGroupOrderBy}
 */
export function anonymousValidator1055135624(
  value,
  propertyPath,
  errors = [],
  parentType = "reference",
) {
  if (isNil(value)) {
    return value;
  }
  return anonymousValidator753972035(value, propertyPath, errors);
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {undefined|StoreFileGroupOrderBySpec}
 */
export function anonymousValidator2018879405(
  value,
  propertyPath,
  errors = [],
  parentType = "reference",
) {
  if (isNil(value)) {
    return value;
  }
  return anonymousValidator322356638(value, propertyPath, errors);
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {undefined|StoreFileQueryBuilder}
 */
export function anonymousValidator2119152283(
  value,
  propertyPath,
  errors = [],
  parentType = "reference",
) {
  if (isNil(value)) {
    return value;
  }
  return anonymousValidator310044624(value, propertyPath, errors);
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {{"where"?: undefined|StoreFileGroupWhere, "limit"?: undefined|number, "offset"?: undefined|number, "viaFile"?: undefined|StoreFileQueryTraverser, "viaParent"?: undefined|StoreFileGroupQueryTraverser, "viaChildren"?: undefined|StoreFileGroupQueryTraverser, }}
 */
export function anonymousValidator1274599578(
  value,
  propertyPath,
  errors = [],
  parentType = "object",
) {
  if (isNil(value)) {
    throw AppError.validationError(`validator.${parentType}.undefined`, {
      propertyPath,
    });
  }
  if (typeof value !== "object") {
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath,
    });
  }
  const result = Object.create(null);
  for (const key of Object.keys(value)) {
    if (!objectKeys1274599578.has(key)) {
      throw AppError.validationError(`validator.${parentType}.strict`, {
        propertyPath,
        extraKey: key,
      });
    }
  }
  result["where"] = anonymousValidator481156646(
    value["where"],
    `${propertyPath}.where`,
    errors,
  );
  result["limit"] = anonymousValidator963028965(
    value["limit"],
    `${propertyPath}.limit`,
    errors,
  );
  result["offset"] = anonymousValidator963028965(
    value["offset"],
    `${propertyPath}.offset`,
    errors,
  );
  result["viaFile"] = anonymousValidator1978760330(
    value["viaFile"],
    `${propertyPath}.viaFile`,
    errors,
  );
  result["viaParent"] = anonymousValidator514437691(
    value["viaParent"],
    `${propertyPath}.viaParent`,
    errors,
  );
  result["viaChildren"] = anonymousValidator514437691(
    value["viaChildren"],
    `${propertyPath}.viaChildren`,
    errors,
  );
  return result;
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {undefined|StoreFileGroupQueryTraverser}
 */
export function anonymousValidator514437691(
  value,
  propertyPath,
  errors = [],
  parentType = "reference",
) {
  if (isNil(value)) {
    return value;
  }
  return anonymousValidator1274599578(value, propertyPath, errors);
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {{"where"?: undefined|StoreFileWhere, "limit"?: undefined|number, "offset"?: undefined|number, "viaGroup"?: undefined|StoreFileGroupQueryTraverser, }}
 */
export function anonymousValidator1069465749(
  value,
  propertyPath,
  errors = [],
  parentType = "object",
) {
  if (isNil(value)) {
    throw AppError.validationError(`validator.${parentType}.undefined`, {
      propertyPath,
    });
  }
  if (typeof value !== "object") {
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath,
    });
  }
  const result = Object.create(null);
  for (const key of Object.keys(value)) {
    if (!objectKeys1069465749.has(key)) {
      throw AppError.validationError(`validator.${parentType}.strict`, {
        propertyPath,
        extraKey: key,
      });
    }
  }
  result["where"] = anonymousValidator65842827(
    value["where"],
    `${propertyPath}.where`,
    errors,
  );
  result["limit"] = anonymousValidator963028965(
    value["limit"],
    `${propertyPath}.limit`,
    errors,
  );
  result["offset"] = anonymousValidator963028965(
    value["offset"],
    `${propertyPath}.offset`,
    errors,
  );
  result["viaGroup"] = anonymousValidator514437691(
    value["viaGroup"],
    `${propertyPath}.viaGroup`,
    errors,
  );
  return result;
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {undefined|StoreFileQueryTraverser}
 */
export function anonymousValidator1978760330(
  value,
  propertyPath,
  errors = [],
  parentType = "reference",
) {
  if (isNil(value)) {
    return value;
  }
  return anonymousValidator1069465749(value, propertyPath, errors);
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {{"where"?: undefined|StoreFileGroupWhere, "orderBy"?: undefined|StoreFileGroupOrderBy, "orderBySpec"?: undefined|StoreFileGroupOrderBySpec, "as"?: undefined|string, "limit"?: undefined|number, "offset"?: undefined|number, "file"?: undefined|StoreFileQueryBuilder, "viaFile"?: undefined|StoreFileQueryTraverser, "parent"?: undefined|StoreFileGroupQueryBuilder, "viaParent"?: undefined|StoreFileGroupQueryTraverser, "children"?: undefined|StoreFileGroupQueryBuilder, "viaChildren"?: undefined|StoreFileGroupQueryTraverser, }}
 */
export function anonymousValidator1862233461(
  value,
  propertyPath,
  errors = [],
  parentType = "object",
) {
  if (isNil(value)) {
    throw AppError.validationError(`validator.${parentType}.undefined`, {
      propertyPath,
    });
  }
  if (typeof value !== "object") {
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath,
    });
  }
  const result = Object.create(null);
  for (const key of Object.keys(value)) {
    if (!objectKeys1862233461.has(key)) {
      throw AppError.validationError(`validator.${parentType}.strict`, {
        propertyPath,
        extraKey: key,
      });
    }
  }
  result["where"] = anonymousValidator481156646(
    value["where"],
    `${propertyPath}.where`,
    errors,
  );
  result["orderBy"] = anonymousValidator1055135624(
    value["orderBy"],
    `${propertyPath}.orderBy`,
    errors,
  );
  result["orderBySpec"] = anonymousValidator2018879405(
    value["orderBySpec"],
    `${propertyPath}.orderBySpec`,
    errors,
  );
  result["as"] = anonymousValidator1443576836(
    value["as"],
    `${propertyPath}.as`,
    errors,
  );
  result["limit"] = anonymousValidator963028965(
    value["limit"],
    `${propertyPath}.limit`,
    errors,
  );
  result["offset"] = anonymousValidator963028965(
    value["offset"],
    `${propertyPath}.offset`,
    errors,
  );
  result["file"] = anonymousValidator2119152283(
    value["file"],
    `${propertyPath}.file`,
    errors,
  );
  result["viaFile"] = anonymousValidator1978760330(
    value["viaFile"],
    `${propertyPath}.viaFile`,
    errors,
  );
  result["parent"] = anonymousValidator1996607136(
    value["parent"],
    `${propertyPath}.parent`,
    errors,
  );
  result["viaParent"] = anonymousValidator514437691(
    value["viaParent"],
    `${propertyPath}.viaParent`,
    errors,
  );
  result["children"] = anonymousValidator1996607136(
    value["children"],
    `${propertyPath}.children`,
    errors,
  );
  result["viaChildren"] = anonymousValidator514437691(
    value["viaChildren"],
    `${propertyPath}.viaChildren`,
    errors,
  );
  return result;
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {undefined|StoreFileGroupQueryBuilder}
 */
export function anonymousValidator1996607136(
  value,
  propertyPath,
  errors = [],
  parentType = "reference",
) {
  if (isNil(value)) {
    return value;
  }
  return anonymousValidator1862233461(value, propertyPath, errors);
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {{"where"?: undefined|StoreFileWhere, "orderBy"?: undefined|StoreFileOrderBy, "orderBySpec"?: undefined|StoreFileOrderBySpec, "as"?: undefined|string, "limit"?: undefined|number, "offset"?: undefined|number, "group"?: undefined|StoreFileGroupQueryBuilder, "viaGroup"?: undefined|StoreFileGroupQueryTraverser, }}
 */
export function anonymousValidator310044624(
  value,
  propertyPath,
  errors = [],
  parentType = "object",
) {
  if (isNil(value)) {
    throw AppError.validationError(`validator.${parentType}.undefined`, {
      propertyPath,
    });
  }
  if (typeof value !== "object") {
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath,
    });
  }
  const result = Object.create(null);
  for (const key of Object.keys(value)) {
    if (!objectKeys310044624.has(key)) {
      throw AppError.validationError(`validator.${parentType}.strict`, {
        propertyPath,
        extraKey: key,
      });
    }
  }
  result["where"] = anonymousValidator65842827(
    value["where"],
    `${propertyPath}.where`,
    errors,
  );
  result["orderBy"] = anonymousValidator1370514093(
    value["orderBy"],
    `${propertyPath}.orderBy`,
    errors,
  );
  result["orderBySpec"] = anonymousValidator1745737810(
    value["orderBySpec"],
    `${propertyPath}.orderBySpec`,
    errors,
  );
  result["as"] = anonymousValidator1443576836(
    value["as"],
    `${propertyPath}.as`,
    errors,
  );
  result["limit"] = anonymousValidator963028965(
    value["limit"],
    `${propertyPath}.limit`,
    errors,
  );
  result["offset"] = anonymousValidator963028965(
    value["offset"],
    `${propertyPath}.offset`,
    errors,
  );
  result["group"] = anonymousValidator1996607136(
    value["group"],
    `${propertyPath}.group`,
    errors,
  );
  result["viaGroup"] = anonymousValidator514437691(
    value["viaGroup"],
    `${propertyPath}.viaGroup`,
    errors,
  );
  return result;
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {undefined|StoreJobWhere}
 */
export function anonymousValidator634541376(
  value,
  propertyPath,
  errors = [],
  parentType = "reference",
) {
  if (isNil(value)) {
    return value;
  }
  return anonymousValidator1257773835(value, propertyPath, errors);
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {undefined|StoreJobOrderBy}
 */
export function anonymousValidator1683806814(
  value,
  propertyPath,
  errors = [],
  parentType = "reference",
) {
  if (isNil(value)) {
    return value;
  }
  return anonymousValidator685221527(value, propertyPath, errors);
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {undefined|StoreJobOrderBySpec}
 */
export function anonymousValidator608966855(
  value,
  propertyPath,
  errors = [],
  parentType = "reference",
) {
  if (isNil(value)) {
    return value;
  }
  return anonymousValidator280827708(value, propertyPath, errors);
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {{"where"?: undefined|StoreJobWhere, "orderBy"?: undefined|StoreJobOrderBy, "orderBySpec"?: undefined|StoreJobOrderBySpec, "as"?: undefined|string, "limit"?: undefined|number, "offset"?: undefined|number, }}
 */
export function anonymousValidator343387919(
  value,
  propertyPath,
  errors = [],
  parentType = "object",
) {
  if (isNil(value)) {
    throw AppError.validationError(`validator.${parentType}.undefined`, {
      propertyPath,
    });
  }
  if (typeof value !== "object") {
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath,
    });
  }
  const result = Object.create(null);
  for (const key of Object.keys(value)) {
    if (!objectKeys343387919.has(key)) {
      throw AppError.validationError(`validator.${parentType}.strict`, {
        propertyPath,
        extraKey: key,
      });
    }
  }
  result["where"] = anonymousValidator634541376(
    value["where"],
    `${propertyPath}.where`,
    errors,
  );
  result["orderBy"] = anonymousValidator1683806814(
    value["orderBy"],
    `${propertyPath}.orderBy`,
    errors,
  );
  result["orderBySpec"] = anonymousValidator608966855(
    value["orderBySpec"],
    `${propertyPath}.orderBySpec`,
    errors,
  );
  result["as"] = anonymousValidator1443576836(
    value["as"],
    `${propertyPath}.as`,
    errors,
  );
  result["limit"] = anonymousValidator963028965(
    value["limit"],
    `${propertyPath}.limit`,
    errors,
  );
  result["offset"] = anonymousValidator963028965(
    value["offset"],
    `${propertyPath}.offset`,
    errors,
  );
  return result;
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {{"where"?: undefined|StoreJobWhere, "limit"?: undefined|number, "offset"?: undefined|number, }}
 */
export function anonymousValidator1952914356(
  value,
  propertyPath,
  errors = [],
  parentType = "object",
) {
  if (isNil(value)) {
    throw AppError.validationError(`validator.${parentType}.undefined`, {
      propertyPath,
    });
  }
  if (typeof value !== "object") {
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath,
    });
  }
  const result = Object.create(null);
  for (const key of Object.keys(value)) {
    if (!objectKeys1952914356.has(key)) {
      throw AppError.validationError(`validator.${parentType}.strict`, {
        propertyPath,
        extraKey: key,
      });
    }
  }
  result["where"] = anonymousValidator634541376(
    value["where"],
    `${propertyPath}.where`,
    errors,
  );
  result["limit"] = anonymousValidator963028965(
    value["limit"],
    `${propertyPath}.limit`,
    errors,
  );
  result["offset"] = anonymousValidator963028965(
    value["offset"],
    `${propertyPath}.offset`,
    errors,
  );
  return result;
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {undefined|StoreSessionWhere}
 */
export function anonymousValidator196488441(
  value,
  propertyPath,
  errors = [],
  parentType = "reference",
) {
  if (isNil(value)) {
    return value;
  }
  return anonymousValidator500057262(value, propertyPath, errors);
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {undefined|StoreSessionOrderBy}
 */
export function anonymousValidator1928069733(
  value,
  propertyPath,
  errors = [],
  parentType = "reference",
) {
  if (isNil(value)) {
    return value;
  }
  return anonymousValidator2038758416(value, propertyPath, errors);
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {undefined|StoreSessionOrderBySpec}
 */
export function anonymousValidator1053930432(
  value,
  propertyPath,
  errors = [],
  parentType = "reference",
) {
  if (isNil(value)) {
    return value;
  }
  return anonymousValidator144635851(value, propertyPath, errors);
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {{"where"?: undefined|StoreSessionWhere, "orderBy"?: undefined|StoreSessionOrderBy, "orderBySpec"?: undefined|StoreSessionOrderBySpec, "as"?: undefined|string, "limit"?: undefined|number, "offset"?: undefined|number, }}
 */
export function anonymousValidator647856360(
  value,
  propertyPath,
  errors = [],
  parentType = "object",
) {
  if (isNil(value)) {
    throw AppError.validationError(`validator.${parentType}.undefined`, {
      propertyPath,
    });
  }
  if (typeof value !== "object") {
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath,
    });
  }
  const result = Object.create(null);
  for (const key of Object.keys(value)) {
    if (!objectKeys647856360.has(key)) {
      throw AppError.validationError(`validator.${parentType}.strict`, {
        propertyPath,
        extraKey: key,
      });
    }
  }
  result["where"] = anonymousValidator196488441(
    value["where"],
    `${propertyPath}.where`,
    errors,
  );
  result["orderBy"] = anonymousValidator1928069733(
    value["orderBy"],
    `${propertyPath}.orderBy`,
    errors,
  );
  result["orderBySpec"] = anonymousValidator1053930432(
    value["orderBySpec"],
    `${propertyPath}.orderBySpec`,
    errors,
  );
  result["as"] = anonymousValidator1443576836(
    value["as"],
    `${propertyPath}.as`,
    errors,
  );
  result["limit"] = anonymousValidator963028965(
    value["limit"],
    `${propertyPath}.limit`,
    errors,
  );
  result["offset"] = anonymousValidator963028965(
    value["offset"],
    `${propertyPath}.offset`,
    errors,
  );
  return result;
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {{"where"?: undefined|StoreSessionWhere, "limit"?: undefined|number, "offset"?: undefined|number, }}
 */
export function anonymousValidator1805657267(
  value,
  propertyPath,
  errors = [],
  parentType = "object",
) {
  if (isNil(value)) {
    throw AppError.validationError(`validator.${parentType}.undefined`, {
      propertyPath,
    });
  }
  if (typeof value !== "object") {
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath,
    });
  }
  const result = Object.create(null);
  for (const key of Object.keys(value)) {
    if (!objectKeys1805657267.has(key)) {
      throw AppError.validationError(`validator.${parentType}.strict`, {
        propertyPath,
        extraKey: key,
      });
    }
  }
  result["where"] = anonymousValidator196488441(
    value["where"],
    `${propertyPath}.where`,
    errors,
  );
  result["limit"] = anonymousValidator963028965(
    value["limit"],
    `${propertyPath}.limit`,
    errors,
  );
  result["offset"] = anonymousValidator963028965(
    value["offset"],
    `${propertyPath}.offset`,
    errors,
  );
  return result;
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {"ASC"|"DESC"}
 */
export function anonymousValidator446238440(
  value,
  propertyPath,
  errors = [],
  parentType = "string",
) {
  if (isNil(value)) {
    throw AppError.validationError(`validator.${parentType}.undefined`, {
      propertyPath,
    });
  }
  if (typeof value !== "string") {
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath,
    });
  }
  if (value.length < 1) {
    const min = 1;
    throw AppError.validationError(`validator.${parentType}.min`, {
      propertyPath,
      min,
    });
  }
  if (value !== "ASC" && value !== "DESC") {
    const oneOf = ["ASC", "DESC"];
    throw AppError.validationError(`validator.${parentType}.oneOf`, {
      propertyPath,
      oneOf,
    });
  }
  return value;
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {"ASC"|"DESC"|"ASC NULLS FIRST"|"DESC NULLS LAST"}
 */
export function anonymousValidator572766398(
  value,
  propertyPath,
  errors = [],
  parentType = "string",
) {
  if (isNil(value)) {
    throw AppError.validationError(`validator.${parentType}.undefined`, {
      propertyPath,
    });
  }
  if (typeof value !== "string") {
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath,
    });
  }
  if (value.length < 1) {
    const min = 1;
    throw AppError.validationError(`validator.${parentType}.min`, {
      propertyPath,
      min,
    });
  }
  if (
    value !== "ASC" &&
    value !== "DESC" &&
    value !== "ASC NULLS FIRST" &&
    value !== "DESC NULLS LAST"
  ) {
    const oneOf = ["ASC", "DESC", "ASC NULLS FIRST", "DESC NULLS LAST"];
    throw AppError.validationError(`validator.${parentType}.oneOf`, {
      propertyPath,
      oneOf,
    });
  }
  return value;
}
