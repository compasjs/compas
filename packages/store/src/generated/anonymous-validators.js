// Generated by @compas/code-gen
/* eslint-disable no-unused-vars */

import { AppError } from "@compas/stdlib";
import { isQueryObject } from "@compas/store";

const objectKeys135401452 = new Set([
  "bucketName",
  "contentLength",
  "contentType",
  "name",
  "meta",
  "id",
  "createdAt",
  "updatedAt",
  "deletedAt",
]);
const objectKeys966195931 = new Set([""]);
const objectKeys90503403 = new Set([
  "name",
  "order",
  "meta",
  "id",
  "file",
  "parent",
  "createdAt",
  "updatedAt",
  "deletedAt",
]);
const objectKeys299053463 = new Set([""]);
const objectKeys1507488284 = new Set([
  "name",
  "order",
  "meta",
  "isDirectory",
  "id",
  "file",
  "parent",
  "createdAt",
  "updatedAt",
  "deletedAt",
]);
const objectKeys1384116942 = new Set([
  "id",
  "isComplete",
  "priority",
  "scheduledAt",
  "name",
  "data",
  "createdAt",
  "updatedAt",
]);
const objectKeys1559123284 = new Set([
  "years",
  "months",
  "days",
  "hours",
  "minutes",
  "seconds",
]);
const objectKeys1030786440 = new Set([
  "expires",
  "data",
  "id",
  "createdAt",
  "updatedAt",
]);
const objectKeys584509299 = new Set([
  "$or",
  "id",
  "idNotEqual",
  "idIn",
  "idNotIn",
  "idLike",
  "idNotLike",
  "bucketName",
  "bucketNameNotEqual",
  "bucketNameIn",
  "bucketNameNotIn",
  "bucketNameLike",
  "bucketNameNotLike",
  "createdAt",
  "createdAtNotEqual",
  "createdAtIn",
  "createdAtNotIn",
  "createdAtGreaterThan",
  "createdAtLowerThan",
  "createdAtIsNull",
  "createdAtIsNotNull",
  "updatedAt",
  "updatedAtNotEqual",
  "updatedAtIn",
  "updatedAtNotIn",
  "updatedAtGreaterThan",
  "updatedAtLowerThan",
  "updatedAtIsNull",
  "updatedAtIsNotNull",
  "deletedAt",
  "deletedAtNotEqual",
  "deletedAtIn",
  "deletedAtNotIn",
  "deletedAtGreaterThan",
  "deletedAtLowerThan",
  "deletedAtIncludeNotNull",
]);
const objectKeys1733514216 = new Set([
  "$or",
  "id",
  "idNotEqual",
  "idIn",
  "idNotIn",
  "idLike",
  "idNotLike",
  "file",
  "fileNotEqual",
  "fileIn",
  "fileNotIn",
  "fileLike",
  "fileNotLike",
  "fileIsNull",
  "fileIsNotNull",
  "parent",
  "parentNotEqual",
  "parentIn",
  "parentNotIn",
  "parentLike",
  "parentNotLike",
  "parentIsNull",
  "parentIsNotNull",
  "createdAt",
  "createdAtNotEqual",
  "createdAtIn",
  "createdAtNotIn",
  "createdAtGreaterThan",
  "createdAtLowerThan",
  "createdAtIsNull",
  "createdAtIsNotNull",
  "updatedAt",
  "updatedAtNotEqual",
  "updatedAtIn",
  "updatedAtNotIn",
  "updatedAtGreaterThan",
  "updatedAtLowerThan",
  "updatedAtIsNull",
  "updatedAtIsNotNull",
  "deletedAt",
  "deletedAtNotEqual",
  "deletedAtIn",
  "deletedAtNotIn",
  "deletedAtGreaterThan",
  "deletedAtLowerThan",
  "deletedAtIncludeNotNull",
]);
const objectKeys1218783160 = new Set([
  "$or",
  "id",
  "idNotEqual",
  "idIn",
  "idNotIn",
  "idLike",
  "idNotLike",
  "isDirectory",
  "file",
  "fileNotEqual",
  "fileIn",
  "fileNotIn",
  "fileLike",
  "fileNotLike",
  "fileIsNull",
  "fileIsNotNull",
  "parent",
  "parentNotEqual",
  "parentIn",
  "parentNotIn",
  "parentLike",
  "parentNotLike",
  "parentIsNull",
  "parentIsNotNull",
  "createdAt",
  "createdAtNotEqual",
  "createdAtIn",
  "createdAtNotIn",
  "createdAtGreaterThan",
  "createdAtLowerThan",
  "createdAtIsNull",
  "createdAtIsNotNull",
  "updatedAt",
  "updatedAtNotEqual",
  "updatedAtIn",
  "updatedAtNotIn",
  "updatedAtGreaterThan",
  "updatedAtLowerThan",
  "updatedAtIsNull",
  "updatedAtIsNotNull",
  "deletedAt",
  "deletedAtNotEqual",
  "deletedAtIn",
  "deletedAtNotIn",
  "deletedAtGreaterThan",
  "deletedAtLowerThan",
  "deletedAtIncludeNotNull",
]);
const objectKeys56200775 = new Set([
  "$or",
  "id",
  "idNotEqual",
  "idIn",
  "idNotIn",
  "idGreaterThan",
  "idLowerThan",
  "isComplete",
  "isCompleteIsNull",
  "isCompleteIsNotNull",
  "name",
  "nameNotEqual",
  "nameIn",
  "nameNotIn",
  "nameLike",
  "nameNotLike",
  "scheduledAt",
  "scheduledAtNotEqual",
  "scheduledAtIn",
  "scheduledAtNotIn",
  "scheduledAtGreaterThan",
  "scheduledAtLowerThan",
  "scheduledAtIsNull",
  "scheduledAtIsNotNull",
  "createdAt",
  "createdAtNotEqual",
  "createdAtIn",
  "createdAtNotIn",
  "createdAtGreaterThan",
  "createdAtLowerThan",
  "createdAtIsNull",
  "createdAtIsNotNull",
  "updatedAt",
  "updatedAtNotEqual",
  "updatedAtIn",
  "updatedAtNotIn",
  "updatedAtGreaterThan",
  "updatedAtLowerThan",
  "updatedAtIsNull",
  "updatedAtIsNotNull",
]);
const objectKeys1230824634 = new Set([
  "$or",
  "id",
  "idNotEqual",
  "idIn",
  "idNotIn",
  "idLike",
  "idNotLike",
  "expires",
  "expiresNotEqual",
  "expiresIn",
  "expiresNotIn",
  "expiresGreaterThan",
  "expiresLowerThan",
  "createdAt",
  "createdAtNotEqual",
  "createdAtIn",
  "createdAtNotIn",
  "createdAtGreaterThan",
  "createdAtLowerThan",
  "createdAtIsNull",
  "createdAtIsNotNull",
  "updatedAt",
  "updatedAtNotEqual",
  "updatedAtIn",
  "updatedAtNotIn",
  "updatedAtGreaterThan",
  "updatedAtLowerThan",
  "updatedAtIsNull",
  "updatedAtIsNotNull",
]);
const objectKeys1644755967 = new Set([
  "where",
  "as",
  "limit",
  "offset",
  "group",
  "viaGroup",
  "groupView",
  "viaGroupView",
]);
const objectKeys94385236 = new Set([
  "where",
  "as",
  "limit",
  "offset",
  "file",
  "viaFile",
  "parent",
  "viaParent",
  "children",
  "viaChildren",
]);
const objectKeys474447723 = new Set([
  "where",
  "limit",
  "offset",
  "viaGroup",
  "viaGroupView",
]);
const objectKeys1162678868 = new Set([
  "where",
  "limit",
  "offset",
  "viaFile",
  "viaParent",
  "viaChildren",
]);
const objectKeys1329935837 = new Set([
  "where",
  "limit",
  "offset",
  "viaFile",
  "viaParent",
  "viaChildren",
]);
const objectKeys57343783 = new Set([
  "where",
  "as",
  "limit",
  "offset",
  "file",
  "viaFile",
  "parent",
  "viaParent",
  "children",
  "viaChildren",
]);
const objectKeys338876686 = new Set(["where", "as", "limit", "offset"]);
const objectKeys1959415486 = new Set(["where", "limit", "offset"]);
const objectKeys673744261 = new Set(["where", "as", "limit", "offset"]);
const objectKeys1611690207 = new Set(["where", "limit", "offset"]);
/**
 * @param {*} value
 * @returns {boolean}
 */
export function isNil(value) {
  return value === undefined || value === null;
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {string|undefined}
 */
export function anonymousValidator26143992(
  value,
  propertyPath,
  errors = [],
  parentType = "string",
) {
  if (isNil(value)) {
    throw AppError.validationError(`validator.${parentType}.undefined`, {
      propertyPath,
    });
  }
  if (typeof value !== "string") {
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath,
    });
  }
  if (value.length < 1) {
    const min = 1;
    throw AppError.validationError(`validator.${parentType}.min`, {
      propertyPath,
      min,
    });
  }
  return value;
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {number|undefined}
 */
export function anonymousValidator9037802(
  value,
  propertyPath,
  errors = [],
  parentType = "number",
) {
  if (isNil(value)) {
    throw AppError.validationError(`validator.${parentType}.undefined`, {
      propertyPath,
    });
  }
  if (typeof value !== "number" || isNaN(value) || !isFinite(value)) {
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath,
    });
  }
  if (!Number.isInteger(value)) {
    throw AppError.validationError(`validator.${parentType}.integer`, {
      propertyPath,
    });
  }
  return value;
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {string|undefined}
 */
export function anonymousValidator1801034940(
  value,
  propertyPath,
  errors = [],
  parentType = "string",
) {
  if (isNil(value)) {
    throw AppError.validationError(`validator.${parentType}.undefined`, {
      propertyPath,
    });
  }
  if (typeof value !== "string") {
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath,
    });
  }
  if (value.length < 1) {
    const min = 1;
    throw AppError.validationError(`validator.${parentType}.min`, {
      propertyPath,
      min,
    });
  }
  return value;
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {{}|undefined}
 */
export function anonymousValidator966195931(
  value,
  propertyPath,
  errors = [],
  parentType = "object",
) {
  if (isNil(value)) {
    return {};
  }
  if (typeof value !== "object") {
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath,
    });
  }
  const result = Object.create(null);
  for (const key of Object.keys(value)) {
    if (!objectKeys966195931.has(key)) {
      throw AppError.validationError(`validator.${parentType}.strict`, {
        propertyPath,
        extraKey: key,
      });
    }
  }
  return result;
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {string|undefined}
 */
export function anonymousValidator347945770(
  value,
  propertyPath,
  errors = [],
  parentType = "string",
) {
  if (isNil(value)) {
    throw AppError.validationError(`validator.${parentType}.undefined`, {
      propertyPath,
    });
  }
  if (typeof value !== "string") {
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath,
    });
  }
  value = value.trim();
  if (value.length < 36) {
    const min = 36;
    throw AppError.validationError(`validator.${parentType}.min`, {
      propertyPath,
      min,
    });
  }
  if (value.length > 36) {
    const max = 36;
    throw AppError.validationError(`validator.${parentType}.max`, {
      propertyPath,
      max,
    });
  }
  value = value.toLowerCase();
  if (
    !/^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[a-f0-9]{4}-[a-f0-9]{12}$/gi.test(
      value,
    )
  ) {
    throw AppError.validationError(`validator.${parentType}.pattern`, {
      propertyPath,
    });
  }
  return value;
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {string|undefined}
 */
export function anonymousValidator1715126071(
  value,
  propertyPath,
  errors = [],
  parentType = "uuid",
) {
  if (isNil(value)) {
    throw AppError.validationError(`validator.${parentType}.undefined`, {
      propertyPath,
    });
  }
  return anonymousValidator347945770(value, propertyPath, errors, "uuid");
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {string|undefined}
 */
export function anonymousValidator1559815992(
  value,
  propertyPath,
  errors = [],
  parentType = "string",
) {
  if (isNil(value)) {
    throw AppError.validationError(`validator.${parentType}.undefined`, {
      propertyPath,
    });
  }
  if (typeof value !== "string") {
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath,
    });
  }
  if (value.length < 24) {
    const min = 24;
    throw AppError.validationError(`validator.${parentType}.min`, {
      propertyPath,
      min,
    });
  }
  if (value.length > 29) {
    const max = 29;
    throw AppError.validationError(`validator.${parentType}.max`, {
      propertyPath,
      max,
    });
  }
  if (
    !/^(\d{4}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d\.\d+([+-][0-2]\d:[0-5]\d|Z))|(\d{4}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d([+-][0-2]\d:[0-5]\d|Z))|(\d{4}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d([+-][0-2]\d:[0-5]\d|Z))$/gi.test(
      value,
    )
  ) {
    throw AppError.validationError(`validator.${parentType}.pattern`, {
      propertyPath,
    });
  }
  return value;
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {Date|undefined}
 */
export function anonymousValidator1733472075(
  value,
  propertyPath,
  errors = [],
  parentType = "date",
) {
  if (isNil(value)) {
    return new Date();
  }
  if (typeof value === "string") {
    value = anonymousValidator1559815992(value, propertyPath, errors, "date");
  }
  try {
    const date = new Date(value);
    if (!isNaN(date.getTime())) {
      return date;
    }
  } catch {
    throw AppError.validationError(`validator.${parentType}.invalid`, {
      propertyPath,
    });
  }
  throw AppError.validationError(`validator.${parentType}.invalid`, {
    propertyPath,
  });
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {undefined|Date|undefined}
 */
export function anonymousValidator1843360477(
  value,
  propertyPath,
  errors = [],
  parentType = "date",
) {
  if (isNil(value)) {
    return value;
  }
  if (typeof value === "string") {
    value = anonymousValidator1559815992(value, propertyPath, errors, "date");
  }
  try {
    const date = new Date(value);
    if (!isNaN(date.getTime())) {
      return date;
    }
  } catch {
    throw AppError.validationError(`validator.${parentType}.invalid`, {
      propertyPath,
    });
  }
  throw AppError.validationError(`validator.${parentType}.invalid`, {
    propertyPath,
  });
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {{"bucketName": string, "contentLength": number, "contentType": string, "name": string, "meta": StoreFileMeta, "id": string, "createdAt": Date, "updatedAt": Date, "deletedAt"?: Date, }|undefined}
 */
export function anonymousValidator135401452(
  value,
  propertyPath,
  errors = [],
  parentType = "object",
) {
  if (isNil(value)) {
    throw AppError.validationError(`validator.${parentType}.undefined`, {
      propertyPath,
    });
  }
  if (typeof value !== "object") {
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath,
    });
  }
  const result = Object.create(null);
  for (const key of Object.keys(value)) {
    if (!objectKeys135401452.has(key)) {
      throw AppError.validationError(`validator.${parentType}.strict`, {
        propertyPath,
        extraKey: key,
      });
    }
  }
  result["bucketName"] = anonymousValidator26143992(
    value["bucketName"],
    `${propertyPath}.bucketName`,
    errors,
  );
  result["contentLength"] = anonymousValidator9037802(
    value["contentLength"],
    `${propertyPath}.contentLength`,
    errors,
  );
  result["contentType"] = anonymousValidator1801034940(
    value["contentType"],
    `${propertyPath}.contentType`,
    errors,
  );
  result["name"] = anonymousValidator1801034940(
    value["name"],
    `${propertyPath}.name`,
    errors,
  );
  result["meta"] = anonymousValidator966195931(
    value["meta"],
    `${propertyPath}.meta`,
    errors,
  );
  result["id"] = anonymousValidator1715126071(
    value["id"],
    `${propertyPath}.id`,
    errors,
  );
  result["createdAt"] = anonymousValidator1733472075(
    value["createdAt"],
    `${propertyPath}.createdAt`,
    errors,
  );
  result["updatedAt"] = anonymousValidator1733472075(
    value["updatedAt"],
    `${propertyPath}.updatedAt`,
    errors,
  );
  result["deletedAt"] = anonymousValidator1843360477(
    value["deletedAt"],
    `${propertyPath}.deletedAt`,
    errors,
  );
  return result;
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {undefined|string|undefined}
 */
export function anonymousValidator69329591(
  value,
  propertyPath,
  errors = [],
  parentType = "string",
) {
  if (isNil(value)) {
    return value;
  }
  if (typeof value !== "string") {
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath,
    });
  }
  if (value.length === 0) {
    return undefined;
  }
  if (value.length < 1) {
    const min = 1;
    throw AppError.validationError(`validator.${parentType}.min`, {
      propertyPath,
      min,
    });
  }
  return value;
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {number|undefined}
 */
export function anonymousValidator995002125(
  value,
  propertyPath,
  errors = [],
  parentType = "number",
) {
  if (isNil(value)) {
    return Math.floor(Date.now() / 1000000);
  }
  if (typeof value !== "number" || isNaN(value) || !isFinite(value)) {
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath,
    });
  }
  if (!Number.isInteger(value)) {
    throw AppError.validationError(`validator.${parentType}.integer`, {
      propertyPath,
    });
  }
  return value;
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {{}|undefined}
 */
export function anonymousValidator299053463(
  value,
  propertyPath,
  errors = [],
  parentType = "object",
) {
  if (isNil(value)) {
    return {};
  }
  if (typeof value !== "object") {
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath,
    });
  }
  const result = Object.create(null);
  for (const key of Object.keys(value)) {
    if (!objectKeys299053463.has(key)) {
      throw AppError.validationError(`validator.${parentType}.strict`, {
        propertyPath,
        extraKey: key,
      });
    }
  }
  return result;
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {undefined|string|undefined}
 */
export function anonymousValidator229039576(
  value,
  propertyPath,
  errors = [],
  parentType = "uuid",
) {
  if (isNil(value)) {
    return value;
  }
  return anonymousValidator347945770(value, propertyPath, errors, "uuid");
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {{"name"?: string, "order": number, "meta": StoreFileGroupMeta, "id": string, "file"?: string, "parent"?: string, "createdAt": Date, "updatedAt": Date, "deletedAt"?: Date, }|undefined}
 */
export function anonymousValidator90503403(
  value,
  propertyPath,
  errors = [],
  parentType = "object",
) {
  if (isNil(value)) {
    throw AppError.validationError(`validator.${parentType}.undefined`, {
      propertyPath,
    });
  }
  if (typeof value !== "object") {
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath,
    });
  }
  const result = Object.create(null);
  for (const key of Object.keys(value)) {
    if (!objectKeys90503403.has(key)) {
      throw AppError.validationError(`validator.${parentType}.strict`, {
        propertyPath,
        extraKey: key,
      });
    }
  }
  result["name"] = anonymousValidator69329591(
    value["name"],
    `${propertyPath}.name`,
    errors,
  );
  result["order"] = anonymousValidator995002125(
    value["order"],
    `${propertyPath}.order`,
    errors,
  );
  result["meta"] = anonymousValidator299053463(
    value["meta"],
    `${propertyPath}.meta`,
    errors,
  );
  result["id"] = anonymousValidator1715126071(
    value["id"],
    `${propertyPath}.id`,
    errors,
  );
  result["file"] = anonymousValidator229039576(
    value["file"],
    `${propertyPath}.file`,
    errors,
  );
  result["parent"] = anonymousValidator229039576(
    value["parent"],
    `${propertyPath}.parent`,
    errors,
  );
  result["createdAt"] = anonymousValidator1733472075(
    value["createdAt"],
    `${propertyPath}.createdAt`,
    errors,
  );
  result["updatedAt"] = anonymousValidator1733472075(
    value["updatedAt"],
    `${propertyPath}.updatedAt`,
    errors,
  );
  result["deletedAt"] = anonymousValidator1843360477(
    value["deletedAt"],
    `${propertyPath}.deletedAt`,
    errors,
  );
  return result;
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {{"name"?: string, "order": number, "meta": StoreFileGroupMeta, "isDirectory": boolean, "id": string, "file"?: string, "parent"?: string, "createdAt": Date, "updatedAt": Date, "deletedAt"?: Date, }|undefined}
 */
export function anonymousValidator1507488284(
  value,
  propertyPath,
  errors = [],
  parentType = "object",
) {
  if (isNil(value)) {
    throw AppError.validationError(`validator.${parentType}.undefined`, {
      propertyPath,
    });
  }
  if (typeof value !== "object") {
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath,
    });
  }
  const result = Object.create(null);
  for (const key of Object.keys(value)) {
    if (!objectKeys1507488284.has(key)) {
      throw AppError.validationError(`validator.${parentType}.strict`, {
        propertyPath,
        extraKey: key,
      });
    }
  }
  result["name"] = anonymousValidator69329591(
    value["name"],
    `${propertyPath}.name`,
    errors,
  );
  result["order"] = anonymousValidator9037802(
    value["order"],
    `${propertyPath}.order`,
    errors,
  );
  result["meta"] = anonymousValidator299053463(
    value["meta"],
    `${propertyPath}.meta`,
    errors,
  );
  if (
    isNil(value["isDirectory"]) ||
    typeof value["isDirectory"] !== "boolean"
  ) {
    const parentType = "boolean";
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath: `${propertyPath}.isDirectory`,
    });
  }
  result["isDirectory"] = value["isDirectory"] ?? undefined;
  result["id"] = anonymousValidator1715126071(
    value["id"],
    `${propertyPath}.id`,
    errors,
  );
  result["file"] = anonymousValidator229039576(
    value["file"],
    `${propertyPath}.file`,
    errors,
  );
  result["parent"] = anonymousValidator229039576(
    value["parent"],
    `${propertyPath}.parent`,
    errors,
  );
  result["createdAt"] = anonymousValidator1733472075(
    value["createdAt"],
    `${propertyPath}.createdAt`,
    errors,
  );
  result["updatedAt"] = anonymousValidator1733472075(
    value["updatedAt"],
    `${propertyPath}.updatedAt`,
    errors,
  );
  result["deletedAt"] = anonymousValidator1843360477(
    value["deletedAt"],
    `${propertyPath}.deletedAt`,
    errors,
  );
  return result;
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {number|undefined}
 */
export function anonymousValidator418032713(
  value,
  propertyPath,
  errors = [],
  parentType = "number",
) {
  if (isNil(value)) {
    throw AppError.validationError(`validator.${parentType}.undefined`, {
      propertyPath,
    });
  }
  if (typeof value !== "number") {
    value = Number(value);
  }
  if (typeof value !== "number" || isNaN(value) || !isFinite(value)) {
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath,
    });
  }
  if (!Number.isInteger(value)) {
    throw AppError.validationError(`validator.${parentType}.integer`, {
      propertyPath,
    });
  }
  return value;
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {boolean|undefined}
 */
export function anonymousValidator1091704028(
  value,
  propertyPath,
  errors = [],
  parentType = "boolean",
) {
  if (isNil(value)) {
    return false;
  }
  if (typeof value !== "boolean") {
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath,
    });
  }
  return value;
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {number|undefined}
 */
export function anonymousValidator877787645(
  value,
  propertyPath,
  errors = [],
  parentType = "number",
) {
  if (isNil(value)) {
    return 0;
  }
  if (typeof value !== "number" || isNaN(value) || !isFinite(value)) {
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath,
    });
  }
  if (!Number.isInteger(value)) {
    throw AppError.validationError(`validator.${parentType}.integer`, {
      propertyPath,
    });
  }
  return value;
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {Date|undefined}
 */
export function anonymousValidator550873709(
  value,
  propertyPath,
  errors = [],
  parentType = "date",
) {
  if (isNil(value)) {
    return new Date();
  }
  if (typeof value === "string") {
    value = anonymousValidator1559815992(value, propertyPath, errors, "date");
  }
  try {
    const date = new Date(value);
    if (!isNaN(date.getTime())) {
      return date;
    }
  } catch {
    throw AppError.validationError(`validator.${parentType}.invalid`, {
      propertyPath,
    });
  }
  throw AppError.validationError(`validator.${parentType}.invalid`, {
    propertyPath,
  });
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {*|undefined}
 */
export function anonymousValidator1526138444(
  value,
  propertyPath,
  errors = [],
  parentType = "any",
) {
  if (isNil(value)) {
    return {};
  }
  return value;
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {{"id": number, "isComplete": boolean, "priority": number, "scheduledAt": Date, "name": string, "data": *, "createdAt": Date, "updatedAt": Date, }|undefined}
 */
export function anonymousValidator1384116942(
  value,
  propertyPath,
  errors = [],
  parentType = "object",
) {
  if (isNil(value)) {
    throw AppError.validationError(`validator.${parentType}.undefined`, {
      propertyPath,
    });
  }
  if (typeof value !== "object") {
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath,
    });
  }
  const result = Object.create(null);
  for (const key of Object.keys(value)) {
    if (!objectKeys1384116942.has(key)) {
      throw AppError.validationError(`validator.${parentType}.strict`, {
        propertyPath,
        extraKey: key,
      });
    }
  }
  result["id"] = anonymousValidator418032713(
    value["id"],
    `${propertyPath}.id`,
    errors,
  );
  result["isComplete"] = anonymousValidator1091704028(
    value["isComplete"],
    `${propertyPath}.isComplete`,
    errors,
  );
  result["priority"] = anonymousValidator877787645(
    value["priority"],
    `${propertyPath}.priority`,
    errors,
  );
  result["scheduledAt"] = anonymousValidator550873709(
    value["scheduledAt"],
    `${propertyPath}.scheduledAt`,
    errors,
  );
  result["name"] = anonymousValidator26143992(
    value["name"],
    `${propertyPath}.name`,
    errors,
  );
  result["data"] = anonymousValidator1526138444(
    value["data"],
    `${propertyPath}.data`,
    errors,
  );
  result["createdAt"] = anonymousValidator1733472075(
    value["createdAt"],
    `${propertyPath}.createdAt`,
    errors,
  );
  result["updatedAt"] = anonymousValidator1733472075(
    value["updatedAt"],
    `${propertyPath}.updatedAt`,
    errors,
  );
  return result;
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {undefined|number|undefined}
 */
export function anonymousValidator629315207(
  value,
  propertyPath,
  errors = [],
  parentType = "number",
) {
  if (isNil(value)) {
    return value;
  }
  if (typeof value !== "number" || isNaN(value) || !isFinite(value)) {
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath,
    });
  }
  if (!Number.isInteger(value)) {
    throw AppError.validationError(`validator.${parentType}.integer`, {
      propertyPath,
    });
  }
  return value;
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {{"years"?: number, "months"?: number, "days"?: number, "hours"?: number, "minutes"?: number, "seconds"?: number, }|undefined}
 */
export function anonymousValidator1559123284(
  value,
  propertyPath,
  errors = [],
  parentType = "object",
) {
  if (isNil(value)) {
    throw AppError.validationError(`validator.${parentType}.undefined`, {
      propertyPath,
    });
  }
  if (typeof value !== "object") {
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath,
    });
  }
  const result = Object.create(null);
  for (const key of Object.keys(value)) {
    if (!objectKeys1559123284.has(key)) {
      throw AppError.validationError(`validator.${parentType}.strict`, {
        propertyPath,
        extraKey: key,
      });
    }
  }
  result["years"] = anonymousValidator629315207(
    value["years"],
    `${propertyPath}.years`,
    errors,
  );
  result["months"] = anonymousValidator629315207(
    value["months"],
    `${propertyPath}.months`,
    errors,
  );
  result["days"] = anonymousValidator629315207(
    value["days"],
    `${propertyPath}.days`,
    errors,
  );
  result["hours"] = anonymousValidator629315207(
    value["hours"],
    `${propertyPath}.hours`,
    errors,
  );
  result["minutes"] = anonymousValidator629315207(
    value["minutes"],
    `${propertyPath}.minutes`,
    errors,
  );
  result["seconds"] = anonymousValidator629315207(
    value["seconds"],
    `${propertyPath}.seconds`,
    errors,
  );
  return result;
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {Date|undefined}
 */
export function anonymousValidator744970218(
  value,
  propertyPath,
  errors = [],
  parentType = "date",
) {
  if (isNil(value)) {
    throw AppError.validationError(`validator.${parentType}.undefined`, {
      propertyPath,
    });
  }
  if (typeof value === "string") {
    value = anonymousValidator1559815992(value, propertyPath, errors, "date");
  }
  try {
    const date = new Date(value);
    if (!isNaN(date.getTime())) {
      return date;
    }
  } catch {
    throw AppError.validationError(`validator.${parentType}.invalid`, {
      propertyPath,
    });
  }
  throw AppError.validationError(`validator.${parentType}.invalid`, {
    propertyPath,
  });
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {{"expires": Date, "data": *, "id": string, "createdAt": Date, "updatedAt": Date, }|undefined}
 */
export function anonymousValidator1030786440(
  value,
  propertyPath,
  errors = [],
  parentType = "object",
) {
  if (isNil(value)) {
    throw AppError.validationError(`validator.${parentType}.undefined`, {
      propertyPath,
    });
  }
  if (typeof value !== "object") {
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath,
    });
  }
  const result = Object.create(null);
  for (const key of Object.keys(value)) {
    if (!objectKeys1030786440.has(key)) {
      throw AppError.validationError(`validator.${parentType}.strict`, {
        propertyPath,
        extraKey: key,
      });
    }
  }
  result["expires"] = anonymousValidator744970218(
    value["expires"],
    `${propertyPath}.expires`,
    errors,
  );
  result["data"] = anonymousValidator1526138444(
    value["data"],
    `${propertyPath}.data`,
    errors,
  );
  result["id"] = anonymousValidator1715126071(
    value["id"],
    `${propertyPath}.id`,
    errors,
  );
  result["createdAt"] = anonymousValidator1733472075(
    value["createdAt"],
    `${propertyPath}.createdAt`,
    errors,
  );
  result["updatedAt"] = anonymousValidator1733472075(
    value["updatedAt"],
    `${propertyPath}.updatedAt`,
    errors,
  );
  return result;
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {undefined|(StoreFileWhere)[]|undefined}
 */
export function anonymousValidator1042282829(
  value,
  propertyPath,
  errors = [],
  parentType = "array",
) {
  if (isNil(value)) {
    return value;
  }
  if (!Array.isArray(value)) {
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath,
    });
  }
  const result = Array.from({ length: value.length });
  for (let i = 0; i < value.length; ++i) {
    result[i] = anonymousValidator584509299(
      value[i],
      `${propertyPath}[${i}]`,
      errors,
    );
  }
  return result;
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {undefined|string|undefined}
 */
export function anonymousValidator1898931852(
  value,
  propertyPath,
  errors = [],
  parentType = "uuid",
) {
  if (isNil(value)) {
    return value;
  }
  return anonymousValidator347945770(value, propertyPath, errors, "uuid");
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {string|undefined}
 */
export function anonymousValidator486357587(
  value,
  propertyPath,
  errors = [],
  parentType = "uuid",
) {
  if (isNil(value)) {
    throw AppError.validationError(`validator.${parentType}.undefined`, {
      propertyPath,
    });
  }
  return anonymousValidator347945770(value, propertyPath, errors, "uuid");
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {undefined|(string)[]|undefined}
 */
export function anonymousValidator1501115825(
  value,
  propertyPath,
  errors = [],
  parentType = "array",
) {
  if (isNil(value)) {
    return value;
  }
  if (!Array.isArray(value)) {
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath,
    });
  }
  const result = Array.from({ length: value.length });
  for (let i = 0; i < value.length; ++i) {
    result[i] = anonymousValidator486357587(
      value[i],
      `${propertyPath}[${i}]`,
      errors,
    );
  }
  return result;
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {undefined|(string)[]|QueryPart|undefined}
 */
export function anonymousValidator886319360(
  value,
  propertyPath,
  errors = [],
  parentType = "anyOf",
) {
  if (isNil(value)) {
    return value;
  }
  const subErrors = [];
  try {
    return anonymousValidator1501115825(value, propertyPath, subErrors);
  } catch (e) {
    subErrors.push(e);
  }
  try {
    if (!isNil(value) && !isQueryObject(value)) {
      const parentType = "any";
      throw AppError.validationError(`validator.${parentType}.custom`, {
        propertyPath: propertyPath,
      });
    }
    return value ?? undefined;
  } catch (e) {
    subErrors.push(e);
  }
  throw AppError.validationError(`validator.${parentType}.type`, {
    propertyPath,
    errors: subErrors,
  });
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {undefined|string|undefined}
 */
export function anonymousValidator167801359(
  value,
  propertyPath,
  errors = [],
  parentType = "string",
) {
  if (isNil(value)) {
    return value;
  }
  if (typeof value !== "string") {
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath,
    });
  }
  if (value.length === 0) {
    return undefined;
  }
  if (value.length < 1) {
    const min = 1;
    throw AppError.validationError(`validator.${parentType}.min`, {
      propertyPath,
      min,
    });
  }
  return value;
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {string|undefined}
 */
export function anonymousValidator1641742236(
  value,
  propertyPath,
  errors = [],
  parentType = "string",
) {
  if (isNil(value)) {
    throw AppError.validationError(`validator.${parentType}.undefined`, {
      propertyPath,
    });
  }
  if (typeof value !== "string") {
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath,
    });
  }
  if (value.length < 1) {
    const min = 1;
    throw AppError.validationError(`validator.${parentType}.min`, {
      propertyPath,
      min,
    });
  }
  return value;
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {undefined|(string)[]|undefined}
 */
export function anonymousValidator443496920(
  value,
  propertyPath,
  errors = [],
  parentType = "array",
) {
  if (isNil(value)) {
    return value;
  }
  if (!Array.isArray(value)) {
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath,
    });
  }
  const result = Array.from({ length: value.length });
  for (let i = 0; i < value.length; ++i) {
    result[i] = anonymousValidator1641742236(
      value[i],
      `${propertyPath}[${i}]`,
      errors,
    );
  }
  return result;
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {undefined|(string)[]|QueryPart|undefined}
 */
export function anonymousValidator927685879(
  value,
  propertyPath,
  errors = [],
  parentType = "anyOf",
) {
  if (isNil(value)) {
    return value;
  }
  const subErrors = [];
  try {
    return anonymousValidator443496920(value, propertyPath, subErrors);
  } catch (e) {
    subErrors.push(e);
  }
  try {
    if (!isNil(value) && !isQueryObject(value)) {
      const parentType = "any";
      throw AppError.validationError(`validator.${parentType}.custom`, {
        propertyPath: propertyPath,
      });
    }
    return value ?? undefined;
  } catch (e) {
    subErrors.push(e);
  }
  throw AppError.validationError(`validator.${parentType}.type`, {
    propertyPath,
    errors: subErrors,
  });
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {undefined|Date|undefined}
 */
export function anonymousValidator1755360743(
  value,
  propertyPath,
  errors = [],
  parentType = "date",
) {
  if (isNil(value)) {
    return value;
  }
  if (typeof value === "string") {
    value = anonymousValidator1559815992(value, propertyPath, errors, "date");
  }
  try {
    const date = new Date(value);
    if (!isNaN(date.getTime())) {
      return date;
    }
  } catch {
    throw AppError.validationError(`validator.${parentType}.invalid`, {
      propertyPath,
    });
  }
  throw AppError.validationError(`validator.${parentType}.invalid`, {
    propertyPath,
  });
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {Date|undefined}
 */
export function anonymousValidator772951230(
  value,
  propertyPath,
  errors = [],
  parentType = "date",
) {
  if (isNil(value)) {
    throw AppError.validationError(`validator.${parentType}.undefined`, {
      propertyPath,
    });
  }
  if (typeof value === "string") {
    value = anonymousValidator1559815992(value, propertyPath, errors, "date");
  }
  try {
    const date = new Date(value);
    if (!isNaN(date.getTime())) {
      return date;
    }
  } catch {
    throw AppError.validationError(`validator.${parentType}.invalid`, {
      propertyPath,
    });
  }
  throw AppError.validationError(`validator.${parentType}.invalid`, {
    propertyPath,
  });
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {undefined|(Date)[]|undefined}
 */
export function anonymousValidator1303653254(
  value,
  propertyPath,
  errors = [],
  parentType = "array",
) {
  if (isNil(value)) {
    return value;
  }
  if (!Array.isArray(value)) {
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath,
    });
  }
  const result = Array.from({ length: value.length });
  for (let i = 0; i < value.length; ++i) {
    result[i] = anonymousValidator772951230(
      value[i],
      `${propertyPath}[${i}]`,
      errors,
    );
  }
  return result;
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {undefined|(Date)[]|QueryPart|undefined}
 */
export function anonymousValidator145617493(
  value,
  propertyPath,
  errors = [],
  parentType = "anyOf",
) {
  if (isNil(value)) {
    return value;
  }
  const subErrors = [];
  try {
    return anonymousValidator1303653254(value, propertyPath, subErrors);
  } catch (e) {
    subErrors.push(e);
  }
  try {
    if (!isNil(value) && !isQueryObject(value)) {
      const parentType = "any";
      throw AppError.validationError(`validator.${parentType}.custom`, {
        propertyPath: propertyPath,
      });
    }
    return value ?? undefined;
  } catch (e) {
    subErrors.push(e);
  }
  throw AppError.validationError(`validator.${parentType}.type`, {
    propertyPath,
    errors: subErrors,
  });
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {{"$or"?: (StoreFileWhere)[], "id"?: string, "idNotEqual"?: string, "idIn"?: (string)[]|QueryPart, "idNotIn"?: (string)[]|QueryPart, "idLike"?: string, "idNotLike"?: string, "bucketName"?: string, "bucketNameNotEqual"?: string, "bucketNameIn"?: (string)[]|QueryPart, "bucketNameNotIn"?: (string)[]|QueryPart, "bucketNameLike"?: string, "bucketNameNotLike"?: string, "createdAt"?: Date, "createdAtNotEqual"?: Date, "createdAtIn"?: (Date)[]|QueryPart, "createdAtNotIn"?: (Date)[]|QueryPart, "createdAtGreaterThan"?: Date, "createdAtLowerThan"?: Date, "createdAtIsNull"?: boolean, "createdAtIsNotNull"?: boolean, "updatedAt"?: Date, "updatedAtNotEqual"?: Date, "updatedAtIn"?: (Date)[]|QueryPart, "updatedAtNotIn"?: (Date)[]|QueryPart, "updatedAtGreaterThan"?: Date, "updatedAtLowerThan"?: Date, "updatedAtIsNull"?: boolean, "updatedAtIsNotNull"?: boolean, "deletedAt"?: Date, "deletedAtNotEqual"?: Date, "deletedAtIn"?: (Date)[]|QueryPart, "deletedAtNotIn"?: (Date)[]|QueryPart, "deletedAtGreaterThan"?: Date, "deletedAtLowerThan"?: Date, "deletedAtIncludeNotNull"?: boolean, }|undefined}
 */
export function anonymousValidator584509299(
  value,
  propertyPath,
  errors = [],
  parentType = "object",
) {
  if (isNil(value)) {
    throw AppError.validationError(`validator.${parentType}.undefined`, {
      propertyPath,
    });
  }
  if (typeof value !== "object") {
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath,
    });
  }
  const result = Object.create(null);
  for (const key of Object.keys(value)) {
    if (!objectKeys584509299.has(key)) {
      throw AppError.validationError(`validator.${parentType}.strict`, {
        propertyPath,
        extraKey: key,
      });
    }
  }
  result["$or"] = anonymousValidator1042282829(
    value["$or"],
    `${propertyPath}.$or`,
    errors,
  );
  result["id"] = anonymousValidator1898931852(
    value["id"],
    `${propertyPath}.id`,
    errors,
  );
  result["idNotEqual"] = anonymousValidator1898931852(
    value["idNotEqual"],
    `${propertyPath}.idNotEqual`,
    errors,
  );
  result["idIn"] = anonymousValidator886319360(
    value["idIn"],
    `${propertyPath}.idIn`,
    errors,
  );
  result["idNotIn"] = anonymousValidator886319360(
    value["idNotIn"],
    `${propertyPath}.idNotIn`,
    errors,
  );
  result["idLike"] = anonymousValidator1898931852(
    value["idLike"],
    `${propertyPath}.idLike`,
    errors,
  );
  result["idNotLike"] = anonymousValidator1898931852(
    value["idNotLike"],
    `${propertyPath}.idNotLike`,
    errors,
  );
  result["bucketName"] = anonymousValidator167801359(
    value["bucketName"],
    `${propertyPath}.bucketName`,
    errors,
  );
  result["bucketNameNotEqual"] = anonymousValidator167801359(
    value["bucketNameNotEqual"],
    `${propertyPath}.bucketNameNotEqual`,
    errors,
  );
  result["bucketNameIn"] = anonymousValidator927685879(
    value["bucketNameIn"],
    `${propertyPath}.bucketNameIn`,
    errors,
  );
  result["bucketNameNotIn"] = anonymousValidator927685879(
    value["bucketNameNotIn"],
    `${propertyPath}.bucketNameNotIn`,
    errors,
  );
  result["bucketNameLike"] = anonymousValidator167801359(
    value["bucketNameLike"],
    `${propertyPath}.bucketNameLike`,
    errors,
  );
  result["bucketNameNotLike"] = anonymousValidator167801359(
    value["bucketNameNotLike"],
    `${propertyPath}.bucketNameNotLike`,
    errors,
  );
  result["createdAt"] = anonymousValidator1755360743(
    value["createdAt"],
    `${propertyPath}.createdAt`,
    errors,
  );
  result["createdAtNotEqual"] = anonymousValidator1755360743(
    value["createdAtNotEqual"],
    `${propertyPath}.createdAtNotEqual`,
    errors,
  );
  result["createdAtIn"] = anonymousValidator145617493(
    value["createdAtIn"],
    `${propertyPath}.createdAtIn`,
    errors,
  );
  result["createdAtNotIn"] = anonymousValidator145617493(
    value["createdAtNotIn"],
    `${propertyPath}.createdAtNotIn`,
    errors,
  );
  result["createdAtGreaterThan"] = anonymousValidator1755360743(
    value["createdAtGreaterThan"],
    `${propertyPath}.createdAtGreaterThan`,
    errors,
  );
  result["createdAtLowerThan"] = anonymousValidator1755360743(
    value["createdAtLowerThan"],
    `${propertyPath}.createdAtLowerThan`,
    errors,
  );
  if (
    !isNil(value["createdAtIsNull"]) &&
    typeof value["createdAtIsNull"] !== "boolean"
  ) {
    const parentType = "boolean";
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath: `${propertyPath}.createdAtIsNull`,
    });
  }
  result["createdAtIsNull"] = value["createdAtIsNull"] ?? undefined;
  if (
    !isNil(value["createdAtIsNotNull"]) &&
    typeof value["createdAtIsNotNull"] !== "boolean"
  ) {
    const parentType = "boolean";
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath: `${propertyPath}.createdAtIsNotNull`,
    });
  }
  result["createdAtIsNotNull"] = value["createdAtIsNotNull"] ?? undefined;
  result["updatedAt"] = anonymousValidator1755360743(
    value["updatedAt"],
    `${propertyPath}.updatedAt`,
    errors,
  );
  result["updatedAtNotEqual"] = anonymousValidator1755360743(
    value["updatedAtNotEqual"],
    `${propertyPath}.updatedAtNotEqual`,
    errors,
  );
  result["updatedAtIn"] = anonymousValidator145617493(
    value["updatedAtIn"],
    `${propertyPath}.updatedAtIn`,
    errors,
  );
  result["updatedAtNotIn"] = anonymousValidator145617493(
    value["updatedAtNotIn"],
    `${propertyPath}.updatedAtNotIn`,
    errors,
  );
  result["updatedAtGreaterThan"] = anonymousValidator1755360743(
    value["updatedAtGreaterThan"],
    `${propertyPath}.updatedAtGreaterThan`,
    errors,
  );
  result["updatedAtLowerThan"] = anonymousValidator1755360743(
    value["updatedAtLowerThan"],
    `${propertyPath}.updatedAtLowerThan`,
    errors,
  );
  if (
    !isNil(value["updatedAtIsNull"]) &&
    typeof value["updatedAtIsNull"] !== "boolean"
  ) {
    const parentType = "boolean";
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath: `${propertyPath}.updatedAtIsNull`,
    });
  }
  result["updatedAtIsNull"] = value["updatedAtIsNull"] ?? undefined;
  if (
    !isNil(value["updatedAtIsNotNull"]) &&
    typeof value["updatedAtIsNotNull"] !== "boolean"
  ) {
    const parentType = "boolean";
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath: `${propertyPath}.updatedAtIsNotNull`,
    });
  }
  result["updatedAtIsNotNull"] = value["updatedAtIsNotNull"] ?? undefined;
  result["deletedAt"] = anonymousValidator1755360743(
    value["deletedAt"],
    `${propertyPath}.deletedAt`,
    errors,
  );
  result["deletedAtNotEqual"] = anonymousValidator1755360743(
    value["deletedAtNotEqual"],
    `${propertyPath}.deletedAtNotEqual`,
    errors,
  );
  result["deletedAtIn"] = anonymousValidator145617493(
    value["deletedAtIn"],
    `${propertyPath}.deletedAtIn`,
    errors,
  );
  result["deletedAtNotIn"] = anonymousValidator145617493(
    value["deletedAtNotIn"],
    `${propertyPath}.deletedAtNotIn`,
    errors,
  );
  result["deletedAtGreaterThan"] = anonymousValidator1755360743(
    value["deletedAtGreaterThan"],
    `${propertyPath}.deletedAtGreaterThan`,
    errors,
  );
  result["deletedAtLowerThan"] = anonymousValidator1755360743(
    value["deletedAtLowerThan"],
    `${propertyPath}.deletedAtLowerThan`,
    errors,
  );
  if (
    !isNil(value["deletedAtIncludeNotNull"]) &&
    typeof value["deletedAtIncludeNotNull"] !== "boolean"
  ) {
    const parentType = "boolean";
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath: `${propertyPath}.deletedAtIncludeNotNull`,
    });
  }
  result["deletedAtIncludeNotNull"] =
    value["deletedAtIncludeNotNull"] ?? undefined;
  return result;
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {undefined|(StoreFileGroupWhere)[]|undefined}
 */
export function anonymousValidator224854480(
  value,
  propertyPath,
  errors = [],
  parentType = "array",
) {
  if (isNil(value)) {
    return value;
  }
  if (!Array.isArray(value)) {
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath,
    });
  }
  const result = Array.from({ length: value.length });
  for (let i = 0; i < value.length; ++i) {
    result[i] = anonymousValidator1733514216(
      value[i],
      `${propertyPath}[${i}]`,
      errors,
    );
  }
  return result;
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {undefined|string|undefined}
 */
export function anonymousValidator1106749310(
  value,
  propertyPath,
  errors = [],
  parentType = "uuid",
) {
  if (isNil(value)) {
    return value;
  }
  return anonymousValidator347945770(value, propertyPath, errors, "uuid");
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {string|undefined}
 */
export function anonymousValidator2053114493(
  value,
  propertyPath,
  errors = [],
  parentType = "uuid",
) {
  if (isNil(value)) {
    throw AppError.validationError(`validator.${parentType}.undefined`, {
      propertyPath,
    });
  }
  return anonymousValidator347945770(value, propertyPath, errors, "uuid");
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {undefined|(string)[]|undefined}
 */
export function anonymousValidator818091391(
  value,
  propertyPath,
  errors = [],
  parentType = "array",
) {
  if (isNil(value)) {
    return value;
  }
  if (!Array.isArray(value)) {
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath,
    });
  }
  const result = Array.from({ length: value.length });
  for (let i = 0; i < value.length; ++i) {
    result[i] = anonymousValidator2053114493(
      value[i],
      `${propertyPath}[${i}]`,
      errors,
    );
  }
  return result;
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {undefined|(string)[]|QueryPart|undefined}
 */
export function anonymousValidator583666138(
  value,
  propertyPath,
  errors = [],
  parentType = "anyOf",
) {
  if (isNil(value)) {
    return value;
  }
  const subErrors = [];
  try {
    return anonymousValidator818091391(value, propertyPath, subErrors);
  } catch (e) {
    subErrors.push(e);
  }
  try {
    if (!isNil(value) && !isQueryObject(value)) {
      const parentType = "any";
      throw AppError.validationError(`validator.${parentType}.custom`, {
        propertyPath: propertyPath,
      });
    }
    return value ?? undefined;
  } catch (e) {
    subErrors.push(e);
  }
  throw AppError.validationError(`validator.${parentType}.type`, {
    propertyPath,
    errors: subErrors,
  });
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {{"$or"?: (StoreFileGroupWhere)[], "id"?: string, "idNotEqual"?: string, "idIn"?: (string)[]|QueryPart, "idNotIn"?: (string)[]|QueryPart, "idLike"?: string, "idNotLike"?: string, "file"?: string, "fileNotEqual"?: string, "fileIn"?: (string)[]|QueryPart, "fileNotIn"?: (string)[]|QueryPart, "fileLike"?: string, "fileNotLike"?: string, "fileIsNull"?: boolean, "fileIsNotNull"?: boolean, "parent"?: string, "parentNotEqual"?: string, "parentIn"?: (string)[]|QueryPart, "parentNotIn"?: (string)[]|QueryPart, "parentLike"?: string, "parentNotLike"?: string, "parentIsNull"?: boolean, "parentIsNotNull"?: boolean, "createdAt"?: Date, "createdAtNotEqual"?: Date, "createdAtIn"?: (Date)[]|QueryPart, "createdAtNotIn"?: (Date)[]|QueryPart, "createdAtGreaterThan"?: Date, "createdAtLowerThan"?: Date, "createdAtIsNull"?: boolean, "createdAtIsNotNull"?: boolean, "updatedAt"?: Date, "updatedAtNotEqual"?: Date, "updatedAtIn"?: (Date)[]|QueryPart, "updatedAtNotIn"?: (Date)[]|QueryPart, "updatedAtGreaterThan"?: Date, "updatedAtLowerThan"?: Date, "updatedAtIsNull"?: boolean, "updatedAtIsNotNull"?: boolean, "deletedAt"?: Date, "deletedAtNotEqual"?: Date, "deletedAtIn"?: (Date)[]|QueryPart, "deletedAtNotIn"?: (Date)[]|QueryPart, "deletedAtGreaterThan"?: Date, "deletedAtLowerThan"?: Date, "deletedAtIncludeNotNull"?: boolean, }|undefined}
 */
export function anonymousValidator1733514216(
  value,
  propertyPath,
  errors = [],
  parentType = "object",
) {
  if (isNil(value)) {
    throw AppError.validationError(`validator.${parentType}.undefined`, {
      propertyPath,
    });
  }
  if (typeof value !== "object") {
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath,
    });
  }
  const result = Object.create(null);
  for (const key of Object.keys(value)) {
    if (!objectKeys1733514216.has(key)) {
      throw AppError.validationError(`validator.${parentType}.strict`, {
        propertyPath,
        extraKey: key,
      });
    }
  }
  result["$or"] = anonymousValidator224854480(
    value["$or"],
    `${propertyPath}.$or`,
    errors,
  );
  result["id"] = anonymousValidator1898931852(
    value["id"],
    `${propertyPath}.id`,
    errors,
  );
  result["idNotEqual"] = anonymousValidator1898931852(
    value["idNotEqual"],
    `${propertyPath}.idNotEqual`,
    errors,
  );
  result["idIn"] = anonymousValidator886319360(
    value["idIn"],
    `${propertyPath}.idIn`,
    errors,
  );
  result["idNotIn"] = anonymousValidator886319360(
    value["idNotIn"],
    `${propertyPath}.idNotIn`,
    errors,
  );
  result["idLike"] = anonymousValidator1898931852(
    value["idLike"],
    `${propertyPath}.idLike`,
    errors,
  );
  result["idNotLike"] = anonymousValidator1898931852(
    value["idNotLike"],
    `${propertyPath}.idNotLike`,
    errors,
  );
  result["file"] = anonymousValidator1106749310(
    value["file"],
    `${propertyPath}.file`,
    errors,
  );
  result["fileNotEqual"] = anonymousValidator1106749310(
    value["fileNotEqual"],
    `${propertyPath}.fileNotEqual`,
    errors,
  );
  result["fileIn"] = anonymousValidator583666138(
    value["fileIn"],
    `${propertyPath}.fileIn`,
    errors,
  );
  result["fileNotIn"] = anonymousValidator583666138(
    value["fileNotIn"],
    `${propertyPath}.fileNotIn`,
    errors,
  );
  result["fileLike"] = anonymousValidator1106749310(
    value["fileLike"],
    `${propertyPath}.fileLike`,
    errors,
  );
  result["fileNotLike"] = anonymousValidator1106749310(
    value["fileNotLike"],
    `${propertyPath}.fileNotLike`,
    errors,
  );
  if (!isNil(value["fileIsNull"]) && typeof value["fileIsNull"] !== "boolean") {
    const parentType = "boolean";
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath: `${propertyPath}.fileIsNull`,
    });
  }
  result["fileIsNull"] = value["fileIsNull"] ?? undefined;
  if (
    !isNil(value["fileIsNotNull"]) &&
    typeof value["fileIsNotNull"] !== "boolean"
  ) {
    const parentType = "boolean";
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath: `${propertyPath}.fileIsNotNull`,
    });
  }
  result["fileIsNotNull"] = value["fileIsNotNull"] ?? undefined;
  result["parent"] = anonymousValidator1106749310(
    value["parent"],
    `${propertyPath}.parent`,
    errors,
  );
  result["parentNotEqual"] = anonymousValidator1106749310(
    value["parentNotEqual"],
    `${propertyPath}.parentNotEqual`,
    errors,
  );
  result["parentIn"] = anonymousValidator583666138(
    value["parentIn"],
    `${propertyPath}.parentIn`,
    errors,
  );
  result["parentNotIn"] = anonymousValidator583666138(
    value["parentNotIn"],
    `${propertyPath}.parentNotIn`,
    errors,
  );
  result["parentLike"] = anonymousValidator1106749310(
    value["parentLike"],
    `${propertyPath}.parentLike`,
    errors,
  );
  result["parentNotLike"] = anonymousValidator1106749310(
    value["parentNotLike"],
    `${propertyPath}.parentNotLike`,
    errors,
  );
  if (
    !isNil(value["parentIsNull"]) &&
    typeof value["parentIsNull"] !== "boolean"
  ) {
    const parentType = "boolean";
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath: `${propertyPath}.parentIsNull`,
    });
  }
  result["parentIsNull"] = value["parentIsNull"] ?? undefined;
  if (
    !isNil(value["parentIsNotNull"]) &&
    typeof value["parentIsNotNull"] !== "boolean"
  ) {
    const parentType = "boolean";
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath: `${propertyPath}.parentIsNotNull`,
    });
  }
  result["parentIsNotNull"] = value["parentIsNotNull"] ?? undefined;
  result["createdAt"] = anonymousValidator1755360743(
    value["createdAt"],
    `${propertyPath}.createdAt`,
    errors,
  );
  result["createdAtNotEqual"] = anonymousValidator1755360743(
    value["createdAtNotEqual"],
    `${propertyPath}.createdAtNotEqual`,
    errors,
  );
  result["createdAtIn"] = anonymousValidator145617493(
    value["createdAtIn"],
    `${propertyPath}.createdAtIn`,
    errors,
  );
  result["createdAtNotIn"] = anonymousValidator145617493(
    value["createdAtNotIn"],
    `${propertyPath}.createdAtNotIn`,
    errors,
  );
  result["createdAtGreaterThan"] = anonymousValidator1755360743(
    value["createdAtGreaterThan"],
    `${propertyPath}.createdAtGreaterThan`,
    errors,
  );
  result["createdAtLowerThan"] = anonymousValidator1755360743(
    value["createdAtLowerThan"],
    `${propertyPath}.createdAtLowerThan`,
    errors,
  );
  if (
    !isNil(value["createdAtIsNull"]) &&
    typeof value["createdAtIsNull"] !== "boolean"
  ) {
    const parentType = "boolean";
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath: `${propertyPath}.createdAtIsNull`,
    });
  }
  result["createdAtIsNull"] = value["createdAtIsNull"] ?? undefined;
  if (
    !isNil(value["createdAtIsNotNull"]) &&
    typeof value["createdAtIsNotNull"] !== "boolean"
  ) {
    const parentType = "boolean";
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath: `${propertyPath}.createdAtIsNotNull`,
    });
  }
  result["createdAtIsNotNull"] = value["createdAtIsNotNull"] ?? undefined;
  result["updatedAt"] = anonymousValidator1755360743(
    value["updatedAt"],
    `${propertyPath}.updatedAt`,
    errors,
  );
  result["updatedAtNotEqual"] = anonymousValidator1755360743(
    value["updatedAtNotEqual"],
    `${propertyPath}.updatedAtNotEqual`,
    errors,
  );
  result["updatedAtIn"] = anonymousValidator145617493(
    value["updatedAtIn"],
    `${propertyPath}.updatedAtIn`,
    errors,
  );
  result["updatedAtNotIn"] = anonymousValidator145617493(
    value["updatedAtNotIn"],
    `${propertyPath}.updatedAtNotIn`,
    errors,
  );
  result["updatedAtGreaterThan"] = anonymousValidator1755360743(
    value["updatedAtGreaterThan"],
    `${propertyPath}.updatedAtGreaterThan`,
    errors,
  );
  result["updatedAtLowerThan"] = anonymousValidator1755360743(
    value["updatedAtLowerThan"],
    `${propertyPath}.updatedAtLowerThan`,
    errors,
  );
  if (
    !isNil(value["updatedAtIsNull"]) &&
    typeof value["updatedAtIsNull"] !== "boolean"
  ) {
    const parentType = "boolean";
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath: `${propertyPath}.updatedAtIsNull`,
    });
  }
  result["updatedAtIsNull"] = value["updatedAtIsNull"] ?? undefined;
  if (
    !isNil(value["updatedAtIsNotNull"]) &&
    typeof value["updatedAtIsNotNull"] !== "boolean"
  ) {
    const parentType = "boolean";
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath: `${propertyPath}.updatedAtIsNotNull`,
    });
  }
  result["updatedAtIsNotNull"] = value["updatedAtIsNotNull"] ?? undefined;
  result["deletedAt"] = anonymousValidator1755360743(
    value["deletedAt"],
    `${propertyPath}.deletedAt`,
    errors,
  );
  result["deletedAtNotEqual"] = anonymousValidator1755360743(
    value["deletedAtNotEqual"],
    `${propertyPath}.deletedAtNotEqual`,
    errors,
  );
  result["deletedAtIn"] = anonymousValidator145617493(
    value["deletedAtIn"],
    `${propertyPath}.deletedAtIn`,
    errors,
  );
  result["deletedAtNotIn"] = anonymousValidator145617493(
    value["deletedAtNotIn"],
    `${propertyPath}.deletedAtNotIn`,
    errors,
  );
  result["deletedAtGreaterThan"] = anonymousValidator1755360743(
    value["deletedAtGreaterThan"],
    `${propertyPath}.deletedAtGreaterThan`,
    errors,
  );
  result["deletedAtLowerThan"] = anonymousValidator1755360743(
    value["deletedAtLowerThan"],
    `${propertyPath}.deletedAtLowerThan`,
    errors,
  );
  if (
    !isNil(value["deletedAtIncludeNotNull"]) &&
    typeof value["deletedAtIncludeNotNull"] !== "boolean"
  ) {
    const parentType = "boolean";
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath: `${propertyPath}.deletedAtIncludeNotNull`,
    });
  }
  result["deletedAtIncludeNotNull"] =
    value["deletedAtIncludeNotNull"] ?? undefined;
  return result;
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {undefined|(StoreFileGroupViewWhere)[]|undefined}
 */
export function anonymousValidator112428976(
  value,
  propertyPath,
  errors = [],
  parentType = "array",
) {
  if (isNil(value)) {
    return value;
  }
  if (!Array.isArray(value)) {
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath,
    });
  }
  const result = Array.from({ length: value.length });
  for (let i = 0; i < value.length; ++i) {
    result[i] = anonymousValidator1218783160(
      value[i],
      `${propertyPath}[${i}]`,
      errors,
    );
  }
  return result;
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {{"$or"?: (StoreFileGroupViewWhere)[], "id"?: string, "idNotEqual"?: string, "idIn"?: (string)[]|QueryPart, "idNotIn"?: (string)[]|QueryPart, "idLike"?: string, "idNotLike"?: string, "isDirectory"?: boolean, "file"?: string, "fileNotEqual"?: string, "fileIn"?: (string)[]|QueryPart, "fileNotIn"?: (string)[]|QueryPart, "fileLike"?: string, "fileNotLike"?: string, "fileIsNull"?: boolean, "fileIsNotNull"?: boolean, "parent"?: string, "parentNotEqual"?: string, "parentIn"?: (string)[]|QueryPart, "parentNotIn"?: (string)[]|QueryPart, "parentLike"?: string, "parentNotLike"?: string, "parentIsNull"?: boolean, "parentIsNotNull"?: boolean, "createdAt"?: Date, "createdAtNotEqual"?: Date, "createdAtIn"?: (Date)[]|QueryPart, "createdAtNotIn"?: (Date)[]|QueryPart, "createdAtGreaterThan"?: Date, "createdAtLowerThan"?: Date, "createdAtIsNull"?: boolean, "createdAtIsNotNull"?: boolean, "updatedAt"?: Date, "updatedAtNotEqual"?: Date, "updatedAtIn"?: (Date)[]|QueryPart, "updatedAtNotIn"?: (Date)[]|QueryPart, "updatedAtGreaterThan"?: Date, "updatedAtLowerThan"?: Date, "updatedAtIsNull"?: boolean, "updatedAtIsNotNull"?: boolean, "deletedAt"?: Date, "deletedAtNotEqual"?: Date, "deletedAtIn"?: (Date)[]|QueryPart, "deletedAtNotIn"?: (Date)[]|QueryPart, "deletedAtGreaterThan"?: Date, "deletedAtLowerThan"?: Date, "deletedAtIncludeNotNull"?: boolean, }|undefined}
 */
export function anonymousValidator1218783160(
  value,
  propertyPath,
  errors = [],
  parentType = "object",
) {
  if (isNil(value)) {
    throw AppError.validationError(`validator.${parentType}.undefined`, {
      propertyPath,
    });
  }
  if (typeof value !== "object") {
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath,
    });
  }
  const result = Object.create(null);
  for (const key of Object.keys(value)) {
    if (!objectKeys1218783160.has(key)) {
      throw AppError.validationError(`validator.${parentType}.strict`, {
        propertyPath,
        extraKey: key,
      });
    }
  }
  result["$or"] = anonymousValidator112428976(
    value["$or"],
    `${propertyPath}.$or`,
    errors,
  );
  result["id"] = anonymousValidator1898931852(
    value["id"],
    `${propertyPath}.id`,
    errors,
  );
  result["idNotEqual"] = anonymousValidator1898931852(
    value["idNotEqual"],
    `${propertyPath}.idNotEqual`,
    errors,
  );
  result["idIn"] = anonymousValidator886319360(
    value["idIn"],
    `${propertyPath}.idIn`,
    errors,
  );
  result["idNotIn"] = anonymousValidator886319360(
    value["idNotIn"],
    `${propertyPath}.idNotIn`,
    errors,
  );
  result["idLike"] = anonymousValidator1898931852(
    value["idLike"],
    `${propertyPath}.idLike`,
    errors,
  );
  result["idNotLike"] = anonymousValidator1898931852(
    value["idNotLike"],
    `${propertyPath}.idNotLike`,
    errors,
  );
  if (
    !isNil(value["isDirectory"]) &&
    typeof value["isDirectory"] !== "boolean"
  ) {
    const parentType = "boolean";
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath: `${propertyPath}.isDirectory`,
    });
  }
  result["isDirectory"] = value["isDirectory"] ?? undefined;
  result["file"] = anonymousValidator1106749310(
    value["file"],
    `${propertyPath}.file`,
    errors,
  );
  result["fileNotEqual"] = anonymousValidator1106749310(
    value["fileNotEqual"],
    `${propertyPath}.fileNotEqual`,
    errors,
  );
  result["fileIn"] = anonymousValidator583666138(
    value["fileIn"],
    `${propertyPath}.fileIn`,
    errors,
  );
  result["fileNotIn"] = anonymousValidator583666138(
    value["fileNotIn"],
    `${propertyPath}.fileNotIn`,
    errors,
  );
  result["fileLike"] = anonymousValidator1106749310(
    value["fileLike"],
    `${propertyPath}.fileLike`,
    errors,
  );
  result["fileNotLike"] = anonymousValidator1106749310(
    value["fileNotLike"],
    `${propertyPath}.fileNotLike`,
    errors,
  );
  if (!isNil(value["fileIsNull"]) && typeof value["fileIsNull"] !== "boolean") {
    const parentType = "boolean";
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath: `${propertyPath}.fileIsNull`,
    });
  }
  result["fileIsNull"] = value["fileIsNull"] ?? undefined;
  if (
    !isNil(value["fileIsNotNull"]) &&
    typeof value["fileIsNotNull"] !== "boolean"
  ) {
    const parentType = "boolean";
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath: `${propertyPath}.fileIsNotNull`,
    });
  }
  result["fileIsNotNull"] = value["fileIsNotNull"] ?? undefined;
  result["parent"] = anonymousValidator1106749310(
    value["parent"],
    `${propertyPath}.parent`,
    errors,
  );
  result["parentNotEqual"] = anonymousValidator1106749310(
    value["parentNotEqual"],
    `${propertyPath}.parentNotEqual`,
    errors,
  );
  result["parentIn"] = anonymousValidator583666138(
    value["parentIn"],
    `${propertyPath}.parentIn`,
    errors,
  );
  result["parentNotIn"] = anonymousValidator583666138(
    value["parentNotIn"],
    `${propertyPath}.parentNotIn`,
    errors,
  );
  result["parentLike"] = anonymousValidator1106749310(
    value["parentLike"],
    `${propertyPath}.parentLike`,
    errors,
  );
  result["parentNotLike"] = anonymousValidator1106749310(
    value["parentNotLike"],
    `${propertyPath}.parentNotLike`,
    errors,
  );
  if (
    !isNil(value["parentIsNull"]) &&
    typeof value["parentIsNull"] !== "boolean"
  ) {
    const parentType = "boolean";
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath: `${propertyPath}.parentIsNull`,
    });
  }
  result["parentIsNull"] = value["parentIsNull"] ?? undefined;
  if (
    !isNil(value["parentIsNotNull"]) &&
    typeof value["parentIsNotNull"] !== "boolean"
  ) {
    const parentType = "boolean";
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath: `${propertyPath}.parentIsNotNull`,
    });
  }
  result["parentIsNotNull"] = value["parentIsNotNull"] ?? undefined;
  result["createdAt"] = anonymousValidator1755360743(
    value["createdAt"],
    `${propertyPath}.createdAt`,
    errors,
  );
  result["createdAtNotEqual"] = anonymousValidator1755360743(
    value["createdAtNotEqual"],
    `${propertyPath}.createdAtNotEqual`,
    errors,
  );
  result["createdAtIn"] = anonymousValidator145617493(
    value["createdAtIn"],
    `${propertyPath}.createdAtIn`,
    errors,
  );
  result["createdAtNotIn"] = anonymousValidator145617493(
    value["createdAtNotIn"],
    `${propertyPath}.createdAtNotIn`,
    errors,
  );
  result["createdAtGreaterThan"] = anonymousValidator1755360743(
    value["createdAtGreaterThan"],
    `${propertyPath}.createdAtGreaterThan`,
    errors,
  );
  result["createdAtLowerThan"] = anonymousValidator1755360743(
    value["createdAtLowerThan"],
    `${propertyPath}.createdAtLowerThan`,
    errors,
  );
  if (
    !isNil(value["createdAtIsNull"]) &&
    typeof value["createdAtIsNull"] !== "boolean"
  ) {
    const parentType = "boolean";
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath: `${propertyPath}.createdAtIsNull`,
    });
  }
  result["createdAtIsNull"] = value["createdAtIsNull"] ?? undefined;
  if (
    !isNil(value["createdAtIsNotNull"]) &&
    typeof value["createdAtIsNotNull"] !== "boolean"
  ) {
    const parentType = "boolean";
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath: `${propertyPath}.createdAtIsNotNull`,
    });
  }
  result["createdAtIsNotNull"] = value["createdAtIsNotNull"] ?? undefined;
  result["updatedAt"] = anonymousValidator1755360743(
    value["updatedAt"],
    `${propertyPath}.updatedAt`,
    errors,
  );
  result["updatedAtNotEqual"] = anonymousValidator1755360743(
    value["updatedAtNotEqual"],
    `${propertyPath}.updatedAtNotEqual`,
    errors,
  );
  result["updatedAtIn"] = anonymousValidator145617493(
    value["updatedAtIn"],
    `${propertyPath}.updatedAtIn`,
    errors,
  );
  result["updatedAtNotIn"] = anonymousValidator145617493(
    value["updatedAtNotIn"],
    `${propertyPath}.updatedAtNotIn`,
    errors,
  );
  result["updatedAtGreaterThan"] = anonymousValidator1755360743(
    value["updatedAtGreaterThan"],
    `${propertyPath}.updatedAtGreaterThan`,
    errors,
  );
  result["updatedAtLowerThan"] = anonymousValidator1755360743(
    value["updatedAtLowerThan"],
    `${propertyPath}.updatedAtLowerThan`,
    errors,
  );
  if (
    !isNil(value["updatedAtIsNull"]) &&
    typeof value["updatedAtIsNull"] !== "boolean"
  ) {
    const parentType = "boolean";
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath: `${propertyPath}.updatedAtIsNull`,
    });
  }
  result["updatedAtIsNull"] = value["updatedAtIsNull"] ?? undefined;
  if (
    !isNil(value["updatedAtIsNotNull"]) &&
    typeof value["updatedAtIsNotNull"] !== "boolean"
  ) {
    const parentType = "boolean";
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath: `${propertyPath}.updatedAtIsNotNull`,
    });
  }
  result["updatedAtIsNotNull"] = value["updatedAtIsNotNull"] ?? undefined;
  result["deletedAt"] = anonymousValidator1755360743(
    value["deletedAt"],
    `${propertyPath}.deletedAt`,
    errors,
  );
  result["deletedAtNotEqual"] = anonymousValidator1755360743(
    value["deletedAtNotEqual"],
    `${propertyPath}.deletedAtNotEqual`,
    errors,
  );
  result["deletedAtIn"] = anonymousValidator145617493(
    value["deletedAtIn"],
    `${propertyPath}.deletedAtIn`,
    errors,
  );
  result["deletedAtNotIn"] = anonymousValidator145617493(
    value["deletedAtNotIn"],
    `${propertyPath}.deletedAtNotIn`,
    errors,
  );
  result["deletedAtGreaterThan"] = anonymousValidator1755360743(
    value["deletedAtGreaterThan"],
    `${propertyPath}.deletedAtGreaterThan`,
    errors,
  );
  result["deletedAtLowerThan"] = anonymousValidator1755360743(
    value["deletedAtLowerThan"],
    `${propertyPath}.deletedAtLowerThan`,
    errors,
  );
  if (
    !isNil(value["deletedAtIncludeNotNull"]) &&
    typeof value["deletedAtIncludeNotNull"] !== "boolean"
  ) {
    const parentType = "boolean";
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath: `${propertyPath}.deletedAtIncludeNotNull`,
    });
  }
  result["deletedAtIncludeNotNull"] =
    value["deletedAtIncludeNotNull"] ?? undefined;
  return result;
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {undefined|(StoreJobWhere)[]|undefined}
 */
export function anonymousValidator2033558767(
  value,
  propertyPath,
  errors = [],
  parentType = "array",
) {
  if (isNil(value)) {
    return value;
  }
  if (!Array.isArray(value)) {
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath,
    });
  }
  const result = Array.from({ length: value.length });
  for (let i = 0; i < value.length; ++i) {
    result[i] = anonymousValidator56200775(
      value[i],
      `${propertyPath}[${i}]`,
      errors,
    );
  }
  return result;
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {undefined|number|undefined}
 */
export function anonymousValidator675406488(
  value,
  propertyPath,
  errors = [],
  parentType = "number",
) {
  if (isNil(value)) {
    return value;
  }
  if (typeof value !== "number") {
    value = Number(value);
  }
  if (typeof value !== "number" || isNaN(value) || !isFinite(value)) {
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath,
    });
  }
  if (!Number.isInteger(value)) {
    throw AppError.validationError(`validator.${parentType}.integer`, {
      propertyPath,
    });
  }
  return value;
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {number|undefined}
 */
export function anonymousValidator1606668869(
  value,
  propertyPath,
  errors = [],
  parentType = "number",
) {
  if (isNil(value)) {
    throw AppError.validationError(`validator.${parentType}.undefined`, {
      propertyPath,
    });
  }
  if (typeof value !== "number") {
    value = Number(value);
  }
  if (typeof value !== "number" || isNaN(value) || !isFinite(value)) {
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath,
    });
  }
  if (!Number.isInteger(value)) {
    throw AppError.validationError(`validator.${parentType}.integer`, {
      propertyPath,
    });
  }
  return value;
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {undefined|(number)[]|undefined}
 */
export function anonymousValidator1456865145(
  value,
  propertyPath,
  errors = [],
  parentType = "array",
) {
  if (isNil(value)) {
    return value;
  }
  if (!Array.isArray(value)) {
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath,
    });
  }
  const result = Array.from({ length: value.length });
  for (let i = 0; i < value.length; ++i) {
    result[i] = anonymousValidator1606668869(
      value[i],
      `${propertyPath}[${i}]`,
      errors,
    );
  }
  return result;
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {undefined|(number)[]|QueryPart|undefined}
 */
export function anonymousValidator145156769(
  value,
  propertyPath,
  errors = [],
  parentType = "anyOf",
) {
  if (isNil(value)) {
    return value;
  }
  const subErrors = [];
  try {
    return anonymousValidator1456865145(value, propertyPath, subErrors);
  } catch (e) {
    subErrors.push(e);
  }
  try {
    if (!isNil(value) && !isQueryObject(value)) {
      const parentType = "any";
      throw AppError.validationError(`validator.${parentType}.custom`, {
        propertyPath: propertyPath,
      });
    }
    return value ?? undefined;
  } catch (e) {
    subErrors.push(e);
  }
  throw AppError.validationError(`validator.${parentType}.type`, {
    propertyPath,
    errors: subErrors,
  });
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {undefined|Date|undefined}
 */
export function anonymousValidator1844023131(
  value,
  propertyPath,
  errors = [],
  parentType = "date",
) {
  if (isNil(value)) {
    return value;
  }
  if (typeof value === "string") {
    value = anonymousValidator1559815992(value, propertyPath, errors, "date");
  }
  try {
    const date = new Date(value);
    if (!isNaN(date.getTime())) {
      return date;
    }
  } catch {
    throw AppError.validationError(`validator.${parentType}.invalid`, {
      propertyPath,
    });
  }
  throw AppError.validationError(`validator.${parentType}.invalid`, {
    propertyPath,
  });
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {Date|undefined}
 */
export function anonymousValidator963747746(
  value,
  propertyPath,
  errors = [],
  parentType = "date",
) {
  if (isNil(value)) {
    throw AppError.validationError(`validator.${parentType}.undefined`, {
      propertyPath,
    });
  }
  if (typeof value === "string") {
    value = anonymousValidator1559815992(value, propertyPath, errors, "date");
  }
  try {
    const date = new Date(value);
    if (!isNaN(date.getTime())) {
      return date;
    }
  } catch {
    throw AppError.validationError(`validator.${parentType}.invalid`, {
      propertyPath,
    });
  }
  throw AppError.validationError(`validator.${parentType}.invalid`, {
    propertyPath,
  });
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {undefined|(Date)[]|undefined}
 */
export function anonymousValidator87843804(
  value,
  propertyPath,
  errors = [],
  parentType = "array",
) {
  if (isNil(value)) {
    return value;
  }
  if (!Array.isArray(value)) {
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath,
    });
  }
  const result = Array.from({ length: value.length });
  for (let i = 0; i < value.length; ++i) {
    result[i] = anonymousValidator963747746(
      value[i],
      `${propertyPath}[${i}]`,
      errors,
    );
  }
  return result;
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {undefined|(Date)[]|QueryPart|undefined}
 */
export function anonymousValidator2043966849(
  value,
  propertyPath,
  errors = [],
  parentType = "anyOf",
) {
  if (isNil(value)) {
    return value;
  }
  const subErrors = [];
  try {
    return anonymousValidator87843804(value, propertyPath, subErrors);
  } catch (e) {
    subErrors.push(e);
  }
  try {
    if (!isNil(value) && !isQueryObject(value)) {
      const parentType = "any";
      throw AppError.validationError(`validator.${parentType}.custom`, {
        propertyPath: propertyPath,
      });
    }
    return value ?? undefined;
  } catch (e) {
    subErrors.push(e);
  }
  throw AppError.validationError(`validator.${parentType}.type`, {
    propertyPath,
    errors: subErrors,
  });
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {{"$or"?: (StoreJobWhere)[], "id"?: number, "idNotEqual"?: number, "idIn"?: (number)[]|QueryPart, "idNotIn"?: (number)[]|QueryPart, "idGreaterThan"?: number, "idLowerThan"?: number, "isComplete"?: boolean, "isCompleteIsNull"?: boolean, "isCompleteIsNotNull"?: boolean, "name"?: string, "nameNotEqual"?: string, "nameIn"?: (string)[]|QueryPart, "nameNotIn"?: (string)[]|QueryPart, "nameLike"?: string, "nameNotLike"?: string, "scheduledAt"?: Date, "scheduledAtNotEqual"?: Date, "scheduledAtIn"?: (Date)[]|QueryPart, "scheduledAtNotIn"?: (Date)[]|QueryPart, "scheduledAtGreaterThan"?: Date, "scheduledAtLowerThan"?: Date, "scheduledAtIsNull"?: boolean, "scheduledAtIsNotNull"?: boolean, "createdAt"?: Date, "createdAtNotEqual"?: Date, "createdAtIn"?: (Date)[]|QueryPart, "createdAtNotIn"?: (Date)[]|QueryPart, "createdAtGreaterThan"?: Date, "createdAtLowerThan"?: Date, "createdAtIsNull"?: boolean, "createdAtIsNotNull"?: boolean, "updatedAt"?: Date, "updatedAtNotEqual"?: Date, "updatedAtIn"?: (Date)[]|QueryPart, "updatedAtNotIn"?: (Date)[]|QueryPart, "updatedAtGreaterThan"?: Date, "updatedAtLowerThan"?: Date, "updatedAtIsNull"?: boolean, "updatedAtIsNotNull"?: boolean, }|undefined}
 */
export function anonymousValidator56200775(
  value,
  propertyPath,
  errors = [],
  parentType = "object",
) {
  if (isNil(value)) {
    throw AppError.validationError(`validator.${parentType}.undefined`, {
      propertyPath,
    });
  }
  if (typeof value !== "object") {
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath,
    });
  }
  const result = Object.create(null);
  for (const key of Object.keys(value)) {
    if (!objectKeys56200775.has(key)) {
      throw AppError.validationError(`validator.${parentType}.strict`, {
        propertyPath,
        extraKey: key,
      });
    }
  }
  result["$or"] = anonymousValidator2033558767(
    value["$or"],
    `${propertyPath}.$or`,
    errors,
  );
  result["id"] = anonymousValidator675406488(
    value["id"],
    `${propertyPath}.id`,
    errors,
  );
  result["idNotEqual"] = anonymousValidator675406488(
    value["idNotEqual"],
    `${propertyPath}.idNotEqual`,
    errors,
  );
  result["idIn"] = anonymousValidator145156769(
    value["idIn"],
    `${propertyPath}.idIn`,
    errors,
  );
  result["idNotIn"] = anonymousValidator145156769(
    value["idNotIn"],
    `${propertyPath}.idNotIn`,
    errors,
  );
  result["idGreaterThan"] = anonymousValidator675406488(
    value["idGreaterThan"],
    `${propertyPath}.idGreaterThan`,
    errors,
  );
  result["idLowerThan"] = anonymousValidator675406488(
    value["idLowerThan"],
    `${propertyPath}.idLowerThan`,
    errors,
  );
  if (!isNil(value["isComplete"]) && typeof value["isComplete"] !== "boolean") {
    const parentType = "boolean";
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath: `${propertyPath}.isComplete`,
    });
  }
  result["isComplete"] = value["isComplete"] ?? undefined;
  if (
    !isNil(value["isCompleteIsNull"]) &&
    typeof value["isCompleteIsNull"] !== "boolean"
  ) {
    const parentType = "boolean";
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath: `${propertyPath}.isCompleteIsNull`,
    });
  }
  result["isCompleteIsNull"] = value["isCompleteIsNull"] ?? undefined;
  if (
    !isNil(value["isCompleteIsNotNull"]) &&
    typeof value["isCompleteIsNotNull"] !== "boolean"
  ) {
    const parentType = "boolean";
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath: `${propertyPath}.isCompleteIsNotNull`,
    });
  }
  result["isCompleteIsNotNull"] = value["isCompleteIsNotNull"] ?? undefined;
  result["name"] = anonymousValidator167801359(
    value["name"],
    `${propertyPath}.name`,
    errors,
  );
  result["nameNotEqual"] = anonymousValidator167801359(
    value["nameNotEqual"],
    `${propertyPath}.nameNotEqual`,
    errors,
  );
  result["nameIn"] = anonymousValidator927685879(
    value["nameIn"],
    `${propertyPath}.nameIn`,
    errors,
  );
  result["nameNotIn"] = anonymousValidator927685879(
    value["nameNotIn"],
    `${propertyPath}.nameNotIn`,
    errors,
  );
  result["nameLike"] = anonymousValidator167801359(
    value["nameLike"],
    `${propertyPath}.nameLike`,
    errors,
  );
  result["nameNotLike"] = anonymousValidator167801359(
    value["nameNotLike"],
    `${propertyPath}.nameNotLike`,
    errors,
  );
  result["scheduledAt"] = anonymousValidator1844023131(
    value["scheduledAt"],
    `${propertyPath}.scheduledAt`,
    errors,
  );
  result["scheduledAtNotEqual"] = anonymousValidator1844023131(
    value["scheduledAtNotEqual"],
    `${propertyPath}.scheduledAtNotEqual`,
    errors,
  );
  result["scheduledAtIn"] = anonymousValidator2043966849(
    value["scheduledAtIn"],
    `${propertyPath}.scheduledAtIn`,
    errors,
  );
  result["scheduledAtNotIn"] = anonymousValidator2043966849(
    value["scheduledAtNotIn"],
    `${propertyPath}.scheduledAtNotIn`,
    errors,
  );
  result["scheduledAtGreaterThan"] = anonymousValidator1844023131(
    value["scheduledAtGreaterThan"],
    `${propertyPath}.scheduledAtGreaterThan`,
    errors,
  );
  result["scheduledAtLowerThan"] = anonymousValidator1844023131(
    value["scheduledAtLowerThan"],
    `${propertyPath}.scheduledAtLowerThan`,
    errors,
  );
  if (
    !isNil(value["scheduledAtIsNull"]) &&
    typeof value["scheduledAtIsNull"] !== "boolean"
  ) {
    const parentType = "boolean";
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath: `${propertyPath}.scheduledAtIsNull`,
    });
  }
  result["scheduledAtIsNull"] = value["scheduledAtIsNull"] ?? undefined;
  if (
    !isNil(value["scheduledAtIsNotNull"]) &&
    typeof value["scheduledAtIsNotNull"] !== "boolean"
  ) {
    const parentType = "boolean";
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath: `${propertyPath}.scheduledAtIsNotNull`,
    });
  }
  result["scheduledAtIsNotNull"] = value["scheduledAtIsNotNull"] ?? undefined;
  result["createdAt"] = anonymousValidator1755360743(
    value["createdAt"],
    `${propertyPath}.createdAt`,
    errors,
  );
  result["createdAtNotEqual"] = anonymousValidator1755360743(
    value["createdAtNotEqual"],
    `${propertyPath}.createdAtNotEqual`,
    errors,
  );
  result["createdAtIn"] = anonymousValidator145617493(
    value["createdAtIn"],
    `${propertyPath}.createdAtIn`,
    errors,
  );
  result["createdAtNotIn"] = anonymousValidator145617493(
    value["createdAtNotIn"],
    `${propertyPath}.createdAtNotIn`,
    errors,
  );
  result["createdAtGreaterThan"] = anonymousValidator1755360743(
    value["createdAtGreaterThan"],
    `${propertyPath}.createdAtGreaterThan`,
    errors,
  );
  result["createdAtLowerThan"] = anonymousValidator1755360743(
    value["createdAtLowerThan"],
    `${propertyPath}.createdAtLowerThan`,
    errors,
  );
  if (
    !isNil(value["createdAtIsNull"]) &&
    typeof value["createdAtIsNull"] !== "boolean"
  ) {
    const parentType = "boolean";
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath: `${propertyPath}.createdAtIsNull`,
    });
  }
  result["createdAtIsNull"] = value["createdAtIsNull"] ?? undefined;
  if (
    !isNil(value["createdAtIsNotNull"]) &&
    typeof value["createdAtIsNotNull"] !== "boolean"
  ) {
    const parentType = "boolean";
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath: `${propertyPath}.createdAtIsNotNull`,
    });
  }
  result["createdAtIsNotNull"] = value["createdAtIsNotNull"] ?? undefined;
  result["updatedAt"] = anonymousValidator1755360743(
    value["updatedAt"],
    `${propertyPath}.updatedAt`,
    errors,
  );
  result["updatedAtNotEqual"] = anonymousValidator1755360743(
    value["updatedAtNotEqual"],
    `${propertyPath}.updatedAtNotEqual`,
    errors,
  );
  result["updatedAtIn"] = anonymousValidator145617493(
    value["updatedAtIn"],
    `${propertyPath}.updatedAtIn`,
    errors,
  );
  result["updatedAtNotIn"] = anonymousValidator145617493(
    value["updatedAtNotIn"],
    `${propertyPath}.updatedAtNotIn`,
    errors,
  );
  result["updatedAtGreaterThan"] = anonymousValidator1755360743(
    value["updatedAtGreaterThan"],
    `${propertyPath}.updatedAtGreaterThan`,
    errors,
  );
  result["updatedAtLowerThan"] = anonymousValidator1755360743(
    value["updatedAtLowerThan"],
    `${propertyPath}.updatedAtLowerThan`,
    errors,
  );
  if (
    !isNil(value["updatedAtIsNull"]) &&
    typeof value["updatedAtIsNull"] !== "boolean"
  ) {
    const parentType = "boolean";
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath: `${propertyPath}.updatedAtIsNull`,
    });
  }
  result["updatedAtIsNull"] = value["updatedAtIsNull"] ?? undefined;
  if (
    !isNil(value["updatedAtIsNotNull"]) &&
    typeof value["updatedAtIsNotNull"] !== "boolean"
  ) {
    const parentType = "boolean";
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath: `${propertyPath}.updatedAtIsNotNull`,
    });
  }
  result["updatedAtIsNotNull"] = value["updatedAtIsNotNull"] ?? undefined;
  return result;
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {undefined|(StoreSessionWhere)[]|undefined}
 */
export function anonymousValidator884899794(
  value,
  propertyPath,
  errors = [],
  parentType = "array",
) {
  if (isNil(value)) {
    return value;
  }
  if (!Array.isArray(value)) {
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath,
    });
  }
  const result = Array.from({ length: value.length });
  for (let i = 0; i < value.length; ++i) {
    result[i] = anonymousValidator1230824634(
      value[i],
      `${propertyPath}[${i}]`,
      errors,
    );
  }
  return result;
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {undefined|Date|undefined}
 */
export function anonymousValidator1969893909(
  value,
  propertyPath,
  errors = [],
  parentType = "date",
) {
  if (isNil(value)) {
    return value;
  }
  if (typeof value === "string") {
    value = anonymousValidator1559815992(value, propertyPath, errors, "date");
  }
  try {
    const date = new Date(value);
    if (!isNaN(date.getTime())) {
      return date;
    }
  } catch {
    throw AppError.validationError(`validator.${parentType}.invalid`, {
      propertyPath,
    });
  }
  throw AppError.validationError(`validator.${parentType}.invalid`, {
    propertyPath,
  });
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {Date|undefined}
 */
export function anonymousValidator1444798002(
  value,
  propertyPath,
  errors = [],
  parentType = "date",
) {
  if (isNil(value)) {
    throw AppError.validationError(`validator.${parentType}.undefined`, {
      propertyPath,
    });
  }
  if (typeof value === "string") {
    value = anonymousValidator1559815992(value, propertyPath, errors, "date");
  }
  try {
    const date = new Date(value);
    if (!isNaN(date.getTime())) {
      return date;
    }
  } catch {
    throw AppError.validationError(`validator.${parentType}.invalid`, {
      propertyPath,
    });
  }
  throw AppError.validationError(`validator.${parentType}.invalid`, {
    propertyPath,
  });
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {undefined|(Date)[]|undefined}
 */
export function anonymousValidator104227892(
  value,
  propertyPath,
  errors = [],
  parentType = "array",
) {
  if (isNil(value)) {
    return value;
  }
  if (!Array.isArray(value)) {
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath,
    });
  }
  const result = Array.from({ length: value.length });
  for (let i = 0; i < value.length; ++i) {
    result[i] = anonymousValidator1444798002(
      value[i],
      `${propertyPath}[${i}]`,
      errors,
    );
  }
  return result;
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {undefined|(Date)[]|QueryPart|undefined}
 */
export function anonymousValidator1525847439(
  value,
  propertyPath,
  errors = [],
  parentType = "anyOf",
) {
  if (isNil(value)) {
    return value;
  }
  const subErrors = [];
  try {
    return anonymousValidator104227892(value, propertyPath, subErrors);
  } catch (e) {
    subErrors.push(e);
  }
  try {
    if (!isNil(value) && !isQueryObject(value)) {
      const parentType = "any";
      throw AppError.validationError(`validator.${parentType}.custom`, {
        propertyPath: propertyPath,
      });
    }
    return value ?? undefined;
  } catch (e) {
    subErrors.push(e);
  }
  throw AppError.validationError(`validator.${parentType}.type`, {
    propertyPath,
    errors: subErrors,
  });
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {{"$or"?: (StoreSessionWhere)[], "id"?: string, "idNotEqual"?: string, "idIn"?: (string)[]|QueryPart, "idNotIn"?: (string)[]|QueryPart, "idLike"?: string, "idNotLike"?: string, "expires"?: Date, "expiresNotEqual"?: Date, "expiresIn"?: (Date)[]|QueryPart, "expiresNotIn"?: (Date)[]|QueryPart, "expiresGreaterThan"?: Date, "expiresLowerThan"?: Date, "createdAt"?: Date, "createdAtNotEqual"?: Date, "createdAtIn"?: (Date)[]|QueryPart, "createdAtNotIn"?: (Date)[]|QueryPart, "createdAtGreaterThan"?: Date, "createdAtLowerThan"?: Date, "createdAtIsNull"?: boolean, "createdAtIsNotNull"?: boolean, "updatedAt"?: Date, "updatedAtNotEqual"?: Date, "updatedAtIn"?: (Date)[]|QueryPart, "updatedAtNotIn"?: (Date)[]|QueryPart, "updatedAtGreaterThan"?: Date, "updatedAtLowerThan"?: Date, "updatedAtIsNull"?: boolean, "updatedAtIsNotNull"?: boolean, }|undefined}
 */
export function anonymousValidator1230824634(
  value,
  propertyPath,
  errors = [],
  parentType = "object",
) {
  if (isNil(value)) {
    throw AppError.validationError(`validator.${parentType}.undefined`, {
      propertyPath,
    });
  }
  if (typeof value !== "object") {
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath,
    });
  }
  const result = Object.create(null);
  for (const key of Object.keys(value)) {
    if (!objectKeys1230824634.has(key)) {
      throw AppError.validationError(`validator.${parentType}.strict`, {
        propertyPath,
        extraKey: key,
      });
    }
  }
  result["$or"] = anonymousValidator884899794(
    value["$or"],
    `${propertyPath}.$or`,
    errors,
  );
  result["id"] = anonymousValidator1898931852(
    value["id"],
    `${propertyPath}.id`,
    errors,
  );
  result["idNotEqual"] = anonymousValidator1898931852(
    value["idNotEqual"],
    `${propertyPath}.idNotEqual`,
    errors,
  );
  result["idIn"] = anonymousValidator886319360(
    value["idIn"],
    `${propertyPath}.idIn`,
    errors,
  );
  result["idNotIn"] = anonymousValidator886319360(
    value["idNotIn"],
    `${propertyPath}.idNotIn`,
    errors,
  );
  result["idLike"] = anonymousValidator1898931852(
    value["idLike"],
    `${propertyPath}.idLike`,
    errors,
  );
  result["idNotLike"] = anonymousValidator1898931852(
    value["idNotLike"],
    `${propertyPath}.idNotLike`,
    errors,
  );
  result["expires"] = anonymousValidator1969893909(
    value["expires"],
    `${propertyPath}.expires`,
    errors,
  );
  result["expiresNotEqual"] = anonymousValidator1969893909(
    value["expiresNotEqual"],
    `${propertyPath}.expiresNotEqual`,
    errors,
  );
  result["expiresIn"] = anonymousValidator1525847439(
    value["expiresIn"],
    `${propertyPath}.expiresIn`,
    errors,
  );
  result["expiresNotIn"] = anonymousValidator1525847439(
    value["expiresNotIn"],
    `${propertyPath}.expiresNotIn`,
    errors,
  );
  result["expiresGreaterThan"] = anonymousValidator1969893909(
    value["expiresGreaterThan"],
    `${propertyPath}.expiresGreaterThan`,
    errors,
  );
  result["expiresLowerThan"] = anonymousValidator1969893909(
    value["expiresLowerThan"],
    `${propertyPath}.expiresLowerThan`,
    errors,
  );
  result["createdAt"] = anonymousValidator1755360743(
    value["createdAt"],
    `${propertyPath}.createdAt`,
    errors,
  );
  result["createdAtNotEqual"] = anonymousValidator1755360743(
    value["createdAtNotEqual"],
    `${propertyPath}.createdAtNotEqual`,
    errors,
  );
  result["createdAtIn"] = anonymousValidator145617493(
    value["createdAtIn"],
    `${propertyPath}.createdAtIn`,
    errors,
  );
  result["createdAtNotIn"] = anonymousValidator145617493(
    value["createdAtNotIn"],
    `${propertyPath}.createdAtNotIn`,
    errors,
  );
  result["createdAtGreaterThan"] = anonymousValidator1755360743(
    value["createdAtGreaterThan"],
    `${propertyPath}.createdAtGreaterThan`,
    errors,
  );
  result["createdAtLowerThan"] = anonymousValidator1755360743(
    value["createdAtLowerThan"],
    `${propertyPath}.createdAtLowerThan`,
    errors,
  );
  if (
    !isNil(value["createdAtIsNull"]) &&
    typeof value["createdAtIsNull"] !== "boolean"
  ) {
    const parentType = "boolean";
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath: `${propertyPath}.createdAtIsNull`,
    });
  }
  result["createdAtIsNull"] = value["createdAtIsNull"] ?? undefined;
  if (
    !isNil(value["createdAtIsNotNull"]) &&
    typeof value["createdAtIsNotNull"] !== "boolean"
  ) {
    const parentType = "boolean";
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath: `${propertyPath}.createdAtIsNotNull`,
    });
  }
  result["createdAtIsNotNull"] = value["createdAtIsNotNull"] ?? undefined;
  result["updatedAt"] = anonymousValidator1755360743(
    value["updatedAt"],
    `${propertyPath}.updatedAt`,
    errors,
  );
  result["updatedAtNotEqual"] = anonymousValidator1755360743(
    value["updatedAtNotEqual"],
    `${propertyPath}.updatedAtNotEqual`,
    errors,
  );
  result["updatedAtIn"] = anonymousValidator145617493(
    value["updatedAtIn"],
    `${propertyPath}.updatedAtIn`,
    errors,
  );
  result["updatedAtNotIn"] = anonymousValidator145617493(
    value["updatedAtNotIn"],
    `${propertyPath}.updatedAtNotIn`,
    errors,
  );
  result["updatedAtGreaterThan"] = anonymousValidator1755360743(
    value["updatedAtGreaterThan"],
    `${propertyPath}.updatedAtGreaterThan`,
    errors,
  );
  result["updatedAtLowerThan"] = anonymousValidator1755360743(
    value["updatedAtLowerThan"],
    `${propertyPath}.updatedAtLowerThan`,
    errors,
  );
  if (
    !isNil(value["updatedAtIsNull"]) &&
    typeof value["updatedAtIsNull"] !== "boolean"
  ) {
    const parentType = "boolean";
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath: `${propertyPath}.updatedAtIsNull`,
    });
  }
  result["updatedAtIsNull"] = value["updatedAtIsNull"] ?? undefined;
  if (
    !isNil(value["updatedAtIsNotNull"]) &&
    typeof value["updatedAtIsNotNull"] !== "boolean"
  ) {
    const parentType = "boolean";
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath: `${propertyPath}.updatedAtIsNotNull`,
    });
  }
  result["updatedAtIsNotNull"] = value["updatedAtIsNotNull"] ?? undefined;
  return result;
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {undefined|StoreFileWhere|undefined}
 */
export function anonymousValidator1200800342(
  value,
  propertyPath,
  errors = [],
  parentType = "reference",
) {
  if (isNil(value)) {
    return value;
  }
  return anonymousValidator584509299(value, propertyPath, errors);
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {undefined|string|undefined}
 */
export function anonymousValidator1173353814(
  value,
  propertyPath,
  errors = [],
  parentType = "string",
) {
  if (isNil(value)) {
    return value;
  }
  if (typeof value !== "string") {
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath,
    });
  }
  if (value.length === 0) {
    return undefined;
  }
  if (value.length < 1) {
    const min = 1;
    throw AppError.validationError(`validator.${parentType}.min`, {
      propertyPath,
      min,
    });
  }
  return value;
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {undefined|number|undefined}
 */
export function anonymousValidator532730482(
  value,
  propertyPath,
  errors = [],
  parentType = "number",
) {
  if (isNil(value)) {
    return value;
  }
  if (typeof value !== "number" || isNaN(value) || !isFinite(value)) {
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath,
    });
  }
  if (!Number.isInteger(value)) {
    throw AppError.validationError(`validator.${parentType}.integer`, {
      propertyPath,
    });
  }
  return value;
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {undefined|StoreFileGroupWhere|undefined}
 */
export function anonymousValidator1321088693(
  value,
  propertyPath,
  errors = [],
  parentType = "reference",
) {
  if (isNil(value)) {
    return value;
  }
  return anonymousValidator1733514216(value, propertyPath, errors);
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {undefined|StoreFileQueryBuilder|undefined}
 */
export function anonymousValidator1309963980(
  value,
  propertyPath,
  errors = [],
  parentType = "reference",
) {
  if (isNil(value)) {
    return value;
  }
  return anonymousValidator1644755967(value, propertyPath, errors);
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {undefined|StoreFileGroupQueryTraverser|undefined}
 */
export function anonymousValidator139189942(
  value,
  propertyPath,
  errors = [],
  parentType = "reference",
) {
  if (isNil(value)) {
    return value;
  }
  return anonymousValidator1162678868(value, propertyPath, errors);
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {undefined|StoreFileGroupQueryTraverser|undefined}
 */
export function anonymousValidator766879734(
  value,
  propertyPath,
  errors = [],
  parentType = "reference",
) {
  if (isNil(value)) {
    return value;
  }
  return anonymousValidator1162678868(value, propertyPath, errors);
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {{"where"?: StoreFileGroupWhere, "limit"?: number, "offset"?: number, "viaFile"?: StoreFileQueryTraverser, "viaParent"?: StoreFileGroupQueryTraverser, "viaChildren"?: StoreFileGroupQueryTraverser, }|undefined}
 */
export function anonymousValidator1162678868(
  value,
  propertyPath,
  errors = [],
  parentType = "object",
) {
  if (isNil(value)) {
    throw AppError.validationError(`validator.${parentType}.undefined`, {
      propertyPath,
    });
  }
  if (typeof value !== "object") {
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath,
    });
  }
  const result = Object.create(null);
  for (const key of Object.keys(value)) {
    if (!objectKeys1162678868.has(key)) {
      throw AppError.validationError(`validator.${parentType}.strict`, {
        propertyPath,
        extraKey: key,
      });
    }
  }
  result["where"] = anonymousValidator1321088693(
    value["where"],
    `${propertyPath}.where`,
    errors,
  );
  result["limit"] = anonymousValidator532730482(
    value["limit"],
    `${propertyPath}.limit`,
    errors,
  );
  result["offset"] = anonymousValidator532730482(
    value["offset"],
    `${propertyPath}.offset`,
    errors,
  );
  result["viaFile"] = anonymousValidator176237280(
    value["viaFile"],
    `${propertyPath}.viaFile`,
    errors,
  );
  result["viaParent"] = anonymousValidator139189942(
    value["viaParent"],
    `${propertyPath}.viaParent`,
    errors,
  );
  result["viaChildren"] = anonymousValidator766879734(
    value["viaChildren"],
    `${propertyPath}.viaChildren`,
    errors,
  );
  return result;
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {undefined|StoreFileGroupQueryTraverser|undefined}
 */
export function anonymousValidator970644004(
  value,
  propertyPath,
  errors = [],
  parentType = "reference",
) {
  if (isNil(value)) {
    return value;
  }
  return anonymousValidator1162678868(value, propertyPath, errors);
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {undefined|StoreFileGroupViewWhere|undefined}
 */
export function anonymousValidator1460353109(
  value,
  propertyPath,
  errors = [],
  parentType = "reference",
) {
  if (isNil(value)) {
    return value;
  }
  return anonymousValidator1218783160(value, propertyPath, errors);
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {undefined|StoreFileQueryTraverser|undefined}
 */
export function anonymousValidator937805268(
  value,
  propertyPath,
  errors = [],
  parentType = "reference",
) {
  if (isNil(value)) {
    return value;
  }
  return anonymousValidator474447723(value, propertyPath, errors);
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {undefined|StoreFileGroupViewQueryTraverser|undefined}
 */
export function anonymousValidator1011510152(
  value,
  propertyPath,
  errors = [],
  parentType = "reference",
) {
  if (isNil(value)) {
    return value;
  }
  return anonymousValidator1329935837(value, propertyPath, errors);
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {undefined|StoreFileGroupViewQueryTraverser|undefined}
 */
export function anonymousValidator251087480(
  value,
  propertyPath,
  errors = [],
  parentType = "reference",
) {
  if (isNil(value)) {
    return value;
  }
  return anonymousValidator1329935837(value, propertyPath, errors);
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {{"where"?: StoreFileGroupViewWhere, "limit"?: number, "offset"?: number, "viaFile"?: StoreFileQueryTraverser, "viaParent"?: StoreFileGroupViewQueryTraverser, "viaChildren"?: StoreFileGroupViewQueryTraverser, }|undefined}
 */
export function anonymousValidator1329935837(
  value,
  propertyPath,
  errors = [],
  parentType = "object",
) {
  if (isNil(value)) {
    throw AppError.validationError(`validator.${parentType}.undefined`, {
      propertyPath,
    });
  }
  if (typeof value !== "object") {
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath,
    });
  }
  const result = Object.create(null);
  for (const key of Object.keys(value)) {
    if (!objectKeys1329935837.has(key)) {
      throw AppError.validationError(`validator.${parentType}.strict`, {
        propertyPath,
        extraKey: key,
      });
    }
  }
  result["where"] = anonymousValidator1460353109(
    value["where"],
    `${propertyPath}.where`,
    errors,
  );
  result["limit"] = anonymousValidator532730482(
    value["limit"],
    `${propertyPath}.limit`,
    errors,
  );
  result["offset"] = anonymousValidator532730482(
    value["offset"],
    `${propertyPath}.offset`,
    errors,
  );
  result["viaFile"] = anonymousValidator937805268(
    value["viaFile"],
    `${propertyPath}.viaFile`,
    errors,
  );
  result["viaParent"] = anonymousValidator1011510152(
    value["viaParent"],
    `${propertyPath}.viaParent`,
    errors,
  );
  result["viaChildren"] = anonymousValidator251087480(
    value["viaChildren"],
    `${propertyPath}.viaChildren`,
    errors,
  );
  return result;
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {undefined|StoreFileGroupViewQueryTraverser|undefined}
 */
export function anonymousValidator1240721499(
  value,
  propertyPath,
  errors = [],
  parentType = "reference",
) {
  if (isNil(value)) {
    return value;
  }
  return anonymousValidator1329935837(value, propertyPath, errors);
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {{"where"?: StoreFileWhere, "limit"?: number, "offset"?: number, "viaGroup"?: StoreFileGroupQueryTraverser, "viaGroupView"?: StoreFileGroupViewQueryTraverser, }|undefined}
 */
export function anonymousValidator474447723(
  value,
  propertyPath,
  errors = [],
  parentType = "object",
) {
  if (isNil(value)) {
    throw AppError.validationError(`validator.${parentType}.undefined`, {
      propertyPath,
    });
  }
  if (typeof value !== "object") {
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath,
    });
  }
  const result = Object.create(null);
  for (const key of Object.keys(value)) {
    if (!objectKeys474447723.has(key)) {
      throw AppError.validationError(`validator.${parentType}.strict`, {
        propertyPath,
        extraKey: key,
      });
    }
  }
  result["where"] = anonymousValidator1200800342(
    value["where"],
    `${propertyPath}.where`,
    errors,
  );
  result["limit"] = anonymousValidator532730482(
    value["limit"],
    `${propertyPath}.limit`,
    errors,
  );
  result["offset"] = anonymousValidator532730482(
    value["offset"],
    `${propertyPath}.offset`,
    errors,
  );
  result["viaGroup"] = anonymousValidator970644004(
    value["viaGroup"],
    `${propertyPath}.viaGroup`,
    errors,
  );
  result["viaGroupView"] = anonymousValidator1240721499(
    value["viaGroupView"],
    `${propertyPath}.viaGroupView`,
    errors,
  );
  return result;
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {undefined|StoreFileQueryTraverser|undefined}
 */
export function anonymousValidator176237280(
  value,
  propertyPath,
  errors = [],
  parentType = "reference",
) {
  if (isNil(value)) {
    return value;
  }
  return anonymousValidator474447723(value, propertyPath, errors);
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {undefined|StoreFileGroupQueryBuilder|undefined}
 */
export function anonymousValidator1655050980(
  value,
  propertyPath,
  errors = [],
  parentType = "reference",
) {
  if (isNil(value)) {
    return value;
  }
  return anonymousValidator94385236(value, propertyPath, errors);
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {undefined|StoreFileGroupQueryBuilder|undefined}
 */
export function anonymousValidator490822395(
  value,
  propertyPath,
  errors = [],
  parentType = "reference",
) {
  if (isNil(value)) {
    return value;
  }
  return anonymousValidator94385236(value, propertyPath, errors);
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {{"where"?: StoreFileGroupWhere, "as"?: string, "limit"?: number, "offset"?: number, "file"?: StoreFileQueryBuilder, "viaFile"?: StoreFileQueryTraverser, "parent"?: StoreFileGroupQueryBuilder, "viaParent"?: StoreFileGroupQueryTraverser, "children"?: StoreFileGroupQueryBuilder, "viaChildren"?: StoreFileGroupQueryTraverser, }|undefined}
 */
export function anonymousValidator94385236(
  value,
  propertyPath,
  errors = [],
  parentType = "object",
) {
  if (isNil(value)) {
    throw AppError.validationError(`validator.${parentType}.undefined`, {
      propertyPath,
    });
  }
  if (typeof value !== "object") {
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath,
    });
  }
  const result = Object.create(null);
  for (const key of Object.keys(value)) {
    if (!objectKeys94385236.has(key)) {
      throw AppError.validationError(`validator.${parentType}.strict`, {
        propertyPath,
        extraKey: key,
      });
    }
  }
  result["where"] = anonymousValidator1321088693(
    value["where"],
    `${propertyPath}.where`,
    errors,
  );
  result["as"] = anonymousValidator1173353814(
    value["as"],
    `${propertyPath}.as`,
    errors,
  );
  result["limit"] = anonymousValidator532730482(
    value["limit"],
    `${propertyPath}.limit`,
    errors,
  );
  result["offset"] = anonymousValidator532730482(
    value["offset"],
    `${propertyPath}.offset`,
    errors,
  );
  result["file"] = anonymousValidator1309963980(
    value["file"],
    `${propertyPath}.file`,
    errors,
  );
  result["viaFile"] = anonymousValidator176237280(
    value["viaFile"],
    `${propertyPath}.viaFile`,
    errors,
  );
  result["parent"] = anonymousValidator1655050980(
    value["parent"],
    `${propertyPath}.parent`,
    errors,
  );
  result["viaParent"] = anonymousValidator139189942(
    value["viaParent"],
    `${propertyPath}.viaParent`,
    errors,
  );
  result["children"] = anonymousValidator490822395(
    value["children"],
    `${propertyPath}.children`,
    errors,
  );
  result["viaChildren"] = anonymousValidator766879734(
    value["viaChildren"],
    `${propertyPath}.viaChildren`,
    errors,
  );
  return result;
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {undefined|StoreFileGroupQueryBuilder|undefined}
 */
export function anonymousValidator302140482(
  value,
  propertyPath,
  errors = [],
  parentType = "reference",
) {
  if (isNil(value)) {
    return value;
  }
  return anonymousValidator94385236(value, propertyPath, errors);
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {undefined|StoreFileQueryBuilder|undefined}
 */
export function anonymousValidator2058998214(
  value,
  propertyPath,
  errors = [],
  parentType = "reference",
) {
  if (isNil(value)) {
    return value;
  }
  return anonymousValidator1644755967(value, propertyPath, errors);
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {undefined|StoreFileGroupViewQueryBuilder|undefined}
 */
export function anonymousValidator1669303463(
  value,
  propertyPath,
  errors = [],
  parentType = "reference",
) {
  if (isNil(value)) {
    return value;
  }
  return anonymousValidator57343783(value, propertyPath, errors);
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {undefined|StoreFileGroupViewQueryBuilder|undefined}
 */
export function anonymousValidator1695449880(
  value,
  propertyPath,
  errors = [],
  parentType = "reference",
) {
  if (isNil(value)) {
    return value;
  }
  return anonymousValidator57343783(value, propertyPath, errors);
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {{"where"?: StoreFileGroupViewWhere, "as"?: string, "limit"?: number, "offset"?: number, "file"?: StoreFileQueryBuilder, "viaFile"?: StoreFileQueryTraverser, "parent"?: StoreFileGroupViewQueryBuilder, "viaParent"?: StoreFileGroupViewQueryTraverser, "children"?: StoreFileGroupViewQueryBuilder, "viaChildren"?: StoreFileGroupViewQueryTraverser, }|undefined}
 */
export function anonymousValidator57343783(
  value,
  propertyPath,
  errors = [],
  parentType = "object",
) {
  if (isNil(value)) {
    throw AppError.validationError(`validator.${parentType}.undefined`, {
      propertyPath,
    });
  }
  if (typeof value !== "object") {
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath,
    });
  }
  const result = Object.create(null);
  for (const key of Object.keys(value)) {
    if (!objectKeys57343783.has(key)) {
      throw AppError.validationError(`validator.${parentType}.strict`, {
        propertyPath,
        extraKey: key,
      });
    }
  }
  result["where"] = anonymousValidator1460353109(
    value["where"],
    `${propertyPath}.where`,
    errors,
  );
  result["as"] = anonymousValidator1173353814(
    value["as"],
    `${propertyPath}.as`,
    errors,
  );
  result["limit"] = anonymousValidator532730482(
    value["limit"],
    `${propertyPath}.limit`,
    errors,
  );
  result["offset"] = anonymousValidator532730482(
    value["offset"],
    `${propertyPath}.offset`,
    errors,
  );
  result["file"] = anonymousValidator2058998214(
    value["file"],
    `${propertyPath}.file`,
    errors,
  );
  result["viaFile"] = anonymousValidator937805268(
    value["viaFile"],
    `${propertyPath}.viaFile`,
    errors,
  );
  result["parent"] = anonymousValidator1669303463(
    value["parent"],
    `${propertyPath}.parent`,
    errors,
  );
  result["viaParent"] = anonymousValidator1011510152(
    value["viaParent"],
    `${propertyPath}.viaParent`,
    errors,
  );
  result["children"] = anonymousValidator1695449880(
    value["children"],
    `${propertyPath}.children`,
    errors,
  );
  result["viaChildren"] = anonymousValidator251087480(
    value["viaChildren"],
    `${propertyPath}.viaChildren`,
    errors,
  );
  return result;
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {undefined|StoreFileGroupViewQueryBuilder|undefined}
 */
export function anonymousValidator1261394366(
  value,
  propertyPath,
  errors = [],
  parentType = "reference",
) {
  if (isNil(value)) {
    return value;
  }
  return anonymousValidator57343783(value, propertyPath, errors);
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {{"where"?: StoreFileWhere, "as"?: string, "limit"?: number, "offset"?: number, "group"?: StoreFileGroupQueryBuilder, "viaGroup"?: StoreFileGroupQueryTraverser, "groupView"?: StoreFileGroupViewQueryBuilder, "viaGroupView"?: StoreFileGroupViewQueryTraverser, }|undefined}
 */
export function anonymousValidator1644755967(
  value,
  propertyPath,
  errors = [],
  parentType = "object",
) {
  if (isNil(value)) {
    throw AppError.validationError(`validator.${parentType}.undefined`, {
      propertyPath,
    });
  }
  if (typeof value !== "object") {
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath,
    });
  }
  const result = Object.create(null);
  for (const key of Object.keys(value)) {
    if (!objectKeys1644755967.has(key)) {
      throw AppError.validationError(`validator.${parentType}.strict`, {
        propertyPath,
        extraKey: key,
      });
    }
  }
  result["where"] = anonymousValidator1200800342(
    value["where"],
    `${propertyPath}.where`,
    errors,
  );
  result["as"] = anonymousValidator1173353814(
    value["as"],
    `${propertyPath}.as`,
    errors,
  );
  result["limit"] = anonymousValidator532730482(
    value["limit"],
    `${propertyPath}.limit`,
    errors,
  );
  result["offset"] = anonymousValidator532730482(
    value["offset"],
    `${propertyPath}.offset`,
    errors,
  );
  result["group"] = anonymousValidator302140482(
    value["group"],
    `${propertyPath}.group`,
    errors,
  );
  result["viaGroup"] = anonymousValidator970644004(
    value["viaGroup"],
    `${propertyPath}.viaGroup`,
    errors,
  );
  result["groupView"] = anonymousValidator1261394366(
    value["groupView"],
    `${propertyPath}.groupView`,
    errors,
  );
  result["viaGroupView"] = anonymousValidator1240721499(
    value["viaGroupView"],
    `${propertyPath}.viaGroupView`,
    errors,
  );
  return result;
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {undefined|StoreJobWhere|undefined}
 */
export function anonymousValidator1846156566(
  value,
  propertyPath,
  errors = [],
  parentType = "reference",
) {
  if (isNil(value)) {
    return value;
  }
  return anonymousValidator56200775(value, propertyPath, errors);
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {{"where"?: StoreJobWhere, "as"?: string, "limit"?: number, "offset"?: number, }|undefined}
 */
export function anonymousValidator338876686(
  value,
  propertyPath,
  errors = [],
  parentType = "object",
) {
  if (isNil(value)) {
    throw AppError.validationError(`validator.${parentType}.undefined`, {
      propertyPath,
    });
  }
  if (typeof value !== "object") {
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath,
    });
  }
  const result = Object.create(null);
  for (const key of Object.keys(value)) {
    if (!objectKeys338876686.has(key)) {
      throw AppError.validationError(`validator.${parentType}.strict`, {
        propertyPath,
        extraKey: key,
      });
    }
  }
  result["where"] = anonymousValidator1846156566(
    value["where"],
    `${propertyPath}.where`,
    errors,
  );
  result["as"] = anonymousValidator1173353814(
    value["as"],
    `${propertyPath}.as`,
    errors,
  );
  result["limit"] = anonymousValidator532730482(
    value["limit"],
    `${propertyPath}.limit`,
    errors,
  );
  result["offset"] = anonymousValidator532730482(
    value["offset"],
    `${propertyPath}.offset`,
    errors,
  );
  return result;
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {{"where"?: StoreJobWhere, "limit"?: number, "offset"?: number, }|undefined}
 */
export function anonymousValidator1959415486(
  value,
  propertyPath,
  errors = [],
  parentType = "object",
) {
  if (isNil(value)) {
    throw AppError.validationError(`validator.${parentType}.undefined`, {
      propertyPath,
    });
  }
  if (typeof value !== "object") {
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath,
    });
  }
  const result = Object.create(null);
  for (const key of Object.keys(value)) {
    if (!objectKeys1959415486.has(key)) {
      throw AppError.validationError(`validator.${parentType}.strict`, {
        propertyPath,
        extraKey: key,
      });
    }
  }
  result["where"] = anonymousValidator1846156566(
    value["where"],
    `${propertyPath}.where`,
    errors,
  );
  result["limit"] = anonymousValidator532730482(
    value["limit"],
    `${propertyPath}.limit`,
    errors,
  );
  result["offset"] = anonymousValidator532730482(
    value["offset"],
    `${propertyPath}.offset`,
    errors,
  );
  return result;
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {undefined|StoreSessionWhere|undefined}
 */
export function anonymousValidator440129641(
  value,
  propertyPath,
  errors = [],
  parentType = "reference",
) {
  if (isNil(value)) {
    return value;
  }
  return anonymousValidator1230824634(value, propertyPath, errors);
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {{"where"?: StoreSessionWhere, "as"?: string, "limit"?: number, "offset"?: number, }|undefined}
 */
export function anonymousValidator673744261(
  value,
  propertyPath,
  errors = [],
  parentType = "object",
) {
  if (isNil(value)) {
    throw AppError.validationError(`validator.${parentType}.undefined`, {
      propertyPath,
    });
  }
  if (typeof value !== "object") {
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath,
    });
  }
  const result = Object.create(null);
  for (const key of Object.keys(value)) {
    if (!objectKeys673744261.has(key)) {
      throw AppError.validationError(`validator.${parentType}.strict`, {
        propertyPath,
        extraKey: key,
      });
    }
  }
  result["where"] = anonymousValidator440129641(
    value["where"],
    `${propertyPath}.where`,
    errors,
  );
  result["as"] = anonymousValidator1173353814(
    value["as"],
    `${propertyPath}.as`,
    errors,
  );
  result["limit"] = anonymousValidator532730482(
    value["limit"],
    `${propertyPath}.limit`,
    errors,
  );
  result["offset"] = anonymousValidator532730482(
    value["offset"],
    `${propertyPath}.offset`,
    errors,
  );
  return result;
}
/**
 * @param {*} value
 * @param {string} propertyPath
 * @param {{ key: string, info: any }[]} errors
 * @param {string} parentType
 * @returns {{"where"?: StoreSessionWhere, "limit"?: number, "offset"?: number, }|undefined}
 */
export function anonymousValidator1611690207(
  value,
  propertyPath,
  errors = [],
  parentType = "object",
) {
  if (isNil(value)) {
    throw AppError.validationError(`validator.${parentType}.undefined`, {
      propertyPath,
    });
  }
  if (typeof value !== "object") {
    throw AppError.validationError(`validator.${parentType}.type`, {
      propertyPath,
    });
  }
  const result = Object.create(null);
  for (const key of Object.keys(value)) {
    if (!objectKeys1611690207.has(key)) {
      throw AppError.validationError(`validator.${parentType}.strict`, {
        propertyPath,
        extraKey: key,
      });
    }
  }
  result["where"] = anonymousValidator440129641(
    value["where"],
    `${propertyPath}.where`,
    errors,
  );
  result["limit"] = anonymousValidator532730482(
    value["limit"],
    `${propertyPath}.limit`,
    errors,
  );
  result["offset"] = anonymousValidator532730482(
    value["offset"],
    `${propertyPath}.offset`,
    errors,
  );
  return result;
}
